

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 07 13:36:08 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  000B68                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _CAN_ERRORCODE
    44  000B68  0004               	dw	4
    45                           
    46                           ;initializer for _HEARTBEAT_ERRORCODE
    47  000B6A  0003               	dw	3
    48                           
    49                           ;initializer for _BATTERISTATUS_ID
    50  000B6C  02                 	db	2
    51                           
    52                           ;initializer for _MOTOR_ID
    53  000B6D  01                 	db	1
    54                           
    55                           	psect	nvBANK0
    56  000083                     __pnvBANK0:
    57                           	opt stack 0
    58  000083                     _deadArea_gas:
    59                           	opt stack 0
    60  000083                     	ds	2
    61  000085                     _count:
    62                           	opt stack 0
    63  000085                     	ds	1
    64  0000                     _B0CONbits	set	3712
    65  0000                     _B0D0	set	3718
    66  0000                     _B0D1	set	3719
    67  0000                     _B0D2	set	3720
    68  0000                     _B0D3	set	3721
    69  0000                     _B0D4	set	3722
    70  0000                     _B0D5	set	3723
    71  0000                     _B0D6	set	3724
    72  0000                     _B0D7	set	3725
    73  0000                     _B0DLC	set	3717
    74  0000                     _B0EIDH	set	3715
    75  0000                     _B0EIDL	set	3716
    76  0000                     _B0SIDH	set	3713
    77  0000                     _B0SIDL	set	3714
    78  0000                     _BRGCON1	set	3651
    79  0000                     _BRGCON2	set	3652
    80  0000                     _BRGCON3	set	3653
    81  0000                     _BSEL0	set	3709
    82  0000                     _MSEL0	set	3705
    83  0000                     _MSEL1	set	3706
    84  0000                     _MSEL2	set	3707
    85  0000                     _MSEL3	set	3708
    86  0000                     _RXF0EIDH	set	3810
    87  0000                     _RXF0EIDL	set	3811
    88  0000                     _RXF0SIDH	set	3808
    89  0000                     _RXF0SIDL	set	3809
    90  0000                     _RXF1EIDH	set	3814
    91  0000                     _RXF1EIDL	set	3815
    92  0000                     _RXF1SIDH	set	3812
    93  0000                     _RXF1SIDL	set	3813
    94  0000                     _RXF2EIDH	set	3818
    95  0000                     _RXF2EIDL	set	3819
    96  0000                     _RXF2SIDH	set	3816
    97  0000                     _RXF2SIDL	set	3817
    98  0000                     _RXFBCON0	set	3697
    99  0000                     _RXFBCON1	set	3698
   100  0000                     _RXFBCON2	set	3699
   101  0000                     _RXFBCON3	set	3700
   102  0000                     _RXFBCON4	set	3701
   103  0000                     _RXFBCON5	set	3702
   104  0000                     _RXFBCON6	set	3703
   105  0000                     _RXFBCON7	set	3704
   106  0000                     _RXFCON0	set	3654
   107  0000                     _RXFCON1	set	3655
   108  0000                     _RXM0EIDH	set	3834
   109  0000                     _RXM0EIDL	set	3835
   110  0000                     _RXM0SIDH	set	3832
   111  0000                     _RXM0SIDL	set	3833
   112  0000                     _RXM1EIDH	set	3838
   113  0000                     _RXM1EIDL	set	3839
   114  0000                     _RXM1SIDH	set	3836
   115  0000                     _RXM1SIDL	set	3837
   116  0000                     _ANCON0	set	3933
   117  0000                     _ANCON1	set	3932
   118  0000                     _RXB1CON	set	3888
   119  0000                     _RXB1CONbits	set	3888
   120  0000                     _RXB1D0	set	3894
   121  0000                     _RXB1D1	set	3895
   122  0000                     _RXB1D2	set	3896
   123  0000                     _RXB1D3	set	3897
   124  0000                     _RXB1D4	set	3898
   125  0000                     _RXB1D5	set	3899
   126  0000                     _RXB1D6	set	3900
   127  0000                     _RXB1D7	set	3901
   128  0000                     _RXB1DLC	set	3893
   129  0000                     _RXB1EIDH	set	3891
   130  0000                     _RXB1EIDL	set	3892
   131  0000                     _RXB1SIDH	set	3889
   132  0000                     _RXB1SIDL	set	3890
   133  0000                     _TXB0CONbits	set	3872
   134  0000                     _TXB0D0	set	3878
   135  0000                     _TXB0D1	set	3879
   136  0000                     _TXB0D2	set	3880
   137  0000                     _TXB0D3	set	3881
   138  0000                     _TXB0D4	set	3882
   139  0000                     _TXB0D5	set	3883
   140  0000                     _TXB0D6	set	3884
   141  0000                     _TXB0D7	set	3885
   142  0000                     _TXB0DLC	set	3877
   143  0000                     _TXB0EIDH	set	3875
   144  0000                     _TXB0EIDL	set	3876
   145  0000                     _TXB0SIDH	set	3873
   146  0000                     _TXB0SIDL	set	3874
   147  0000                     _ADCON0	set	4034
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _ADCON1	set	4033
   150  0000                     _ADCON2	set	4032
   151  0000                     _ADCON2bits	set	4032
   152  0000                     _ADRESH	set	4036
   153  0000                     _ADRESL	set	4035
   154  0000                     _CANCON	set	3951
   155  0000                     _CANSTATbits	set	3950
   156  0000                     _ECANCON	set	3954
   157  0000                     _INTCONbits	set	4082
   158  0000                     _LATA	set	3977
   159  0000                     _LATAbits	set	3977
   160  0000                     _LATB	set	3978
   161  0000                     _LATBbits	set	3978
   162  0000                     _LATC	set	3979
   163  0000                     _OSCCONbits	set	4051
   164  0000                     _OSCTUNEbits	set	3995
   165  0000                     _PIE1bits	set	3997
   166  0000                     _PIR5bits	set	3959
   167  0000                     _RCONbits	set	4048
   168  0000                     _RXB0CON	set	3936
   169  0000                     _RXB0CONbits	set	3936
   170  0000                     _RXB0D0	set	3942
   171  0000                     _RXB0D1	set	3943
   172  0000                     _RXB0D2	set	3944
   173  0000                     _RXB0D3	set	3945
   174  0000                     _RXB0D4	set	3946
   175  0000                     _RXB0D5	set	3947
   176  0000                     _RXB0D6	set	3948
   177  0000                     _RXB0D7	set	3949
   178  0000                     _RXB0DLC	set	3941
   179  0000                     _RXB0EIDH	set	3939
   180  0000                     _RXB0EIDL	set	3940
   181  0000                     _RXB0SIDH	set	3937
   182  0000                     _RXB0SIDL	set	3938
   183  0000                     _T0CONbits	set	4053
   184  0000                     _T1CONbits	set	4045
   185  0000                     _T1GCONbits	set	4010
   186  0000                     _TRISA	set	3986
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISC	set	3988
   189  0000                     _IRXIF	set	31679
   190  0000                     _TMR0IF	set	32658
   191  0000                     _TMR1IF	set	31984
   192                           
   193                           ; #config settings
   194  0000                     
   195                           	psect	cinit
   196  000974                     __pcinit:
   197                           	opt stack 0
   198  000974                     start_initialization:
   199                           	opt stack 0
   200  000974                     __initialization:
   201                           	opt stack 0
   202                           
   203                           ; Clear objects allocated to BANK0 (22 bytes)
   204  000974  EE00  F060         	lfsr	0,__pbssBANK0
   205  000978  0E16               	movlw	22
   206  00097A                     clear_0:
   207  00097A  6AEE               	clrf	postinc0,c
   208  00097C  06E8               	decf	wreg,f,c
   209  00097E  E1FD               	bnz	clear_0
   210                           
   211                           ; Clear objects allocated to COMRAM (52 bytes)
   212  000980  EE00  F001         	lfsr	0,__pbssCOMRAM
   213  000984  0E34               	movlw	52
   214  000986                     clear_1:
   215  000986  6AEE               	clrf	postinc0,c
   216  000988  06E8               	decf	wreg,f,c
   217  00098A  E1FD               	bnz	clear_1
   218                           
   219                           ; Initialize objects allocated to COMRAM (6 bytes)
   220                           ; load TBLPTR registers with __pidataCOMRAM
   221  00098C  0E68               	movlw	low __pidataCOMRAM
   222  00098E  6EF6               	movwf	tblptrl,c
   223  000990  0E0B               	movlw	high __pidataCOMRAM
   224  000992  6EF7               	movwf	tblptrh,c
   225  000994  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   226  000996  6EF8               	movwf	tblptru,c
   227  000998  EE00  F04C         	lfsr	0,__pdataCOMRAM
   228  00099C  EE10 F006          	lfsr	1,6
   229  0009A0                     copy_data0:
   230  0009A0  0009               	tblrd		*+
   231  0009A2  CFF5 FFEE          	movff	tablat,postinc0
   232  0009A6  50E5               	movf	postdec1,w,c
   233  0009A8  50E1               	movf	fsr1l,w,c
   234  0009AA  E1FA               	bnz	copy_data0
   235  0009AC                     end_of_initialization:
   236                           	opt stack 0
   237  0009AC                     __end_of__initialization:
   238                           	opt stack 0
   239  0009AC  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240  0009AE  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241  0009B0  0100               	movlb	0
   242  0009B2  EFB0  F002         	goto	_main	;jump to C main() function
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           postdec1	equ	0xFE5
   250                           fsr1l	equ	0xFE1
   251                           
   252                           	psect	bssCOMRAM
   253  000001                     __pbssCOMRAM:
   254                           	opt stack 0
   255  000001                     _blinkCounter:
   256                           	opt stack 0
   257  000001                     	ds	4
   258  000005                     _CAN_ERRORBIT:
   259                           	opt stack 0
   260  000005                     	ds	2
   261  000007                     _FIRST_SEND:
   262                           	opt stack 0
   263  000007                     	ds	2
   264  000009                     _MAP_BACKLIGHT:
   265                           	opt stack 0
   266  000009                     	ds	2
   267  00000B                     _MAP_BATTERYSTATUS:
   268                           	opt stack 0
   269  00000B                     	ds	2
   270  00000D                     _MAP_BRAKE:
   271                           	opt stack 0
   272  00000D                     	ds	2
   273  00000F                     _MAP_DIRECTION:
   274                           	opt stack 0
   275  00000F                     	ds	2
   276  000011                     _MAP_H_BLINK:
   277                           	opt stack 0
   278  000011                     	ds	2
   279  000013                     _MAP_SAFETYPIN:
   280                           	opt stack 0
   281  000013                     	ds	2
   282  000015                     _MAP_STOP:
   283                           	opt stack 0
   284  000015                     	ds	2
   285  000017                     _MAP_V_BLINK:
   286                           	opt stack 0
   287  000017                     	ds	2
   288  000019                     _TEMP_MAP_BACKLIGHT:
   289                           	opt stack 0
   290  000019                     	ds	2
   291  00001B                     _TEMP_MAP_BRAKE:
   292                           	opt stack 0
   293  00001B                     	ds	2
   294  00001D                     _TEMP_MAP_DIRECTION:
   295                           	opt stack 0
   296  00001D                     	ds	2
   297  00001F                     _TEMP_MAP_H_BLINK:
   298                           	opt stack 0
   299  00001F                     	ds	2
   300  000021                     _TEMP_MAP_SAFETYPIN:
   301                           	opt stack 0
   302  000021                     	ds	2
   303  000023                     _TEMP_MAP_STOP:
   304                           	opt stack 0
   305  000023                     	ds	2
   306  000025                     _TEMP_MAP_V_BLINK:
   307                           	opt stack 0
   308  000025                     	ds	2
   309  000027                     _BITDATA:
   310                           	opt stack 0
   311  000027                     	ds	1
   312  000028                     _TEMP_ACCELERATOR:
   313                           	opt stack 0
   314  000028                     	ds	1
   315  000029                     _buttonWasPressed:
   316                           	opt stack 0
   317  000029                     	ds	1
   318  00002A                     _temp_D2:
   319                           	opt stack 0
   320  00002A                     	ds	1
   321  00002B                     _temp_D3:
   322                           	opt stack 0
   323  00002B                     	ds	1
   324  00002C                     _temp_D4:
   325                           	opt stack 0
   326  00002C                     	ds	1
   327  00002D                     _temp_D5:
   328                           	opt stack 0
   329  00002D                     	ds	1
   330  00002E                     _temp_D6:
   331                           	opt stack 0
   332  00002E                     	ds	1
   333  00002F                     _temp_D7:
   334                           	opt stack 0
   335  00002F                     	ds	1
   336  000030                     _temp_DLC:
   337                           	opt stack 0
   338  000030                     	ds	1
   339  000031                     _temp_EIDH:
   340                           	opt stack 0
   341  000031                     	ds	1
   342  000032                     _temp_EIDL:
   343                           	opt stack 0
   344  000032                     	ds	1
   345  000033                     _temp_SIDH:
   346                           	opt stack 0
   347  000033                     	ds	1
   348  000034                     _temp_SIDL:
   349                           	opt stack 0
   350  000034                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	dataCOMRAM
   361  00004C                     __pdataCOMRAM:
   362                           	opt stack 0
   363  00004C                     _CAN_ERRORCODE:
   364                           	opt stack 0
   365  00004C                     	ds	2
   366  00004E                     _HEARTBEAT_ERRORCODE:
   367                           	opt stack 0
   368  00004E                     	ds	2
   369  000050                     _BATTERISTATUS_ID:
   370                           	opt stack 0
   371  000050                     	ds	1
   372  000051                     _MOTOR_ID:
   373                           	opt stack 0
   374  000051                     	ds	1
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bssBANK0
   385  000060                     __pbssBANK0:
   386                           	opt stack 0
   387  000060                     _heartBeatCounter:
   388                           	opt stack 0
   389  000060                     	ds	4
   390  000064                     _interruptCounter:
   391                           	opt stack 0
   392  000064                     	ds	4
   393  000068                     _MAP_ACCELERATOR:
   394                           	opt stack 0
   395  000068                     	ds	2
   396  00006A                     _MAP_HEARTBEAT:
   397                           	opt stack 0
   398  00006A                     	ds	2
   399  00006C                     _MAP_VELOCITY:
   400                           	opt stack 0
   401  00006C                     	ds	2
   402  00006E                     _OFFSET_ACCELERATOR:
   403                           	opt stack 0
   404  00006E                     	ds	2
   405  000070                     _TEMP_MAP_ACCELERATOR:
   406                           	opt stack 0
   407  000070                     	ds	2
   408  000072                     _TEMP_MAP_HEARTBEAT:
   409                           	opt stack 0
   410  000072                     	ds	2
   411  000074                     _heartbeatCount:
   412                           	opt stack 0
   413  000074                     	ds	2
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           
   423                           	psect	cstackBANK0
   424  000076                     __pcstackBANK0:
   425                           	opt stack 0
   426  000076                     ??_unZipCAN:
   427  000076                     ?___awdiv:
   428                           	opt stack 0
   429  000076                     ECAN_Receive@RXMsgFlag:
   430                           	opt stack 0
   431  000076                     ECAN_Transmit@SIDL:
   432                           	opt stack 0
   433  000076                     Delay@count:
   434                           	opt stack 0
   435  000076                     ___awdiv@dividend:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x0
   439  000076                     	ds	1
   440  000077                     ECAN_Transmit@DLC:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444  000077                     	ds	1
   445  000078                     ?_readAnalog:
   446                           	opt stack 0
   447  000078                     ECAN_Transmit@TRANSMIT_ID:
   448                           	opt stack 0
   449  000078                     ___awdiv@divisor:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453  000078                     	ds	1
   454  000079                     ECAN_Transmit@DATA1:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x3
   458  000079                     	ds	1
   459  00007A                     ECAN_Transmit@DATA2:
   460                           	opt stack 0
   461  00007A                     ___awdiv@counter:
   462                           	opt stack 0
   463  00007A                     readAnalog@low:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x4
   467  00007A                     	ds	1
   468  00007B                     ECAN_Transmit@DATA3:
   469                           	opt stack 0
   470  00007B                     ___awdiv@sign:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  00007B                     	ds	1
   475  00007C                     ECAN_Transmit@DATA4:
   476                           	opt stack 0
   477  00007C                     readAnalog@high:
   478                           	opt stack 0
   479  00007C                     ___awdiv@quotient:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x6
   483  00007C                     	ds	1
   484  00007D                     ECAN_Transmit@DATA5:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x7
   488  00007D                     	ds	1
   489  00007E                     ??_checkAccelerator:
   490  00007E                     ECAN_Transmit@DATA6:
   491                           	opt stack 0
   492  00007E                     readAnalog@totBattery:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x8
   496  00007E                     	ds	1
   497  00007F                     ECAN_Transmit@DATA7:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501  00007F                     	ds	1
   502  000080                     ECAN_Transmit@SIDH:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xA
   506  000080                     	ds	1
   507  000081                     checkAccelerator@HALF_ACCELERATOR:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0xB
   511  000081                     	ds	2
   512  000083                     tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           ; 0 bytes @ 0xD
   522                           
   523                           	psect	cstackCOMRAM
   524  000035                     __pcstackCOMRAM:
   525                           	opt stack 0
   526  000035                     i2Delay@count:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x0
   530  000035                     	ds	2
   531  000037                     danger@errorCode:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x2
   535  000037                     	ds	2
   536  000039                     ??_danger:
   537                           
   538                           ; 0 bytes @ 0x4
   539  000039                     	ds	1
   540  00003A                     danger@i:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x5
   544  00003A                     	ds	2
   545  00003C                     danger@i_1322:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x7
   549  00003C                     	ds	2
   550  00003E                     ??_ISR:
   551                           
   552                           ; 0 bytes @ 0x9
   553  00003E                     	ds	14
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 9 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  2  132[None  ] int 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels required when called:    6
   588 ;; This function calls:
   589 ;;		_CANSetup
   590 ;;		_Delay
   591 ;;		_ECAN_Receive
   592 ;;		_ECAN_Transmit
   593 ;;		_InitDevice
   594 ;;		_checkAccelerator
   595 ;;		_checkBacklight
   596 ;;		_checkBrake
   597 ;;		_checkDirection
   598 ;;		_checkH_blink
   599 ;;		_checkSafetyPin
   600 ;;		_checkStop
   601 ;;		_checkV_blink
   602 ;;		_setup_Interrupt
   603 ;;		_unZipCAN
   604 ;;		_updateInputs
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text0
   611  000560                     __ptext0:
   612                           	opt stack 0
   613  000560                     _main:
   614                           	opt stack 25
   615                           
   616                           ;main.c: 12: InitDevice();
   617                           
   618                           ;incstack = 0
   619  000560  EC77  F001         	call	_InitDevice	;wreg free
   620                           
   621                           ;main.c: 13: CANSetup();
   622  000564  EC17  F002         	call	_CANSetup	;wreg free
   623                           
   624                           ;main.c: 14: setup_Interrupt();
   625  000568  EC33  F005         	call	_setup_Interrupt	;wreg free
   626                           
   627                           ;main.c: 16: heartBeatCounter = 0;
   628  00056C  0E00               	movlw	0
   629  00056E  0100               	movlb	0	; () banked
   630  000570  6F60               	movwf	_heartBeatCounter& (0+255),b
   631  000572  0E00               	movlw	0
   632  000574  6F61               	movwf	(_heartBeatCounter+1)& (0+255),b
   633  000576  0E00               	movlw	0
   634  000578  6F62               	movwf	(_heartBeatCounter+2)& (0+255),b
   635  00057A  0E00               	movlw	0
   636  00057C  6F63               	movwf	(_heartBeatCounter+3)& (0+255),b
   637                           
   638                           ; BSR set to: 0
   639                           ;main.c: 17: FIRST_SEND = 1;
   640  00057E  0E00               	movlw	0
   641  000580  6E08               	movwf	_FIRST_SEND+1,c
   642  000582  0E01               	movlw	1
   643  000584  6E07               	movwf	_FIRST_SEND,c
   644                           
   645                           ; BSR set to: 0
   646                           ;main.c: 18: interruptCounter = 0;
   647  000586  0E00               	movlw	0
   648  000588  0100               	movlb	0	; () banked
   649  00058A  6F64               	movwf	_interruptCounter& (0+255),b
   650  00058C  0E00               	movlw	0
   651  00058E  6F65               	movwf	(_interruptCounter+1)& (0+255),b
   652  000590  0E00               	movlw	0
   653  000592  6F66               	movwf	(_interruptCounter+2)& (0+255),b
   654  000594  0E00               	movlw	0
   655  000596  6F67               	movwf	(_interruptCounter+3)& (0+255),b
   656                           
   657                           ; BSR set to: 0
   658                           ;main.c: 20: LATAbits.LATA6 = 1;
   659  000598  8C89               	bsf	3977,6,c	;volatile
   660                           
   661                           ; BSR set to: 0
   662                           ;main.c: 21: LATAbits.LATA7 = 0;
   663  00059A  9E89               	bcf	3977,7,c	;volatile
   664  00059C                     l2574:
   665                           
   666                           ;main.c: 26: if(ECAN_Receive()){
   667  00059C  EC1F  F003         	call	_ECAN_Receive	;wreg free
   668  0005A0  0900               	iorlw	0
   669  0005A2  B4D8               	btfsc	status,2,c
   670  0005A4  D016               	goto	l2586
   671                           
   672                           ;main.c: 27: FIRST_SEND = 0;
   673  0005A6  0E00               	movlw	0
   674  0005A8  6E08               	movwf	_FIRST_SEND+1,c
   675  0005AA  0E00               	movlw	0
   676  0005AC  6E07               	movwf	_FIRST_SEND,c
   677                           
   678                           ;main.c: 28: LATBbits.LATB1 = 1;
   679  0005AE  828A               	bsf	3978,1,c	;volatile
   680                           
   681                           ;main.c: 29: unZipCAN();
   682  0005B0  ECB9  F000         	call	_unZipCAN	;wreg free
   683                           
   684                           ;main.c: 30: if(TEMP_MAP_HEARTBEAT == 1){
   685  0005B4  0100               	movlb	0	; () banked
   686  0005B6  0572               	decf	_TEMP_MAP_HEARTBEAT& (0+255),w,b
   687  0005B8  0100               	movlb	0	; () banked
   688  0005BA  1173               	iorwf	(_TEMP_MAP_HEARTBEAT+1)& (0+255),w,b
   689  0005BC  A4D8               	btfss	status,2,c
   690  0005BE  D009               	goto	l2586
   691                           
   692                           ; BSR set to: 0
   693                           ;main.c: 31: heartBeatCounter = 0;
   694  0005C0  0E00               	movlw	0
   695  0005C2  0100               	movlb	0	; () banked
   696  0005C4  6F60               	movwf	_heartBeatCounter& (0+255),b
   697  0005C6  0E00               	movlw	0
   698  0005C8  6F61               	movwf	(_heartBeatCounter+1)& (0+255),b
   699  0005CA  0E00               	movlw	0
   700  0005CC  6F62               	movwf	(_heartBeatCounter+2)& (0+255),b
   701  0005CE  0E00               	movlw	0
   702  0005D0  6F63               	movwf	(_heartBeatCounter+3)& (0+255),b
   703  0005D2                     l2586:
   704                           
   705                           ;main.c: 32: }
   706                           ;main.c: 34: }
   707                           ;main.c: 41: checkBrake();
   708  0005D2  EC4A  F005         	call	_checkBrake	;wreg free
   709                           
   710                           ;main.c: 42: checkBacklight();
   711  0005D6  EC6F  F005         	call	_checkBacklight	;wreg free
   712                           
   713                           ;main.c: 43: checkV_blink();
   714  0005DA  EC1A  F005         	call	_checkV_blink	;wreg free
   715                           
   716                           ;main.c: 44: checkH_blink();
   717  0005DE  ECFC  F004         	call	_checkH_blink	;wreg free
   718                           
   719                           ;main.c: 45: checkDirection();
   720  0005E2  EC98  F005         	call	_checkDirection	;wreg free
   721                           
   722                           ;main.c: 46: checkSafetyPin();
   723  0005E6  EC8C  F005         	call	_checkSafetyPin	;wreg free
   724                           
   725                           ;main.c: 47: checkStop();
   726  0005EA  EC5D  F005         	call	_checkStop	;wreg free
   727                           
   728                           ;main.c: 48: checkAccelerator();
   729  0005EE  EC41  F004         	call	_checkAccelerator	;wreg free
   730                           
   731                           ;main.c: 52: updateInputs();
   732  0005F2  ECAD  F005         	call	_updateInputs	;wreg free
   733                           
   734                           ;main.c: 54: ECAN_Transmit(0x32,0xC0, 0x08,
   735                           ;main.c: 55: 0,
   736                           ;main.c: 56: MAP_VELOCITY,
   737                           ;main.c: 57: 0x01,
   738                           ;main.c: 58: MAP_BATTERYSTATUS & 0x00FF,
   739                           ;main.c: 59: (MAP_BATTERYSTATUS & 0xFF00) >> 8,
   740                           ;main.c: 60: temp_D5,
   741                           ;main.c: 61: temp_D6,
   742                           ;main.c: 62: temp_D7);
   743  0005F6  0EC0               	movlw	192
   744  0005F8  0100               	movlb	0	; () banked
   745  0005FA  6F76               	movwf	ECAN_Transmit@SIDL& (0+255),b
   746  0005FC  0E08               	movlw	8
   747  0005FE  0100               	movlb	0	; () banked
   748  000600  6F77               	movwf	ECAN_Transmit@DLC& (0+255),b
   749  000602  0E00               	movlw	0
   750  000604  0100               	movlb	0	; () banked
   751  000606  6F78               	movwf	ECAN_Transmit@TRANSMIT_ID& (0+255),b
   752  000608  C06C  F079         	movff	_MAP_VELOCITY,ECAN_Transmit@DATA1
   753  00060C  0E01               	movlw	1
   754  00060E  0100               	movlb	0	; () banked
   755  000610  6F7A               	movwf	ECAN_Transmit@DATA2& (0+255),b
   756  000612  C00B  F07B         	movff	_MAP_BATTERYSTATUS,ECAN_Transmit@DATA3
   757  000616  500C               	movf	_MAP_BATTERYSTATUS+1,w,c
   758  000618  0100               	movlb	0	; () banked
   759  00061A  6F7C               	movwf	ECAN_Transmit@DATA4& (0+255),b
   760  00061C  C02D  F07D         	movff	_temp_D5,ECAN_Transmit@DATA5
   761  000620  C02E  F07E         	movff	_temp_D6,ECAN_Transmit@DATA6
   762  000624  C02F  F07F         	movff	_temp_D7,ECAN_Transmit@DATA7
   763  000628  0E32               	movlw	50
   764  00062A  ECDB  F004         	call	_ECAN_Transmit
   765                           
   766                           ;main.c: 65: Delay((unsigned int)(64/4)*80 * 5);
   767  00062E  0E19               	movlw	25
   768  000630  0100               	movlb	0	; () banked
   769  000632  6F77               	movwf	(Delay@count+1)& (0+255),b
   770  000634  0E00               	movlw	0
   771  000636  6F76               	movwf	Delay@count& (0+255),b
   772  000638  EC80  F005         	call	_Delay	;wreg free
   773  00063C  D7AF               	goto	l2574
   774  00063E                     __end_of_main:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1l	equ	0xFE1
   784                           status	equ	0xFD8
   785                           
   786 ;; *************** function _updateInputs *****************
   787 ;; Defined at:
   788 ;;		line 121 in file "peripherals.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;		None               void
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; Hardware stack levels required when called:    5
   809 ;; This function calls:
   810 ;;		_readAnalog
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text1
   817  000B5A                     __ptext1:
   818                           	opt stack 0
   819  000B5A                     _updateInputs:
   820                           	opt stack 25
   821                           
   822                           ;peripherals.c: 124: MAP_BATTERYSTATUS = readAnalog();
   823                           
   824                           ;incstack = 0
   825  000B5A  EC8B  F004         	call	_readAnalog	;wreg free
   826  000B5E  C078  F00B         	movff	?_readAnalog,_MAP_BATTERYSTATUS
   827  000B62  C079  F00C         	movff	?_readAnalog+1,_MAP_BATTERYSTATUS+1
   828  000B66  0012               	return		;funcret
   829  000B68                     __end_of_updateInputs:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           postinc0	equ	0xFEE
   836                           wreg	equ	0xFE8
   837                           postdec1	equ	0xFE5
   838                           fsr1l	equ	0xFE1
   839                           status	equ	0xFD8
   840                           
   841 ;; *************** function _readAnalog *****************
   842 ;; Defined at:
   843 ;;		line 130 in file "peripherals.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  totBattery      2    8[BANK0 ] int 
   848 ;;  high            2    6[BANK0 ] int 
   849 ;;  low             2    4[BANK0 ] int 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  2    2[BANK0 ] int 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;Total ram usage:        8 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    4
   866 ;; This function calls:
   867 ;;		_Delay
   868 ;; This function is called by:
   869 ;;		_updateInputs
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text2
   874  000916                     __ptext2:
   875                           	opt stack 0
   876  000916                     _readAnalog:
   877                           	opt stack 25
   878                           
   879                           ;peripherals.c: 133: ADCON0 = 0x00;
   880                           
   881                           ;incstack = 0
   882  000916  0E00               	movlw	0
   883  000918  6EC2               	movwf	4034,c	;volatile
   884                           
   885                           ;peripherals.c: 135: ADCON0bits.ADON = 1;
   886  00091A  80C2               	bsf	4034,0,c	;volatile
   887                           
   888                           ;peripherals.c: 137: Delay((unsigned int)(64/4)*80 * 100);
   889  00091C  0EF4               	movlw	244
   890  00091E  0100               	movlb	0	; () banked
   891  000920  6F77               	movwf	(Delay@count+1)& (0+255),b
   892  000922  0E00               	movlw	0
   893  000924  6F76               	movwf	Delay@count& (0+255),b
   894  000926  EC80  F005         	call	_Delay	;wreg free
   895                           
   896                           ;peripherals.c: 139: ADCON0bits.GO_DONE = 1;
   897  00092A  82C2               	bsf	4034,1,c	;volatile
   898  00092C                     l742:
   899  00092C  B2C2               	btfsc	4034,1,c	;volatile
   900  00092E  D7FE               	goto	l742
   901                           
   902                           ;peripherals.c: 142: ADCON0bits.ADON = 0;
   903  000930  90C2               	bcf	4034,0,c	;volatile
   904                           
   905                           ;peripherals.c: 144: int low = ADRESL;
   906  000932  CFC3 F07A          	movff	4035,readAnalog@low	;volatile
   907  000936  0100               	movlb	0	; () banked
   908  000938  6B7B               	clrf	(readAnalog@low+1)& (0+255),b
   909                           
   910                           ; BSR set to: 0
   911                           ;peripherals.c: 145: int high = (ADRESH << 8);
   912  00093A  50C4               	movf	4036,w,c	;volatile
   913  00093C  0100               	movlb	0	; () banked
   914  00093E  6F7D               	movwf	(readAnalog@high+1)& (0+255),b
   915  000940  6B7C               	clrf	readAnalog@high& (0+255),b
   916                           
   917                           ; BSR set to: 0
   918                           ;peripherals.c: 146: int totBattery = (high | low);
   919  000942  0100               	movlb	0	; () banked
   920  000944  517A               	movf	readAnalog@low& (0+255),w,b
   921  000946  0100               	movlb	0	; () banked
   922  000948  117C               	iorwf	readAnalog@high& (0+255),w,b
   923  00094A  0100               	movlb	0	; () banked
   924  00094C  6F7E               	movwf	readAnalog@totBattery& (0+255),b
   925  00094E  0100               	movlb	0	; () banked
   926  000950  517B               	movf	(readAnalog@low+1)& (0+255),w,b
   927  000952  0100               	movlb	0	; () banked
   928  000954  117D               	iorwf	(readAnalog@high+1)& (0+255),w,b
   929  000956  0100               	movlb	0	; () banked
   930  000958  6F7F               	movwf	(readAnalog@totBattery+1)& (0+255),b
   931                           
   932                           ; BSR set to: 0
   933                           ;peripherals.c: 147: if(totBattery < 0){
   934  00095A  0100               	movlb	0	; () banked
   935  00095C  AF7F               	btfss	(readAnalog@totBattery+1)& (0+255),7,b
   936  00095E  D005               	goto	l2302
   937                           
   938                           ; BSR set to: 0
   939                           ;peripherals.c: 148: totBattery = 0;
   940  000960  0E00               	movlw	0
   941  000962  0100               	movlb	0	; () banked
   942  000964  6F7F               	movwf	(readAnalog@totBattery+1)& (0+255),b
   943  000966  0E00               	movlw	0
   944  000968  6F7E               	movwf	readAnalog@totBattery& (0+255),b
   945  00096A                     l2302:
   946                           
   947                           ; BSR set to: 0
   948                           ;peripherals.c: 149: }
   949                           ;peripherals.c: 152: return totBattery;
   950  00096A  C07E  F078         	movff	readAnalog@totBattery,?_readAnalog
   951  00096E  C07F  F079         	movff	readAnalog@totBattery+1,?_readAnalog+1
   952  000972  0012               	return	
   953  000974                     __end_of_readAnalog:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postdec1	equ	0xFE5
   962                           fsr1l	equ	0xFE1
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function _Delay *****************
   966 ;; Defined at:
   967 ;;		line 10 in file "Other.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  count           2    0[BANK0 ] unsigned int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    3
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;;		_readAnalog
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text3
   997  000B00                     __ptext3:
   998                           	opt stack 0
   999  000B00                     _Delay:
  1000                           	opt stack 25
  1001  000B00                     l2284:
  1002  000B00  0100               	movlb	0	; () banked
  1003  000B02  0776               	decf	Delay@count& (0+255),f,b
  1004  000B04  A0D8               	btfss	status,0,c
  1005  000B06  0777               	decf	(Delay@count+1)& (0+255),f,b
  1006  000B08  0100               	movlb	0	; () banked
  1007  000B0A  2976               	incf	Delay@count& (0+255),w,b
  1008  000B0C  E1F9               	bnz	l2284
  1009  000B0E  0100               	movlb	0	; () banked
  1010  000B10  2977               	incf	(Delay@count+1)& (0+255),w,b
  1011  000B12  B4D8               	btfsc	status,2,c
  1012  000B14  0012               	return	
  1013  000B16  D7F4               	goto	l2284
  1014  000B18                     __end_of_Delay:
  1015                           	opt stack 0
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1l	equ	0xFE1
  1024                           status	equ	0xFD8
  1025                           
  1026 ;; *************** function _unZipCAN *****************
  1027 ;; Defined at:
  1028 ;;		line 362 in file "ECAN.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;		None               void
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1044 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1045 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;Total ram usage:        3 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text4
  1057  000172                     __ptext4:
  1058                           	opt stack 0
  1059  000172                     _unZipCAN:
  1060                           	opt stack 27
  1061                           
  1062                           ;ECAN.c: 364: TEMP_MAP_HEARTBEAT = (BITDATA & (1 << 0));
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;incstack = 0
  1066  000172  C027  F076         	movff	_BITDATA,??_unZipCAN
  1067  000176  0E01               	movlw	1
  1068  000178  0100               	movlb	0	; () banked
  1069  00017A  1776               	andwf	??_unZipCAN& (0+255),f,b
  1070  00017C  0100               	movlb	0	; () banked
  1071  00017E  5176               	movf	??_unZipCAN& (0+255),w,b
  1072  000180  0100               	movlb	0	; () banked
  1073  000182  6F72               	movwf	_TEMP_MAP_HEARTBEAT& (0+255),b
  1074  000184  6B73               	clrf	(_TEMP_MAP_HEARTBEAT+1)& (0+255),b
  1075                           
  1076                           ;ECAN.c: 367: TEMP_MAP_BRAKE = BITDATA & (1 << 1);
  1077  000186  C027  F076         	movff	_BITDATA,??_unZipCAN
  1078  00018A  0E02               	movlw	2
  1079  00018C  0100               	movlb	0	; () banked
  1080  00018E  1776               	andwf	??_unZipCAN& (0+255),f,b
  1081  000190  0100               	movlb	0	; () banked
  1082  000192  5176               	movf	??_unZipCAN& (0+255),w,b
  1083  000194  6E1B               	movwf	_TEMP_MAP_BRAKE,c
  1084  000196  6A1C               	clrf	_TEMP_MAP_BRAKE+1,c
  1085                           
  1086                           ;ECAN.c: 368: TEMP_MAP_BRAKE = (TEMP_MAP_BRAKE >> 1);
  1087  000198  341C               	rlcf	_TEMP_MAP_BRAKE+1,w,c
  1088  00019A  301C               	rrcf	_TEMP_MAP_BRAKE+1,w,c
  1089  00019C  0100               	movlb	0	; () banked
  1090  00019E  6F76               	movwf	??_unZipCAN& (0+255),b
  1091  0001A0  301B               	rrcf	_TEMP_MAP_BRAKE,w,c
  1092  0001A2  6E1B               	movwf	_TEMP_MAP_BRAKE,c
  1093  0001A4  C076  F01C         	movff	??_unZipCAN,_TEMP_MAP_BRAKE+1
  1094                           
  1095                           ;ECAN.c: 370: TEMP_MAP_BACKLIGHT = BITDATA & (1 << 2);
  1096  0001A8  C027  F076         	movff	_BITDATA,??_unZipCAN
  1097  0001AC  0E04               	movlw	4
  1098  0001AE  0100               	movlb	0	; () banked
  1099  0001B0  1776               	andwf	??_unZipCAN& (0+255),f,b
  1100  0001B2  0100               	movlb	0	; () banked
  1101  0001B4  5176               	movf	??_unZipCAN& (0+255),w,b
  1102  0001B6  6E19               	movwf	_TEMP_MAP_BACKLIGHT,c
  1103  0001B8  6A1A               	clrf	_TEMP_MAP_BACKLIGHT+1,c
  1104                           
  1105                           ;ECAN.c: 371: TEMP_MAP_BACKLIGHT = (TEMP_MAP_BACKLIGHT >> 2);
  1106  0001BA  C019  F076         	movff	_TEMP_MAP_BACKLIGHT,??_unZipCAN
  1107  0001BE  C01A  F077         	movff	_TEMP_MAP_BACKLIGHT+1,??_unZipCAN+1
  1108  0001C2  0100               	movlb	0	; () banked
  1109  0001C4  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1110  0001C6  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1111  0001C8  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1112  0001CA  0100               	movlb	0	; () banked
  1113  0001CC  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1114  0001CE  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1115  0001D0  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1116  0001D2  C076  F019         	movff	??_unZipCAN,_TEMP_MAP_BACKLIGHT
  1117  0001D6  C077  F01A         	movff	??_unZipCAN+1,_TEMP_MAP_BACKLIGHT+1
  1118                           
  1119                           ;ECAN.c: 373: TEMP_MAP_V_BLINK = BITDATA & (1 << 3);
  1120  0001DA  C027  F076         	movff	_BITDATA,??_unZipCAN
  1121  0001DE  0E08               	movlw	8
  1122  0001E0  0100               	movlb	0	; () banked
  1123  0001E2  1776               	andwf	??_unZipCAN& (0+255),f,b
  1124  0001E4  0100               	movlb	0	; () banked
  1125  0001E6  5176               	movf	??_unZipCAN& (0+255),w,b
  1126  0001E8  6E25               	movwf	_TEMP_MAP_V_BLINK,c
  1127  0001EA  6A26               	clrf	_TEMP_MAP_V_BLINK+1,c
  1128                           
  1129                           ;ECAN.c: 374: TEMP_MAP_V_BLINK = (TEMP_MAP_V_BLINK >> 3);
  1130  0001EC  C025  F076         	movff	_TEMP_MAP_V_BLINK,??_unZipCAN
  1131  0001F0  C026  F077         	movff	_TEMP_MAP_V_BLINK+1,??_unZipCAN+1
  1132  0001F4  0100               	movlb	0	; () banked
  1133  0001F6  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1134  0001F8  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1135  0001FA  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1136  0001FC  0100               	movlb	0	; () banked
  1137  0001FE  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1138  000200  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1139  000202  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1140  000204  0100               	movlb	0	; () banked
  1141  000206  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1142  000208  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1143  00020A  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1144  00020C  C076  F025         	movff	??_unZipCAN,_TEMP_MAP_V_BLINK
  1145  000210  C077  F026         	movff	??_unZipCAN+1,_TEMP_MAP_V_BLINK+1
  1146                           
  1147                           ;ECAN.c: 376: TEMP_MAP_H_BLINK = BITDATA & (1 << 4);
  1148  000214  C027  F076         	movff	_BITDATA,??_unZipCAN
  1149  000218  0E10               	movlw	16
  1150  00021A  0100               	movlb	0	; () banked
  1151  00021C  1776               	andwf	??_unZipCAN& (0+255),f,b
  1152  00021E  0100               	movlb	0	; () banked
  1153  000220  5176               	movf	??_unZipCAN& (0+255),w,b
  1154  000222  6E1F               	movwf	_TEMP_MAP_H_BLINK,c
  1155  000224  6A20               	clrf	_TEMP_MAP_H_BLINK+1,c
  1156                           
  1157                           ;ECAN.c: 377: TEMP_MAP_H_BLINK = (TEMP_MAP_H_BLINK >> 4);
  1158  000226  C01F  F076         	movff	_TEMP_MAP_H_BLINK,??_unZipCAN
  1159  00022A  C020  F077         	movff	_TEMP_MAP_H_BLINK+1,??_unZipCAN+1
  1160  00022E  0E04               	movlw	4
  1161  000230  0100               	movlb	0	; () banked
  1162  000232  6F78               	movwf	(??_unZipCAN+2)& (0+255),b
  1163  000234                     u1335:
  1164  000234  0100               	movlb	0	; () banked
  1165  000236  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1166  000238  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1167  00023A  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1168  00023C  0100               	movlb	0	; () banked
  1169  00023E  2F78               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1170  000240  D7F9               	goto	u1335
  1171  000242  C076  F01F         	movff	??_unZipCAN,_TEMP_MAP_H_BLINK
  1172  000246  C077  F020         	movff	??_unZipCAN+1,_TEMP_MAP_H_BLINK+1
  1173                           
  1174                           ;ECAN.c: 379: TEMP_MAP_DIRECTION = BITDATA & (1 << 5);
  1175  00024A  C027  F076         	movff	_BITDATA,??_unZipCAN
  1176  00024E  0E20               	movlw	32
  1177  000250  0100               	movlb	0	; () banked
  1178  000252  1776               	andwf	??_unZipCAN& (0+255),f,b
  1179  000254  0100               	movlb	0	; () banked
  1180  000256  5176               	movf	??_unZipCAN& (0+255),w,b
  1181  000258  6E1D               	movwf	_TEMP_MAP_DIRECTION,c
  1182  00025A  6A1E               	clrf	_TEMP_MAP_DIRECTION+1,c
  1183                           
  1184                           ;ECAN.c: 380: TEMP_MAP_DIRECTION = (TEMP_MAP_DIRECTION >> 5);
  1185  00025C  C01D  F076         	movff	_TEMP_MAP_DIRECTION,??_unZipCAN
  1186  000260  C01E  F077         	movff	_TEMP_MAP_DIRECTION+1,??_unZipCAN+1
  1187  000264  0E05               	movlw	5
  1188  000266  0100               	movlb	0	; () banked
  1189  000268  6F78               	movwf	(??_unZipCAN+2)& (0+255),b
  1190  00026A                     u1345:
  1191  00026A  0100               	movlb	0	; () banked
  1192  00026C  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1193  00026E  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1194  000270  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1195  000272  0100               	movlb	0	; () banked
  1196  000274  2F78               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1197  000276  D7F9               	goto	u1345
  1198  000278  C076  F01D         	movff	??_unZipCAN,_TEMP_MAP_DIRECTION
  1199  00027C  C077  F01E         	movff	??_unZipCAN+1,_TEMP_MAP_DIRECTION+1
  1200                           
  1201                           ;ECAN.c: 382: TEMP_MAP_SAFETYPIN = BITDATA & (1 << 6);
  1202  000280  C027  F076         	movff	_BITDATA,??_unZipCAN
  1203  000284  0E40               	movlw	64
  1204  000286  0100               	movlb	0	; () banked
  1205  000288  1776               	andwf	??_unZipCAN& (0+255),f,b
  1206  00028A  0100               	movlb	0	; () banked
  1207  00028C  5176               	movf	??_unZipCAN& (0+255),w,b
  1208  00028E  6E21               	movwf	_TEMP_MAP_SAFETYPIN,c
  1209  000290  6A22               	clrf	_TEMP_MAP_SAFETYPIN+1,c
  1210                           
  1211                           ;ECAN.c: 383: TEMP_MAP_SAFETYPIN = (TEMP_MAP_SAFETYPIN >> 6);
  1212  000292  C021  F076         	movff	_TEMP_MAP_SAFETYPIN,??_unZipCAN
  1213  000296  C022  F077         	movff	_TEMP_MAP_SAFETYPIN+1,??_unZipCAN+1
  1214  00029A  0E06               	movlw	6
  1215  00029C  0100               	movlb	0	; () banked
  1216  00029E  6F78               	movwf	(??_unZipCAN+2)& (0+255),b
  1217  0002A0                     u1355:
  1218  0002A0  0100               	movlb	0	; () banked
  1219  0002A2  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1220  0002A4  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1221  0002A6  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1222  0002A8  0100               	movlb	0	; () banked
  1223  0002AA  2F78               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1224  0002AC  D7F9               	goto	u1355
  1225  0002AE  C076  F021         	movff	??_unZipCAN,_TEMP_MAP_SAFETYPIN
  1226  0002B2  C077  F022         	movff	??_unZipCAN+1,_TEMP_MAP_SAFETYPIN+1
  1227                           
  1228                           ;ECAN.c: 385: TEMP_MAP_STOP = BITDATA & (1 << 7);
  1229  0002B6  C027  F076         	movff	_BITDATA,??_unZipCAN
  1230  0002BA  0E80               	movlw	128
  1231  0002BC  0100               	movlb	0	; () banked
  1232  0002BE  1776               	andwf	??_unZipCAN& (0+255),f,b
  1233  0002C0  0100               	movlb	0	; () banked
  1234  0002C2  5176               	movf	??_unZipCAN& (0+255),w,b
  1235  0002C4  6E23               	movwf	_TEMP_MAP_STOP,c
  1236  0002C6  6A24               	clrf	_TEMP_MAP_STOP+1,c
  1237                           
  1238                           ;ECAN.c: 386: TEMP_MAP_STOP = (TEMP_MAP_STOP >> 7);
  1239  0002C8  C023  F076         	movff	_TEMP_MAP_STOP,??_unZipCAN
  1240  0002CC  C024  F077         	movff	_TEMP_MAP_STOP+1,??_unZipCAN+1
  1241  0002D0  0E07               	movlw	7
  1242  0002D2  0100               	movlb	0	; () banked
  1243  0002D4  6F78               	movwf	(??_unZipCAN+2)& (0+255),b
  1244  0002D6                     u1365:
  1245  0002D6  0100               	movlb	0	; () banked
  1246  0002D8  3577               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1247  0002DA  3377               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1248  0002DC  3376               	rrcf	??_unZipCAN& (0+255),f,b
  1249  0002DE  0100               	movlb	0	; () banked
  1250  0002E0  2F78               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1251  0002E2  D7F9               	goto	u1365
  1252  0002E4  C076  F023         	movff	??_unZipCAN,_TEMP_MAP_STOP
  1253  0002E8  C077  F024         	movff	??_unZipCAN+1,_TEMP_MAP_STOP+1
  1254                           
  1255                           ; BSR set to: 0
  1256  0002EC  0012               	return		;funcret
  1257  0002EE                     __end_of_unZipCAN:
  1258                           	opt stack 0
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function _setup_Interrupt *****************
  1270 ;; Defined at:
  1271 ;;		line 118 in file "init.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;		None               void
  1278 ;; Registers used:
  1279 ;;		wreg, status,2
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    3
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text5
  1300  000A66                     __ptext5:
  1301                           	opt stack 0
  1302  000A66                     _setup_Interrupt:
  1303                           	opt stack 27
  1304                           
  1305                           ;init.c: 120: RCONbits.IPEN = 1;
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;incstack = 0
  1309  000A66  8ED0               	bsf	4048,7,c	;volatile
  1310                           
  1311                           ;init.c: 121: INTCONbits.GIEH = 1;
  1312  000A68  8EF2               	bsf	intcon,7,c	;volatile
  1313                           
  1314                           ;init.c: 122: INTCONbits.GIEL = 1;
  1315  000A6A  8CF2               	bsf	intcon,6,c	;volatile
  1316                           
  1317                           ;init.c: 126: INTCONbits.TMR0IE = 1;
  1318  000A6C  8AF2               	bsf	intcon,5,c	;volatile
  1319                           
  1320                           ;init.c: 127: heartBeatCounter = 0;
  1321  000A6E  0E00               	movlw	0
  1322  000A70  0100               	movlb	0	; () banked
  1323  000A72  6F60               	movwf	_heartBeatCounter& (0+255),b
  1324  000A74  0E00               	movlw	0
  1325  000A76  6F61               	movwf	(_heartBeatCounter+1)& (0+255),b
  1326  000A78  0E00               	movlw	0
  1327  000A7A  6F62               	movwf	(_heartBeatCounter+2)& (0+255),b
  1328  000A7C  0E00               	movlw	0
  1329  000A7E  6F63               	movwf	(_heartBeatCounter+3)& (0+255),b
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;init.c: 130: PIE1bits.TMR1IE = 1;
  1333  000A80  809D               	bsf	3997,0,c	;volatile
  1334                           
  1335                           ;init.c: 131: blinkCounter = 0;
  1336  000A82  0E00               	movlw	0
  1337  000A84  6E01               	movwf	_blinkCounter,c
  1338  000A86  0E00               	movlw	0
  1339  000A88  6E02               	movwf	_blinkCounter+1,c
  1340  000A8A  0E00               	movlw	0
  1341  000A8C  6E03               	movwf	_blinkCounter+2,c
  1342  000A8E  0E00               	movlw	0
  1343  000A90  6E04               	movwf	_blinkCounter+3,c
  1344                           
  1345                           ; BSR set to: 0
  1346  000A92  0012               	return		;funcret
  1347  000A94                     __end_of_setup_Interrupt:
  1348                           	opt stack 0
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           intcon	equ	0xFF2
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postdec1	equ	0xFE5
  1357                           fsr1l	equ	0xFE1
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function _checkV_blink *****************
  1361 ;; Defined at:
  1362 ;;		line 27 in file "peripherals.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;		None               void
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    3
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text6
  1391  000A34                     __ptext6:
  1392                           	opt stack 0
  1393  000A34                     _checkV_blink:
  1394                           	opt stack 27
  1395                           
  1396                           ;peripherals.c: 28: if(TEMP_MAP_V_BLINK != MAP_V_BLINK){
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;incstack = 0
  1400  000A34  5017               	movf	_MAP_V_BLINK,w,c
  1401  000A36  1825               	xorwf	_TEMP_MAP_V_BLINK,w,c
  1402  000A38  E104               	bnz	u1410
  1403  000A3A  5018               	movf	_MAP_V_BLINK+1,w,c
  1404  000A3C  1826               	xorwf	_TEMP_MAP_V_BLINK+1,w,c
  1405  000A3E  B4D8               	btfsc	status,2,c
  1406  000A40  0012               	return	
  1407  000A42                     u1410:
  1408                           
  1409                           ;peripherals.c: 29: MAP_V_BLINK = TEMP_MAP_V_BLINK;
  1410  000A42  C025  F017         	movff	_TEMP_MAP_V_BLINK,_MAP_V_BLINK
  1411  000A46  C026  F018         	movff	_TEMP_MAP_V_BLINK+1,_MAP_V_BLINK+1
  1412                           
  1413                           ;peripherals.c: 31: blinkCounter = 0;
  1414  000A4A  0E00               	movlw	0
  1415  000A4C  6E01               	movwf	_blinkCounter,c
  1416  000A4E  0E00               	movlw	0
  1417  000A50  6E02               	movwf	_blinkCounter+1,c
  1418  000A52  0E00               	movlw	0
  1419  000A54  6E03               	movwf	_blinkCounter+2,c
  1420  000A56  0E00               	movlw	0
  1421  000A58  6E04               	movwf	_blinkCounter+3,c
  1422                           
  1423                           ;peripherals.c: 32: LATBbits.LATB5 = MAP_V_BLINK;
  1424  000A5A  B017               	btfsc	_MAP_V_BLINK,0,c
  1425  000A5C  D002               	bra	u1425
  1426  000A5E  9A8A               	bcf	3978,5,c	;volatile
  1427  000A60  D001               	bra	u1426
  1428  000A62                     u1425:
  1429  000A62  8A8A               	bsf	3978,5,c	;volatile
  1430  000A64                     u1426:
  1431  000A64  0012               	return	
  1432  000A66                     __end_of_checkV_blink:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           intcon	equ	0xFF2
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           postdec1	equ	0xFE5
  1442                           fsr1l	equ	0xFE1
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function _checkStop *****************
  1446 ;; Defined at:
  1447 ;;		line 56 in file "peripherals.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;		None               void
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    3
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text7
  1476  000ABA                     __ptext7:
  1477                           	opt stack 0
  1478  000ABA                     _checkStop:
  1479                           	opt stack 27
  1480                           
  1481                           ;peripherals.c: 57: if(TEMP_MAP_STOP != MAP_STOP){
  1482                           
  1483                           ;incstack = 0
  1484  000ABA  5015               	movf	_MAP_STOP,w,c
  1485  000ABC  1823               	xorwf	_TEMP_MAP_STOP,w,c
  1486  000ABE  E104               	bnz	u1480
  1487  000AC0  5016               	movf	_MAP_STOP+1,w,c
  1488  000AC2  1824               	xorwf	_TEMP_MAP_STOP+1,w,c
  1489  000AC4  B4D8               	btfsc	status,2,c
  1490  000AC6  0012               	return	
  1491  000AC8                     u1480:
  1492                           
  1493                           ;peripherals.c: 58: MAP_STOP = TEMP_MAP_STOP;
  1494  000AC8  C023  F015         	movff	_TEMP_MAP_STOP,_MAP_STOP
  1495  000ACC  C024  F016         	movff	_TEMP_MAP_STOP+1,_MAP_STOP+1
  1496                           
  1497                           ;peripherals.c: 59: if(MAP_STOP == 1){
  1498  000AD0  0415               	decf	_MAP_STOP,w,c
  1499  000AD2  1016               	iorwf	_MAP_STOP+1,w,c
  1500  000AD4  A4D8               	btfss	status,2,c
  1501  000AD6  0012               	return	
  1502                           
  1503                           ;peripherals.c: 60: LATBbits.LATB0 = 0;
  1504  000AD8  908A               	bcf	3978,0,c	;volatile
  1505                           
  1506                           ;peripherals.c: 61: LATBbits.LATB4 = 1;
  1507  000ADA  888A               	bsf	3978,4,c	;volatile
  1508  000ADC  0012               	return	
  1509  000ADE                     __end_of_checkStop:
  1510                           	opt stack 0
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           intcon	equ	0xFF2
  1516                           postinc0	equ	0xFEE
  1517                           wreg	equ	0xFE8
  1518                           postdec1	equ	0xFE5
  1519                           fsr1l	equ	0xFE1
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _checkSafetyPin *****************
  1523 ;; Defined at:
  1524 ;;		line 50 in file "peripherals.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;		None               void
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    3
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text8
  1553  000B18                     __ptext8:
  1554                           	opt stack 0
  1555  000B18                     _checkSafetyPin:
  1556                           	opt stack 27
  1557                           
  1558                           ;peripherals.c: 51: if(TEMP_MAP_SAFETYPIN != MAP_SAFETYPIN){
  1559                           
  1560                           ;incstack = 0
  1561  000B18  5013               	movf	_MAP_SAFETYPIN,w,c
  1562  000B1A  1821               	xorwf	_TEMP_MAP_SAFETYPIN,w,c
  1563  000B1C  E104               	bnz	u1470
  1564  000B1E  5014               	movf	_MAP_SAFETYPIN+1,w,c
  1565  000B20  1822               	xorwf	_TEMP_MAP_SAFETYPIN+1,w,c
  1566  000B22  B4D8               	btfsc	status,2,c
  1567  000B24  0012               	return	
  1568  000B26                     u1470:
  1569                           
  1570                           ;peripherals.c: 52: MAP_SAFETYPIN = TEMP_MAP_SAFETYPIN;
  1571  000B26  C021  F013         	movff	_TEMP_MAP_SAFETYPIN,_MAP_SAFETYPIN
  1572  000B2A  C022  F014         	movff	_TEMP_MAP_SAFETYPIN+1,_MAP_SAFETYPIN+1
  1573  000B2E  0012               	return	
  1574  000B30                     __end_of_checkSafetyPin:
  1575                           	opt stack 0
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           intcon	equ	0xFF2
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1l	equ	0xFE1
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _checkH_blink *****************
  1588 ;; Defined at:
  1589 ;;		line 35 in file "peripherals.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;		None               void
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    3
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text9
  1618  0009F8                     __ptext9:
  1619                           	opt stack 0
  1620  0009F8                     _checkH_blink:
  1621                           	opt stack 27
  1622                           
  1623                           ;peripherals.c: 36: if(TEMP_MAP_H_BLINK != MAP_H_BLINK){
  1624                           
  1625                           ;incstack = 0
  1626  0009F8  5011               	movf	_MAP_H_BLINK,w,c
  1627  0009FA  181F               	xorwf	_TEMP_MAP_H_BLINK,w,c
  1628  0009FC  E104               	bnz	u1430
  1629  0009FE  5012               	movf	_MAP_H_BLINK+1,w,c
  1630  000A00  1820               	xorwf	_TEMP_MAP_H_BLINK+1,w,c
  1631  000A02  B4D8               	btfsc	status,2,c
  1632  000A04  0012               	return	
  1633  000A06                     u1430:
  1634                           
  1635                           ;peripherals.c: 37: MAP_H_BLINK = TEMP_MAP_H_BLINK;
  1636  000A06  C01F  F011         	movff	_TEMP_MAP_H_BLINK,_MAP_H_BLINK
  1637  000A0A  C020  F012         	movff	_TEMP_MAP_H_BLINK+1,_MAP_H_BLINK+1
  1638                           
  1639                           ;peripherals.c: 38: LATBbits.LATB6 = MAP_H_BLINK;
  1640  000A0E  B011               	btfsc	_MAP_H_BLINK,0,c
  1641  000A10  D002               	bra	u1445
  1642  000A12  9C8A               	bcf	3978,6,c	;volatile
  1643  000A14  D001               	bra	u1446
  1644  000A16                     u1445:
  1645  000A16  8C8A               	bsf	3978,6,c	;volatile
  1646  000A18                     u1446:
  1647                           
  1648                           ;peripherals.c: 40: blinkCounter = 0;
  1649  000A18  0E00               	movlw	0
  1650  000A1A  6E01               	movwf	_blinkCounter,c
  1651  000A1C  0E00               	movlw	0
  1652  000A1E  6E02               	movwf	_blinkCounter+1,c
  1653  000A20  0E00               	movlw	0
  1654  000A22  6E03               	movwf	_blinkCounter+2,c
  1655  000A24  0E00               	movlw	0
  1656  000A26  6E04               	movwf	_blinkCounter+3,c
  1657                           
  1658                           ;peripherals.c: 41: LATBbits.LATB6 = MAP_H_BLINK;
  1659  000A28  B011               	btfsc	_MAP_H_BLINK,0,c
  1660  000A2A  D002               	bra	u1455
  1661  000A2C  9C8A               	bcf	3978,6,c	;volatile
  1662  000A2E  D001               	bra	u1456
  1663  000A30                     u1455:
  1664  000A30  8C8A               	bsf	3978,6,c	;volatile
  1665  000A32                     u1456:
  1666  000A32  0012               	return	
  1667  000A34                     __end_of_checkH_blink:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           intcon	equ	0xFF2
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1l	equ	0xFE1
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _checkDirection *****************
  1681 ;; Defined at:
  1682 ;;		line 44 in file "peripherals.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    3
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text10
  1711  000B30                     __ptext10:
  1712                           	opt stack 0
  1713  000B30                     _checkDirection:
  1714                           	opt stack 27
  1715                           
  1716                           ;peripherals.c: 45: if(TEMP_MAP_DIRECTION != MAP_DIRECTION){
  1717                           
  1718                           ;incstack = 0
  1719  000B30  500F               	movf	_MAP_DIRECTION,w,c
  1720  000B32  181D               	xorwf	_TEMP_MAP_DIRECTION,w,c
  1721  000B34  E104               	bnz	u1460
  1722  000B36  5010               	movf	_MAP_DIRECTION+1,w,c
  1723  000B38  181E               	xorwf	_TEMP_MAP_DIRECTION+1,w,c
  1724  000B3A  B4D8               	btfsc	status,2,c
  1725  000B3C  0012               	return	
  1726  000B3E                     u1460:
  1727                           
  1728                           ;peripherals.c: 46: MAP_DIRECTION = TEMP_MAP_DIRECTION;
  1729  000B3E  C01D  F00F         	movff	_TEMP_MAP_DIRECTION,_MAP_DIRECTION
  1730  000B42  C01E  F010         	movff	_TEMP_MAP_DIRECTION+1,_MAP_DIRECTION+1
  1731  000B46  0012               	return	
  1732  000B48                     __end_of_checkDirection:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           intcon	equ	0xFF2
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1l	equ	0xFE1
  1743                           status	equ	0xFD8
  1744                           
  1745 ;; *************** function _checkBrake *****************
  1746 ;; Defined at:
  1747 ;;		line 10 in file "peripherals.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;		None               void
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    3
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text11
  1776  000A94                     __ptext11:
  1777                           	opt stack 0
  1778  000A94                     _checkBrake:
  1779                           	opt stack 27
  1780                           
  1781                           ;peripherals.c: 11: if(TEMP_MAP_BRAKE != MAP_BRAKE){
  1782                           
  1783                           ;incstack = 0
  1784  000A94  500D               	movf	_MAP_BRAKE,w,c
  1785  000A96  181B               	xorwf	_TEMP_MAP_BRAKE,w,c
  1786  000A98  E104               	bnz	u1370
  1787  000A9A  500E               	movf	_MAP_BRAKE+1,w,c
  1788  000A9C  181C               	xorwf	_TEMP_MAP_BRAKE+1,w,c
  1789  000A9E  B4D8               	btfsc	status,2,c
  1790  000AA0  0012               	return	
  1791  000AA2                     u1370:
  1792                           
  1793                           ;peripherals.c: 12: MAP_BRAKE = TEMP_MAP_BRAKE;
  1794  000AA2  C01B  F00D         	movff	_TEMP_MAP_BRAKE,_MAP_BRAKE
  1795  000AA6  C01C  F00E         	movff	_TEMP_MAP_BRAKE+1,_MAP_BRAKE+1
  1796                           
  1797                           ;peripherals.c: 13: if(MAP_BRAKE == 1){
  1798  000AAA  040D               	decf	_MAP_BRAKE,w,c
  1799  000AAC  100E               	iorwf	_MAP_BRAKE+1,w,c
  1800  000AAE  A4D8               	btfss	status,2,c
  1801  000AB0  D002               	goto	l700
  1802                           
  1803                           ;peripherals.c: 14: LATBbits.LATB0 = 0;
  1804  000AB2  908A               	bcf	3978,0,c	;volatile
  1805                           
  1806                           ;peripherals.c: 15: }
  1807  000AB4  0012               	return	
  1808  000AB6                     l700:
  1809                           
  1810                           ;peripherals.c: 16: else{
  1811                           ;peripherals.c: 17: LATBbits.LATB0 = 1;
  1812  000AB6  808A               	bsf	3978,0,c	;volatile
  1813  000AB8  0012               	return	
  1814  000ABA                     __end_of_checkBrake:
  1815                           	opt stack 0
  1816                           tblptru	equ	0xFF8
  1817                           tblptrh	equ	0xFF7
  1818                           tblptrl	equ	0xFF6
  1819                           tablat	equ	0xFF5
  1820                           intcon	equ	0xFF2
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1l	equ	0xFE1
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _checkBacklight *****************
  1828 ;; Defined at:
  1829 ;;		line 21 in file "peripherals.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;		None               void
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    3
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text12
  1858  000ADE                     __ptext12:
  1859                           	opt stack 0
  1860  000ADE                     _checkBacklight:
  1861                           	opt stack 27
  1862                           
  1863                           ;peripherals.c: 22: if(TEMP_MAP_BACKLIGHT != MAP_BACKLIGHT){
  1864                           
  1865                           ;incstack = 0
  1866  000ADE  5009               	movf	_MAP_BACKLIGHT,w,c
  1867  000AE0  1819               	xorwf	_TEMP_MAP_BACKLIGHT,w,c
  1868  000AE2  E104               	bnz	u1390
  1869  000AE4  500A               	movf	_MAP_BACKLIGHT+1,w,c
  1870  000AE6  181A               	xorwf	_TEMP_MAP_BACKLIGHT+1,w,c
  1871  000AE8  B4D8               	btfsc	status,2,c
  1872  000AEA  0012               	return	
  1873  000AEC                     u1390:
  1874                           
  1875                           ;peripherals.c: 23: MAP_BACKLIGHT = TEMP_MAP_BACKLIGHT;
  1876  000AEC  C019  F009         	movff	_TEMP_MAP_BACKLIGHT,_MAP_BACKLIGHT
  1877  000AF0  C01A  F00A         	movff	_TEMP_MAP_BACKLIGHT+1,_MAP_BACKLIGHT+1
  1878                           
  1879                           ;peripherals.c: 24: LATBbits.LATB7 = MAP_BACKLIGHT;
  1880  000AF4  B009               	btfsc	_MAP_BACKLIGHT,0,c
  1881  000AF6  D002               	bra	u1405
  1882  000AF8  9E8A               	bcf	3978,7,c	;volatile
  1883  000AFA  D001               	bra	u1406
  1884  000AFC                     u1405:
  1885  000AFC  8E8A               	bsf	3978,7,c	;volatile
  1886  000AFE                     u1406:
  1887  000AFE  0012               	return	
  1888  000B00                     __end_of_checkBacklight:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           intcon	equ	0xFF2
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           postdec1	equ	0xFE5
  1898                           fsr1l	equ	0xFE1
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _checkAccelerator *****************
  1902 ;; Defined at:
  1903 ;;		line 77 in file "peripherals.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  HALF_ACCELER    2   11[BANK0 ] int 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;		None               void
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;Total ram usage:        5 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    4
  1924 ;; This function calls:
  1925 ;;		___awdiv
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text13
  1932  000882                     __ptext13:
  1933                           	opt stack 0
  1934  000882                     _checkAccelerator:
  1935                           	opt stack 26
  1936                           
  1937                           ;peripherals.c: 96: if(TEMP_ACCELERATOR != MAP_ACCELERATOR){
  1938                           
  1939                           ;incstack = 0
  1940  000882  5028               	movf	_TEMP_ACCELERATOR,w,c
  1941  000884  0100               	movlb	0	; () banked
  1942  000886  6F7E               	movwf	??_checkAccelerator& (0+255),b
  1943  000888  6B7F               	clrf	(??_checkAccelerator+1)& (0+255),b
  1944  00088A  0100               	movlb	0	; () banked
  1945  00088C  5168               	movf	_MAP_ACCELERATOR& (0+255),w,b
  1946  00088E  0100               	movlb	0	; () banked
  1947  000890  197E               	xorwf	??_checkAccelerator& (0+255),w,b
  1948  000892  E106               	bnz	u1500
  1949  000894  0100               	movlb	0	; () banked
  1950  000896  5169               	movf	(_MAP_ACCELERATOR+1)& (0+255),w,b
  1951  000898  0100               	movlb	0	; () banked
  1952  00089A  197F               	xorwf	(??_checkAccelerator+1)& (0+255),w,b
  1953  00089C  B4D8               	btfsc	status,2,c
  1954  00089E  0012               	return	
  1955  0008A0                     u1500:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;peripherals.c: 97: MAP_ACCELERATOR = TEMP_ACCELERATOR;
  1959  0008A0  C028  F068         	movff	_TEMP_ACCELERATOR,_MAP_ACCELERATOR
  1960  0008A4  0100               	movlb	0	; () banked
  1961  0008A6  6B69               	clrf	(_MAP_ACCELERATOR+1)& (0+255),b
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;peripherals.c: 99: int HALF_ACCELERATOR = TEMP_ACCELERATOR/2;
  1965  0008A8  C028  F076         	movff	_TEMP_ACCELERATOR,___awdiv@dividend
  1966  0008AC  0100               	movlb	0	; () banked
  1967  0008AE  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  1968  0008B0  0E00               	movlw	0
  1969  0008B2  0100               	movlb	0	; () banked
  1970  0008B4  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  1971  0008B6  0E02               	movlw	2
  1972  0008B8  6F78               	movwf	___awdiv@divisor& (0+255),b
  1973  0008BA  EC8E  F003         	call	___awdiv	;wreg free
  1974  0008BE  C076  F081         	movff	?___awdiv,checkAccelerator@HALF_ACCELERATOR
  1975  0008C2  C077  F082         	movff	?___awdiv+1,checkAccelerator@HALF_ACCELERATOR+1
  1976                           
  1977                           ;peripherals.c: 101: if(MAP_DIRECTION == 1){
  1978  0008C6  040F               	decf	_MAP_DIRECTION,w,c
  1979  0008C8  1010               	iorwf	_MAP_DIRECTION+1,w,c
  1980  0008CA  A4D8               	btfss	status,2,c
  1981  0008CC  D003               	goto	l2524
  1982                           
  1983                           ;peripherals.c: 102: LATC = 0b10000000 + HALF_ACCELERATOR;
  1984  0008CE  0100               	movlb	0	; () banked
  1985  0008D0  5181               	movf	checkAccelerator@HALF_ACCELERATOR& (0+255),w,b
  1986  0008D2  D007               	goto	L1
  1987  0008D4                     l2524:
  1988                           
  1989                           ;peripherals.c: 104: else if(MAP_DIRECTION == 0){
  1990  0008D4  500F               	movf	_MAP_DIRECTION,w,c
  1991  0008D6  1010               	iorwf	_MAP_DIRECTION+1,w,c
  1992  0008D8  A4D8               	btfss	status,2,c
  1993  0008DA  D005               	goto	l732
  1994                           
  1995                           ;peripherals.c: 105: LATC = 0b10000000 - HALF_ACCELERATOR;
  1996  0008DC  0100               	movlb	0	; () banked
  1997  0008DE  5181               	movf	checkAccelerator@HALF_ACCELERATOR& (0+255),w,b
  1998  0008E0  0800               	sublw	0
  1999  0008E2                     L1:
  2000  0008E2  0F80               	addlw	128
  2001  0008E4  6E8B               	movwf	3979,c	;volatile
  2002  0008E6                     l732:
  2003                           
  2004                           ;peripherals.c: 106: }
  2005                           ;peripherals.c: 108: if(TEMP_ACCELERATOR < deadArea_gas){
  2006  0008E6  5028               	movf	_TEMP_ACCELERATOR,w,c
  2007  0008E8  0100               	movlb	0	; () banked
  2008  0008EA  6F7E               	movwf	??_checkAccelerator& (0+255),b
  2009  0008EC  6B7F               	clrf	(??_checkAccelerator+1)& (0+255),b
  2010  0008EE  0100               	movlb	0	; () banked
  2011  0008F0  5183               	movf	_deadArea_gas& (0+255),w,b
  2012  0008F2  0100               	movlb	0	; () banked
  2013  0008F4  5D7E               	subwf	??_checkAccelerator& (0+255),w,b
  2014  0008F6  0100               	movlb	0	; () banked
  2015  0008F8  517F               	movf	(??_checkAccelerator+1)& (0+255),w,b
  2016  0008FA  0A80               	xorlw	128
  2017  0008FC  0100               	movlb	0	; () banked
  2018  0008FE  6F80               	movwf	(??_checkAccelerator+2)& (0+255),b
  2019  000900  0100               	movlb	0	; () banked
  2020  000902  5184               	movf	(_deadArea_gas+1)& (0+255),w,b
  2021  000904  0A80               	xorlw	128
  2022  000906  0100               	movlb	0	; () banked
  2023  000908  5980               	subwfb	(??_checkAccelerator+2)& (0+255),w,b
  2024  00090A  B0D8               	btfsc	status,0,c
  2025  00090C  D002               	goto	l734
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;peripherals.c: 109: LATBbits.LATB0 = 0;
  2029  00090E  908A               	bcf	3978,0,c	;volatile
  2030                           
  2031                           ;peripherals.c: 110: }
  2032  000910  0012               	return	
  2033  000912                     l734:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;peripherals.c: 111: else{
  2037                           ;peripherals.c: 112: LATBbits.LATB0 = 1;
  2038  000912  808A               	bsf	3978,0,c	;volatile
  2039                           
  2040                           ; BSR set to: 0
  2041  000914  0012               	return	
  2042  000916                     __end_of_checkAccelerator:
  2043                           	opt stack 0
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           intcon	equ	0xFF2
  2049                           postinc0	equ	0xFEE
  2050                           wreg	equ	0xFE8
  2051                           postdec1	equ	0xFE5
  2052                           fsr1l	equ	0xFE1
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function ___awdiv *****************
  2056 ;; Defined at:
  2057 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  dividend        2    0[BANK0 ] int 
  2060 ;;  divisor         2    2[BANK0 ] int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  quotient        2    6[BANK0 ] int 
  2063 ;;  sign            1    5[BANK0 ] unsigned char 
  2064 ;;  counter         1    4[BANK0 ] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  2    0[BANK0 ] int 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2074 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;Total ram usage:        8 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    3
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_checkAccelerator
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text14
  2089  00071C                     __ptext14:
  2090                           	opt stack 0
  2091  00071C                     ___awdiv:
  2092                           	opt stack 26
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;incstack = 0
  2096  00071C  0E00               	movlw	0
  2097  00071E  0100               	movlb	0	; () banked
  2098  000720  6F7B               	movwf	___awdiv@sign& (0+255),b
  2099                           
  2100                           ; BSR set to: 0
  2101  000722  0100               	movlb	0	; () banked
  2102  000724  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2103  000726  D008               	goto	l2314
  2104                           
  2105                           ; BSR set to: 0
  2106  000728  0100               	movlb	0	; () banked
  2107  00072A  6D78               	negf	___awdiv@divisor& (0+255),b
  2108  00072C  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2109  00072E  B0D8               	btfsc	status,0,c
  2110  000730  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2111                           
  2112                           ; BSR set to: 0
  2113  000732  0E01               	movlw	1
  2114  000734  0100               	movlb	0	; () banked
  2115  000736  6F7B               	movwf	___awdiv@sign& (0+255),b
  2116  000738                     l2314:
  2117                           
  2118                           ; BSR set to: 0
  2119  000738  0100               	movlb	0	; () banked
  2120  00073A  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2121  00073C  D008               	goto	l2320
  2122                           
  2123                           ; BSR set to: 0
  2124  00073E  0100               	movlb	0	; () banked
  2125  000740  6D76               	negf	___awdiv@dividend& (0+255),b
  2126  000742  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2127  000744  B0D8               	btfsc	status,0,c
  2128  000746  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2129                           
  2130                           ; BSR set to: 0
  2131  000748  0E01               	movlw	1
  2132  00074A  0100               	movlb	0	; () banked
  2133  00074C  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
  2134  00074E                     l2320:
  2135                           
  2136                           ; BSR set to: 0
  2137  00074E  0E00               	movlw	0
  2138  000750  0100               	movlb	0	; () banked
  2139  000752  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
  2140  000754  0E00               	movlw	0
  2141  000756  6F7C               	movwf	___awdiv@quotient& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144  000758  0100               	movlb	0	; () banked
  2145  00075A  5178               	movf	___awdiv@divisor& (0+255),w,b
  2146  00075C  0100               	movlb	0	; () banked
  2147  00075E  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2148  000760  B4D8               	btfsc	status,2,c
  2149  000762  D02C               	goto	l2342
  2150                           
  2151                           ; BSR set to: 0
  2152  000764  0E01               	movlw	1
  2153  000766  0100               	movlb	0	; () banked
  2154  000768  6F7A               	movwf	___awdiv@counter& (0+255),b
  2155  00076A  D006               	goto	l2328
  2156  00076C                     l2326:
  2157                           
  2158                           ; BSR set to: 0
  2159  00076C  0100               	movlb	0	; () banked
  2160  00076E  90D8               	bcf	status,0,c
  2161  000770  3778               	rlcf	___awdiv@divisor& (0+255),f,b
  2162  000772  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2163  000774  0100               	movlb	0	; () banked
  2164  000776  2B7A               	incf	___awdiv@counter& (0+255),f,b
  2165  000778                     l2328:
  2166                           
  2167                           ; BSR set to: 0
  2168  000778  0100               	movlb	0	; () banked
  2169  00077A  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2170  00077C  D7F7               	goto	l2326
  2171  00077E                     l2330:
  2172                           
  2173                           ; BSR set to: 0
  2174  00077E  0100               	movlb	0	; () banked
  2175  000780  90D8               	bcf	status,0,c
  2176  000782  377C               	rlcf	___awdiv@quotient& (0+255),f,b
  2177  000784  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2178                           
  2179                           ; BSR set to: 0
  2180  000786  0100               	movlb	0	; () banked
  2181  000788  5178               	movf	___awdiv@divisor& (0+255),w,b
  2182  00078A  0100               	movlb	0	; () banked
  2183  00078C  5D76               	subwf	___awdiv@dividend& (0+255),w,b
  2184  00078E  0100               	movlb	0	; () banked
  2185  000790  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2186  000792  0100               	movlb	0	; () banked
  2187  000794  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2188  000796  A0D8               	btfss	status,0,c
  2189  000798  D00A               	goto	l2338
  2190                           
  2191                           ; BSR set to: 0
  2192  00079A  0100               	movlb	0	; () banked
  2193  00079C  5178               	movf	___awdiv@divisor& (0+255),w,b
  2194  00079E  0100               	movlb	0	; () banked
  2195  0007A0  5F76               	subwf	___awdiv@dividend& (0+255),f,b
  2196  0007A2  0100               	movlb	0	; () banked
  2197  0007A4  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2198  0007A6  0100               	movlb	0	; () banked
  2199  0007A8  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2200                           
  2201                           ; BSR set to: 0
  2202  0007AA  0100               	movlb	0	; () banked
  2203  0007AC  817C               	bsf	___awdiv@quotient& (0+255),0,b
  2204  0007AE                     l2338:
  2205                           
  2206                           ; BSR set to: 0
  2207  0007AE  0100               	movlb	0	; () banked
  2208  0007B0  90D8               	bcf	status,0,c
  2209  0007B2  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2210  0007B4  3378               	rrcf	___awdiv@divisor& (0+255),f,b
  2211                           
  2212                           ; BSR set to: 0
  2213  0007B6  0100               	movlb	0	; () banked
  2214  0007B8  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
  2215  0007BA  D7E1               	goto	l2330
  2216  0007BC                     l2342:
  2217                           
  2218                           ; BSR set to: 0
  2219  0007BC  0100               	movlb	0	; () banked
  2220  0007BE  517B               	movf	___awdiv@sign& (0+255),w,b
  2221  0007C0  0100               	movlb	0	; () banked
  2222  0007C2  B4D8               	btfsc	status,2,c
  2223  0007C4  D005               	goto	l2346
  2224                           
  2225                           ; BSR set to: 0
  2226  0007C6  0100               	movlb	0	; () banked
  2227  0007C8  6D7C               	negf	___awdiv@quotient& (0+255),b
  2228  0007CA  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2229  0007CC  B0D8               	btfsc	status,0,c
  2230  0007CE  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2231  0007D0                     l2346:
  2232                           
  2233                           ; BSR set to: 0
  2234  0007D0  C07C  F076         	movff	___awdiv@quotient,?___awdiv
  2235  0007D4  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
  2236  0007D8  0012               	return	
  2237  0007DA                     __end_of___awdiv:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           intcon	equ	0xFF2
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           postdec1	equ	0xFE5
  2247                           fsr1l	equ	0xFE1
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _InitDevice *****************
  2251 ;; Defined at:
  2252 ;;		line 11 in file "init.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg, status,2
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    3
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text15
  2281  0002EE                     __ptext15:
  2282                           	opt stack 0
  2283  0002EE                     _InitDevice:
  2284                           	opt stack 27
  2285                           
  2286                           ;init.c: 12: count = 0x01;
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;incstack = 0
  2290  0002EE  0E01               	movlw	1
  2291  0002F0  0100               	movlb	0	; () banked
  2292  0002F2  6F85               	movwf	_count& (0+255),b
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;init.c: 15: OSCCONbits.IRCF = 7;
  2296  0002F4  88D3               	bsf	4051,4,c	;volatile
  2297  0002F6  8AD3               	bsf	4051,5,c	;volatile
  2298  0002F8  8CD3               	bsf	4051,6,c	;volatile
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  2302  0002FA  8C9B               	bsf	3995,6,c	;volatile
  2303                           
  2304                           ;init.c: 21: heartbeatCount = 0;
  2305  0002FC  0E00               	movlw	0
  2306  0002FE  0100               	movlb	0	; () banked
  2307  000300  6F75               	movwf	(_heartbeatCount+1)& (0+255),b
  2308  000302  0E00               	movlw	0
  2309  000304  6F74               	movwf	_heartbeatCount& (0+255),b
  2310                           
  2311                           ;init.c: 22: buttonWasPressed = 0;
  2312  000306  0E00               	movlw	0
  2313  000308  6E29               	movwf	_buttonWasPressed,c
  2314                           
  2315                           ;init.c: 27: TRISA = 0b00111111;
  2316  00030A  0E3F               	movlw	63
  2317  00030C  6E92               	movwf	3986,c	;volatile
  2318                           
  2319                           ;init.c: 28: ANCON0 = 0x01;
  2320  00030E  0E01               	movlw	1
  2321  000310  010F               	movlb	15	; () banked
  2322  000312  6F5D               	movwf	93,b	;volatile
  2323                           
  2324                           ;init.c: 29: ANCON1 = 0x00;
  2325  000314  0E00               	movlw	0
  2326  000316  010F               	movlb	15	; () banked
  2327  000318  6F5C               	movwf	92,b	;volatile
  2328                           
  2329                           ;init.c: 32: ADCON0 = 0x00;
  2330  00031A  0E00               	movlw	0
  2331  00031C  6EC2               	movwf	4034,c	;volatile
  2332                           
  2333                           ;init.c: 33: ADCON1 = 0x00;
  2334  00031E  0E00               	movlw	0
  2335  000320  6EC1               	movwf	4033,c	;volatile
  2336                           
  2337                           ;init.c: 34: ADCON2 = 0b10000000;
  2338  000322  0E80               	movlw	128
  2339  000324  6EC0               	movwf	4032,c	;volatile
  2340                           
  2341                           ; BSR set to: 15
  2342                           ;init.c: 38: ADCON2bits.ADFM=1;
  2343  000326  8EC0               	bsf	4032,7,c	;volatile
  2344                           
  2345                           ;init.c: 39: ADCON2bits.ACQT=1;
  2346  000328  50C0               	movf	4032,w,c	;volatile
  2347  00032A  0BC7               	andlw	-57
  2348  00032C  0908               	iorlw	8
  2349  00032E  6EC0               	movwf	4032,c	;volatile
  2350                           
  2351                           ;init.c: 40: ADCON2bits.ADCS=2;
  2352  000330  50C0               	movf	4032,w,c	;volatile
  2353  000332  0BF8               	andlw	-8
  2354  000334  0902               	iorlw	2
  2355  000336  6EC0               	movwf	4032,c	;volatile
  2356                           
  2357                           ;init.c: 44: LATA = 0x00;
  2358  000338  0E00               	movlw	0
  2359  00033A  6E89               	movwf	3977,c	;volatile
  2360                           
  2361                           ;init.c: 46: TRISB = 0b00001100;
  2362  00033C  0E0C               	movlw	12
  2363  00033E  6E93               	movwf	3987,c	;volatile
  2364                           
  2365                           ;init.c: 47: LATB = 0x00;
  2366  000340  0E00               	movlw	0
  2367  000342  6E8A               	movwf	3978,c	;volatile
  2368                           
  2369                           ;init.c: 49: TRISC = 0x00;
  2370  000344  0E00               	movlw	0
  2371  000346  6E94               	movwf	3988,c	;volatile
  2372                           
  2373                           ;init.c: 50: LATC = 0x00;
  2374  000348  0E00               	movlw	0
  2375  00034A  6E8B               	movwf	3979,c	;volatile
  2376                           
  2377                           ;init.c: 56: MAP_BRAKE = 0;
  2378  00034C  0E00               	movlw	0
  2379  00034E  6E0E               	movwf	_MAP_BRAKE+1,c
  2380  000350  0E00               	movlw	0
  2381  000352  6E0D               	movwf	_MAP_BRAKE,c
  2382                           
  2383                           ;init.c: 57: MAP_BACKLIGHT = 0;
  2384  000354  0E00               	movlw	0
  2385  000356  6E0A               	movwf	_MAP_BACKLIGHT+1,c
  2386  000358  0E00               	movlw	0
  2387  00035A  6E09               	movwf	_MAP_BACKLIGHT,c
  2388                           
  2389                           ;init.c: 58: MAP_V_BLINK = 0;
  2390  00035C  0E00               	movlw	0
  2391  00035E  6E18               	movwf	_MAP_V_BLINK+1,c
  2392  000360  0E00               	movlw	0
  2393  000362  6E17               	movwf	_MAP_V_BLINK,c
  2394                           
  2395                           ;init.c: 59: MAP_H_BLINK = 0;
  2396  000364  0E00               	movlw	0
  2397  000366  6E12               	movwf	_MAP_H_BLINK+1,c
  2398  000368  0E00               	movlw	0
  2399  00036A  6E11               	movwf	_MAP_H_BLINK,c
  2400                           
  2401                           ;init.c: 60: MAP_DIRECTION = 0;
  2402  00036C  0E00               	movlw	0
  2403  00036E  6E10               	movwf	_MAP_DIRECTION+1,c
  2404  000370  0E00               	movlw	0
  2405  000372  6E0F               	movwf	_MAP_DIRECTION,c
  2406                           
  2407                           ;init.c: 61: MAP_SAFETYPIN = 0;
  2408  000374  0E00               	movlw	0
  2409  000376  6E14               	movwf	_MAP_SAFETYPIN+1,c
  2410  000378  0E00               	movlw	0
  2411  00037A  6E13               	movwf	_MAP_SAFETYPIN,c
  2412                           
  2413                           ;init.c: 62: MAP_STOP = 0;
  2414  00037C  0E00               	movlw	0
  2415  00037E  6E16               	movwf	_MAP_STOP+1,c
  2416  000380  0E00               	movlw	0
  2417  000382  6E15               	movwf	_MAP_STOP,c
  2418                           
  2419                           ;init.c: 63: MAP_ACCELERATOR = 0;
  2420  000384  0E00               	movlw	0
  2421  000386  0100               	movlb	0	; () banked
  2422  000388  6F69               	movwf	(_MAP_ACCELERATOR+1)& (0+255),b
  2423  00038A  0E00               	movlw	0
  2424  00038C  6F68               	movwf	_MAP_ACCELERATOR& (0+255),b
  2425                           
  2426                           ;init.c: 65: TEMP_MAP_HEARTBEAT = 0;
  2427  00038E  0E00               	movlw	0
  2428  000390  0100               	movlb	0	; () banked
  2429  000392  6F73               	movwf	(_TEMP_MAP_HEARTBEAT+1)& (0+255),b
  2430  000394  0E00               	movlw	0
  2431  000396  6F72               	movwf	_TEMP_MAP_HEARTBEAT& (0+255),b
  2432                           
  2433                           ;init.c: 66: TEMP_MAP_BRAKE = 0;
  2434  000398  0E00               	movlw	0
  2435  00039A  6E1C               	movwf	_TEMP_MAP_BRAKE+1,c
  2436  00039C  0E00               	movlw	0
  2437  00039E  6E1B               	movwf	_TEMP_MAP_BRAKE,c
  2438                           
  2439                           ;init.c: 67: TEMP_MAP_BACKLIGHT = 0;
  2440  0003A0  0E00               	movlw	0
  2441  0003A2  6E1A               	movwf	_TEMP_MAP_BACKLIGHT+1,c
  2442  0003A4  0E00               	movlw	0
  2443  0003A6  6E19               	movwf	_TEMP_MAP_BACKLIGHT,c
  2444                           
  2445                           ;init.c: 68: TEMP_MAP_V_BLINK = 0;
  2446  0003A8  0E00               	movlw	0
  2447  0003AA  6E26               	movwf	_TEMP_MAP_V_BLINK+1,c
  2448  0003AC  0E00               	movlw	0
  2449  0003AE  6E25               	movwf	_TEMP_MAP_V_BLINK,c
  2450                           
  2451                           ;init.c: 69: TEMP_MAP_H_BLINK = 0;
  2452  0003B0  0E00               	movlw	0
  2453  0003B2  6E20               	movwf	_TEMP_MAP_H_BLINK+1,c
  2454  0003B4  0E00               	movlw	0
  2455  0003B6  6E1F               	movwf	_TEMP_MAP_H_BLINK,c
  2456                           
  2457                           ;init.c: 70: TEMP_MAP_DIRECTION = 0;
  2458  0003B8  0E00               	movlw	0
  2459  0003BA  6E1E               	movwf	_TEMP_MAP_DIRECTION+1,c
  2460  0003BC  0E00               	movlw	0
  2461  0003BE  6E1D               	movwf	_TEMP_MAP_DIRECTION,c
  2462                           
  2463                           ;init.c: 71: TEMP_MAP_SAFETYPIN = 0;
  2464  0003C0  0E00               	movlw	0
  2465  0003C2  6E22               	movwf	_TEMP_MAP_SAFETYPIN+1,c
  2466  0003C4  0E00               	movlw	0
  2467  0003C6  6E21               	movwf	_TEMP_MAP_SAFETYPIN,c
  2468                           
  2469                           ;init.c: 72: TEMP_MAP_STOP = 0;
  2470  0003C8  0E00               	movlw	0
  2471  0003CA  6E24               	movwf	_TEMP_MAP_STOP+1,c
  2472  0003CC  0E00               	movlw	0
  2473  0003CE  6E23               	movwf	_TEMP_MAP_STOP,c
  2474                           
  2475                           ;init.c: 73: TEMP_MAP_ACCELERATOR = 0;
  2476  0003D0  0E00               	movlw	0
  2477  0003D2  0100               	movlb	0	; () banked
  2478  0003D4  6F71               	movwf	(_TEMP_MAP_ACCELERATOR+1)& (0+255),b
  2479  0003D6  0E00               	movlw	0
  2480  0003D8  6F70               	movwf	_TEMP_MAP_ACCELERATOR& (0+255),b
  2481                           
  2482                           ;init.c: 75: MAP_BATTERYSTATUS = 0;
  2483  0003DA  0E00               	movlw	0
  2484  0003DC  6E0C               	movwf	_MAP_BATTERYSTATUS+1,c
  2485  0003DE  0E00               	movlw	0
  2486  0003E0  6E0B               	movwf	_MAP_BATTERYSTATUS,c
  2487                           
  2488                           ;init.c: 76: MAP_VELOCITY = 0;
  2489  0003E2  0E00               	movlw	0
  2490  0003E4  0100               	movlb	0	; () banked
  2491  0003E6  6F6D               	movwf	(_MAP_VELOCITY+1)& (0+255),b
  2492  0003E8  0E00               	movlw	0
  2493  0003EA  6F6C               	movwf	_MAP_VELOCITY& (0+255),b
  2494                           
  2495                           ;init.c: 77: MAP_HEARTBEAT = 0;
  2496  0003EC  0E00               	movlw	0
  2497  0003EE  0100               	movlb	0	; () banked
  2498  0003F0  6F6B               	movwf	(_MAP_HEARTBEAT+1)& (0+255),b
  2499  0003F2  0E00               	movlw	0
  2500  0003F4  6F6A               	movwf	_MAP_HEARTBEAT& (0+255),b
  2501                           
  2502                           ;init.c: 79: deadArea_gas = 5;
  2503  0003F6  0E00               	movlw	0
  2504  0003F8  0100               	movlb	0	; () banked
  2505  0003FA  6F84               	movwf	(_deadArea_gas+1)& (0+255),b
  2506  0003FC  0E05               	movlw	5
  2507  0003FE  6F83               	movwf	_deadArea_gas& (0+255),b
  2508                           
  2509                           ;init.c: 82: OFFSET_ACCELERATOR = 0b00000000;
  2510  000400  0E00               	movlw	0
  2511  000402  0100               	movlb	0	; () banked
  2512  000404  6F6F               	movwf	(_OFFSET_ACCELERATOR+1)& (0+255),b
  2513  000406  0E00               	movlw	0
  2514  000408  6F6E               	movwf	_OFFSET_ACCELERATOR& (0+255),b
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;init.c: 88: T0CONbits.TMR0ON = 1;
  2518  00040A  8ED5               	bsf	4053,7,c	;volatile
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;init.c: 89: T0CONbits.T08BIT = 0;
  2522  00040C  9CD5               	bcf	4053,6,c	;volatile
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;init.c: 90: T0CONbits.T0CS = 0;
  2526  00040E  9AD5               	bcf	4053,5,c	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;init.c: 92: T0CONbits.PSA = 0;
  2530  000410  96D5               	bcf	4053,3,c	;volatile
  2531                           
  2532                           ;init.c: 93: T0CONbits.T0PS = 3;
  2533  000412  50D5               	movf	4053,w,c	;volatile
  2534  000414  0BF8               	andlw	-8
  2535  000416  0903               	iorlw	3
  2536  000418  6ED5               	movwf	4053,c	;volatile
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;init.c: 102: T1CONbits.TMR1CS0 = 0;
  2540  00041A  9CCD               	bcf	4045,6,c	;volatile
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;init.c: 103: T1CONbits.TMR1CS1 = 0;
  2544  00041C  9ECD               	bcf	4045,7,c	;volatile
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;init.c: 104: T1CONbits.SOSCEN = 1;
  2548  00041E  86CD               	bsf	4045,3,c	;volatile
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;init.c: 106: T1CONbits.T1CKPS0 = 1;
  2552  000420  88CD               	bsf	4045,4,c	;volatile
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;init.c: 107: T1CONbits.T1CKPS1 = 1;
  2556  000422  8ACD               	bsf	4045,5,c	;volatile
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;init.c: 109: T1CONbits.nT1SYNC = 1;
  2560  000424  84CD               	bsf	4045,2,c	;volatile
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;init.c: 110: T1CONbits.RD16 = 1;
  2564  000426  82CD               	bsf	4045,1,c	;volatile
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;init.c: 111: T1CONbits.TMR1ON = 1;
  2568  000428  80CD               	bsf	4045,0,c	;volatile
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;init.c: 115: T1GCONbits.TMR1GE = 0;
  2572  00042A  9EAA               	bcf	4010,7,c	;volatile
  2573                           
  2574                           ; BSR set to: 0
  2575  00042C  0012               	return		;funcret
  2576  00042E                     __end_of_InitDevice:
  2577                           	opt stack 0
  2578                           tblptru	equ	0xFF8
  2579                           tblptrh	equ	0xFF7
  2580                           tblptrl	equ	0xFF6
  2581                           tablat	equ	0xFF5
  2582                           intcon	equ	0xFF2
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           fsr1l	equ	0xFE1
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _ECAN_Transmit *****************
  2590 ;; Defined at:
  2591 ;;		line 306 in file "ECAN.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  SIDH            1    wreg     unsigned char 
  2594 ;;  SIDL            1    0[BANK0 ] unsigned char 
  2595 ;;  DLC             1    1[BANK0 ] unsigned char 
  2596 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  2597 ;;  DATA1           1    3[BANK0 ] unsigned char 
  2598 ;;  DATA2           1    4[BANK0 ] unsigned char 
  2599 ;;  DATA3           1    5[BANK0 ] unsigned char 
  2600 ;;  DATA4           1    6[BANK0 ] unsigned char 
  2601 ;;  DATA5           1    7[BANK0 ] unsigned char 
  2602 ;;  DATA6           1    8[BANK0 ] unsigned char 
  2603 ;;  DATA7           1    9[BANK0 ] unsigned char 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  SIDH            1   10[BANK0 ] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2615 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;Total ram usage:       11 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    3
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text16
  2630  0009B6                     __ptext16:
  2631                           	opt stack 0
  2632  0009B6                     _ECAN_Transmit:
  2633                           	opt stack 27
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;incstack = 0
  2637                           ;ECAN_Transmit@SIDH stored from wreg
  2638  0009B6  0100               	movlb	0	; () banked
  2639  0009B8  6F80               	movwf	ECAN_Transmit@SIDH& (0+255),b
  2640                           
  2641                           ;ECAN.c: 318: TXB0EIDH = 0x00;
  2642  0009BA  0E00               	movlw	0
  2643  0009BC  010F               	movlb	15	; () banked
  2644  0009BE  6F23               	movwf	35,b	;volatile
  2645                           
  2646                           ;ECAN.c: 319: TXB0EIDL = 0x00;
  2647  0009C0  0E00               	movlw	0
  2648  0009C2  010F               	movlb	15	; () banked
  2649  0009C4  6F24               	movwf	36,b	;volatile
  2650                           
  2651                           ; BSR set to: 15
  2652                           ;ECAN.c: 322: TXB0SIDH = SIDH;
  2653  0009C6  C080  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  2654                           
  2655                           ; BSR set to: 15
  2656                           ;ECAN.c: 323: TXB0SIDL = SIDL;
  2657  0009CA  C076  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  2658                           
  2659                           ; BSR set to: 15
  2660                           ;ECAN.c: 324: TXB0DLC = DLC;
  2661  0009CE  C077  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  2662                           
  2663                           ; BSR set to: 15
  2664                           ;ECAN.c: 333: TXB0D0 = TRANSMIT_ID;
  2665  0009D2  C078  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  2666                           
  2667                           ; BSR set to: 15
  2668                           ;ECAN.c: 334: TXB0D1 = DATA1;
  2669  0009D6  C079  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  2670                           
  2671                           ; BSR set to: 15
  2672                           ;ECAN.c: 335: TXB0D2 = DATA2;
  2673  0009DA  C07A  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  2674                           
  2675                           ; BSR set to: 15
  2676                           ;ECAN.c: 336: TXB0D3 = DATA3;
  2677  0009DE  C07B  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  2678                           
  2679                           ; BSR set to: 15
  2680                           ;ECAN.c: 337: TXB0D4 = DATA4;
  2681  0009E2  C07C  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  2682                           
  2683                           ; BSR set to: 15
  2684                           ;ECAN.c: 338: TXB0D5 = DATA5;
  2685  0009E6  C07D  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  2686                           
  2687                           ; BSR set to: 15
  2688                           ;ECAN.c: 339: TXB0D6 = DATA6;
  2689  0009EA  C07E  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  2690                           
  2691                           ; BSR set to: 15
  2692                           ;ECAN.c: 340: TXB0D7 = DATA7;
  2693  0009EE  C07F  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  2694                           
  2695                           ; BSR set to: 15
  2696                           ;ECAN.c: 342: TXB0CONbits.TXREQ = 1;
  2697  0009F2  010F               	movlb	15	; () banked
  2698  0009F4  8720               	bsf	32,3,b	;volatile
  2699                           
  2700                           ; BSR set to: 15
  2701  0009F6  0012               	return		;funcret
  2702  0009F8                     __end_of_ECAN_Transmit:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           intcon	equ	0xFF2
  2709                           postinc0	equ	0xFEE
  2710                           wreg	equ	0xFE8
  2711                           postdec1	equ	0xFE5
  2712                           fsr1l	equ	0xFE1
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _ECAN_Receive *****************
  2716 ;; Defined at:
  2717 ;;		line 225 in file "ECAN.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      unsigned char 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        1 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text17
  2746  00063E                     __ptext17:
  2747                           	opt stack 0
  2748  00063E                     _ECAN_Receive:
  2749                           	opt stack 27
  2750                           
  2751                           ;ECAN.c: 227: unsigned char RXMsgFlag;
  2752                           ;ECAN.c: 229: RXMsgFlag = 0x00;
  2753                           
  2754                           ; BSR set to: 15
  2755                           ;incstack = 0
  2756  00063E  0E00               	movlw	0
  2757  000640  0100               	movlb	0	; () banked
  2758  000642  6F76               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;ECAN.c: 231: if (RXB0CONbits.RXFUL)
  2762  000644  AE60               	btfss	3936,7,c	;volatile
  2763  000646  D01C               	goto	l474
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;ECAN.c: 232: {
  2767                           ;ECAN.c: 233: temp_EIDH = RXB0EIDH;
  2768  000648  CF63 F031          	movff	3939,_temp_EIDH	;volatile
  2769                           
  2770                           ;ECAN.c: 234: temp_EIDL = RXB0EIDL;
  2771  00064C  CF64 F032          	movff	3940,_temp_EIDL	;volatile
  2772                           
  2773                           ;ECAN.c: 235: temp_SIDH = RXB0SIDH;
  2774  000650  CF61 F033          	movff	3937,_temp_SIDH	;volatile
  2775                           
  2776                           ;ECAN.c: 236: temp_SIDL = RXB0SIDL;
  2777  000654  CF62 F034          	movff	3938,_temp_SIDL	;volatile
  2778                           
  2779                           ;ECAN.c: 237: temp_DLC = RXB0DLC;
  2780  000658  CF65 F030          	movff	3941,_temp_DLC	;volatile
  2781                           
  2782                           ;ECAN.c: 238: BITDATA = RXB0D0;
  2783  00065C  CF66 F027          	movff	3942,_BITDATA	;volatile
  2784                           
  2785                           ;ECAN.c: 239: TEMP_ACCELERATOR = RXB0D1;
  2786  000660  CF67 F028          	movff	3943,_TEMP_ACCELERATOR	;volatile
  2787                           
  2788                           ;ECAN.c: 240: temp_D2 = RXB0D2;
  2789  000664  CF68 F02A          	movff	3944,_temp_D2	;volatile
  2790                           
  2791                           ;ECAN.c: 241: temp_D3 = RXB0D3;
  2792  000668  CF69 F02B          	movff	3945,_temp_D3	;volatile
  2793                           
  2794                           ;ECAN.c: 242: temp_D4 = RXB0D4;
  2795  00066C  CF6A F02C          	movff	3946,_temp_D4	;volatile
  2796                           
  2797                           ;ECAN.c: 243: temp_D5 = RXB0D5;
  2798  000670  CF6B F02D          	movff	3947,_temp_D5	;volatile
  2799                           
  2800                           ;ECAN.c: 244: temp_D6 = RXB0D6;
  2801  000674  CF6C F02E          	movff	3948,_temp_D6	;volatile
  2802                           
  2803                           ;ECAN.c: 245: temp_D7 = RXB0D7;
  2804  000678  CF6D F02F          	movff	3949,_temp_D7	;volatile
  2805                           
  2806                           ;ECAN.c: 246: RXB0CONbits.RXFUL = 0;
  2807  00067C  9E60               	bcf	3936,7,c	;volatile
  2808  00067E  D03F               	goto	l2450
  2809  000680                     l474:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;ECAN.c: 249: else if (RXB1CONbits.RXFUL)
  2813  000680  010F               	movlb	15	; () banked
  2814  000682  AF30               	btfss	48,7,b	;volatile
  2815  000684  D01D               	goto	l476
  2816                           
  2817                           ; BSR set to: 15
  2818                           ;ECAN.c: 250: {
  2819                           ;ECAN.c: 251: temp_EIDH = RXB1EIDH;
  2820  000686  CF33 F031          	movff	3891,_temp_EIDH	;volatile
  2821                           
  2822                           ;ECAN.c: 252: temp_EIDL = RXB1EIDL;
  2823  00068A  CF34 F032          	movff	3892,_temp_EIDL	;volatile
  2824                           
  2825                           ;ECAN.c: 253: temp_SIDH = RXB1SIDH;
  2826  00068E  CF31 F033          	movff	3889,_temp_SIDH	;volatile
  2827                           
  2828                           ;ECAN.c: 254: temp_SIDL = RXB1SIDL;
  2829  000692  CF32 F034          	movff	3890,_temp_SIDL	;volatile
  2830                           
  2831                           ;ECAN.c: 255: temp_DLC = RXB1DLC;
  2832  000696  CF35 F030          	movff	3893,_temp_DLC	;volatile
  2833                           
  2834                           ;ECAN.c: 256: BITDATA = RXB1D0;
  2835  00069A  CF36 F027          	movff	3894,_BITDATA	;volatile
  2836                           
  2837                           ;ECAN.c: 257: TEMP_ACCELERATOR = RXB1D1;
  2838  00069E  CF37 F028          	movff	3895,_TEMP_ACCELERATOR	;volatile
  2839                           
  2840                           ;ECAN.c: 258: temp_D2 = RXB1D2;
  2841  0006A2  CF38 F02A          	movff	3896,_temp_D2	;volatile
  2842                           
  2843                           ;ECAN.c: 259: temp_D3 = RXB1D3;
  2844  0006A6  CF39 F02B          	movff	3897,_temp_D3	;volatile
  2845                           
  2846                           ;ECAN.c: 260: temp_D4 = RXB1D4;
  2847  0006AA  CF3A F02C          	movff	3898,_temp_D4	;volatile
  2848                           
  2849                           ;ECAN.c: 261: temp_D5 = RXB1D5;
  2850  0006AE  CF3B F02D          	movff	3899,_temp_D5	;volatile
  2851                           
  2852                           ;ECAN.c: 262: temp_D6 = RXB1D6;
  2853  0006B2  CF3C F02E          	movff	3900,_temp_D6	;volatile
  2854                           
  2855                           ;ECAN.c: 263: temp_D7 = RXB1D7;
  2856  0006B6  CF3D F02F          	movff	3901,_temp_D7	;volatile
  2857                           
  2858                           ;ECAN.c: 264: RXB1CONbits.RXFUL = 0;
  2859  0006BA  010F               	movlb	15	; () banked
  2860  0006BC  9F30               	bcf	48,7,b	;volatile
  2861  0006BE  D01F               	goto	l2450
  2862  0006C0                     l476:
  2863                           
  2864                           ; BSR set to: 15
  2865                           ;ECAN.c: 267: else if (B0CONbits.RXFUL)
  2866  0006C0  010E               	movlb	14	; () banked
  2867  0006C2  AF80               	btfss	128,7,b	;volatile
  2868  0006C4  D01F               	goto	l2452
  2869                           
  2870                           ; BSR set to: 14
  2871                           ;ECAN.c: 268: {
  2872                           ;ECAN.c: 269: temp_EIDH = B0EIDH;
  2873  0006C6  CE83 F031          	movff	3715,_temp_EIDH	;volatile
  2874                           
  2875                           ;ECAN.c: 270: temp_EIDL = B0EIDL;
  2876  0006CA  CE84 F032          	movff	3716,_temp_EIDL	;volatile
  2877                           
  2878                           ;ECAN.c: 271: temp_SIDH = B0SIDH;
  2879  0006CE  CE81 F033          	movff	3713,_temp_SIDH	;volatile
  2880                           
  2881                           ;ECAN.c: 272: temp_SIDL = B0SIDL;
  2882  0006D2  CE82 F034          	movff	3714,_temp_SIDL	;volatile
  2883                           
  2884                           ;ECAN.c: 273: temp_DLC = B0DLC;
  2885  0006D6  CE85 F030          	movff	3717,_temp_DLC	;volatile
  2886                           
  2887                           ;ECAN.c: 274: BITDATA = B0D0;
  2888  0006DA  CE86 F027          	movff	3718,_BITDATA	;volatile
  2889                           
  2890                           ;ECAN.c: 275: TEMP_ACCELERATOR = B0D1;
  2891  0006DE  CE87 F028          	movff	3719,_TEMP_ACCELERATOR	;volatile
  2892                           
  2893                           ;ECAN.c: 276: temp_D2 = B0D2;
  2894  0006E2  CE88 F02A          	movff	3720,_temp_D2	;volatile
  2895                           
  2896                           ;ECAN.c: 277: temp_D3 = B0D3;
  2897  0006E6  CE89 F02B          	movff	3721,_temp_D3	;volatile
  2898                           
  2899                           ;ECAN.c: 278: temp_D4 = B0D4;
  2900  0006EA  CE8A F02C          	movff	3722,_temp_D4	;volatile
  2901                           
  2902                           ;ECAN.c: 279: temp_D5 = B0D5;
  2903  0006EE  CE8B F02D          	movff	3723,_temp_D5	;volatile
  2904                           
  2905                           ;ECAN.c: 280: temp_D6 = B0D6;
  2906  0006F2  CE8C F02E          	movff	3724,_temp_D6	;volatile
  2907                           
  2908                           ;ECAN.c: 281: temp_D7 = B0D7;
  2909  0006F6  CE8D F02F          	movff	3725,_temp_D7	;volatile
  2910                           
  2911                           ;ECAN.c: 283: B0CONbits.RXFUL = 0;
  2912  0006FA  010E               	movlb	14	; () banked
  2913  0006FC  9F80               	bcf	128,7,b	;volatile
  2914  0006FE                     l2450:
  2915                           
  2916                           ; BSR set to: 14
  2917                           ;ECAN.c: 284: RXMsgFlag = 0x01;
  2918  0006FE  0E01               	movlw	1
  2919  000700  0100               	movlb	0	; () banked
  2920  000702  6F76               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2921  000704                     l2452:
  2922                           
  2923                           ;ECAN.c: 285: }
  2924                           ;ECAN.c: 287: if (RXMsgFlag == 0x01)
  2925  000704  0100               	movlb	0	; () banked
  2926  000706  0576               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  2927  000708  A4D8               	btfss	status,2,c
  2928  00070A  D006               	goto	l2464
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;ECAN.c: 288: {
  2932                           ;ECAN.c: 289: RXMsgFlag = 0x00;
  2933  00070C  0E00               	movlw	0
  2934  00070E  0100               	movlb	0	; () banked
  2935  000710  6F76               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;ECAN.c: 290: PIR5bits.RXB1IF = 0;
  2939  000712  9277               	bcf	3959,1,c	;volatile
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;ECAN.c: 291: return 1;
  2943  000714  0E01               	movlw	1
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;ECAN.c: 292: }
  2947                           
  2948                           ; BSR set to: 0
  2949  000716  0012               	return	
  2950  000718                     l2464:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;ECAN.c: 293: else
  2954                           ;ECAN.c: 294: {
  2955                           ;ECAN.c: 295: return 0;
  2956  000718  0E00               	movlw	0
  2957                           
  2958                           ; BSR set to: 0
  2959  00071A  0012               	return	
  2960  00071C                     __end_of_ECAN_Receive:
  2961                           	opt stack 0
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           intcon	equ	0xFF2
  2967                           postinc0	equ	0xFEE
  2968                           wreg	equ	0xFE8
  2969                           postdec1	equ	0xFE5
  2970                           fsr1l	equ	0xFE1
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _CANSetup *****************
  2974 ;; Defined at:
  2975 ;;		line 111 in file "ECAN.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;Total ram usage:        0 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    3
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text18
  3004  00042E                     __ptext18:
  3005                           	opt stack 0
  3006  00042E                     _CANSetup:
  3007                           	opt stack 27
  3008                           
  3009                           ;ECAN.c: 114: CANCON = 0x80;
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;incstack = 0
  3013  00042E  0E80               	movlw	128
  3014  000430  6E6F               	movwf	3951,c	;volatile
  3015  000432                     l2386:
  3016  000432  386E               	swapf	3950,w,c	;volatile
  3017  000434  32E8               	rrcf	wreg,f,c
  3018  000436  0B07               	andlw	7
  3019  000438  0A04               	xorlw	4
  3020  00043A  A4D8               	btfss	status,2,c
  3021  00043C  D7FA               	goto	l2386
  3022                           
  3023                           ;ECAN.c: 118: ECANCON = 0x40;
  3024  00043E  0E40               	movlw	64
  3025  000440  6E72               	movwf	3954,c	;volatile
  3026                           
  3027                           ;ECAN.c: 122: BRGCON1 = 0x81;
  3028  000442  0E81               	movlw	129
  3029  000444  010E               	movlb	14	; () banked
  3030  000446  6F43               	movwf	67,b	;volatile
  3031                           
  3032                           ;ECAN.c: 123: BRGCON2 = 0xB8;
  3033  000448  0EB8               	movlw	184
  3034  00044A  010E               	movlb	14	; () banked
  3035  00044C  6F44               	movwf	68,b	;volatile
  3036                           
  3037                           ;ECAN.c: 124: BRGCON3 = 0x05;
  3038  00044E  0E05               	movlw	5
  3039  000450  010E               	movlb	14	; () banked
  3040  000452  6F45               	movwf	69,b	;volatile
  3041                           
  3042                           ;ECAN.c: 129: BSEL0 = 0xF8;
  3043  000454  0EF8               	movlw	248
  3044  000456  010E               	movlb	14	; () banked
  3045  000458  6F7D               	movwf	125,b	;volatile
  3046                           
  3047                           ;ECAN.c: 133: RXM0EIDH = 0x00;
  3048  00045A  0E00               	movlw	0
  3049  00045C  010E               	movlb	14	; () banked
  3050  00045E  6FFA               	movwf	250,b	;volatile
  3051                           
  3052                           ;ECAN.c: 134: RXM0EIDL = 0x00;
  3053  000460  0E00               	movlw	0
  3054  000462  010E               	movlb	14	; () banked
  3055  000464  6FFB               	movwf	251,b	;volatile
  3056                           
  3057                           ; BSR set to: 14
  3058                           ;ECAN.c: 135: RXM0SIDH = 0xFF;
  3059  000466  010E               	movlb	14	; () banked
  3060  000468  69F8               	setf	248,b	;volatile
  3061                           
  3062                           ;ECAN.c: 136: RXM0SIDL = 0xE0;
  3063  00046A  0EE0               	movlw	224
  3064  00046C  010E               	movlb	14	; () banked
  3065  00046E  6FF9               	movwf	249,b	;volatile
  3066                           
  3067                           ;ECAN.c: 139: RXM1EIDH = 0x00;
  3068  000470  0E00               	movlw	0
  3069  000472  010E               	movlb	14	; () banked
  3070  000474  6FFE               	movwf	254,b	;volatile
  3071                           
  3072                           ;ECAN.c: 140: RXM1EIDL = 0x00;
  3073  000476  0E00               	movlw	0
  3074  000478  010E               	movlb	14	; () banked
  3075  00047A  6FFF               	movwf	255,b	;volatile
  3076                           
  3077                           ; BSR set to: 14
  3078                           ;ECAN.c: 141: RXM1SIDH = 0xFF;
  3079  00047C  010E               	movlb	14	; () banked
  3080  00047E  69FC               	setf	252,b	;volatile
  3081                           
  3082                           ;ECAN.c: 142: RXM1SIDL = 0xE0;
  3083  000480  0EE0               	movlw	224
  3084  000482  010E               	movlb	14	; () banked
  3085  000484  6FFD               	movwf	253,b	;volatile
  3086                           
  3087                           ;ECAN.c: 146: RXFCON0 = 0x07;
  3088  000486  0E07               	movlw	7
  3089  000488  010E               	movlb	14	; () banked
  3090  00048A  6F46               	movwf	70,b	;volatile
  3091                           
  3092                           ;ECAN.c: 147: RXFCON1 = 0x00;
  3093  00048C  0E00               	movlw	0
  3094  00048E  010E               	movlb	14	; () banked
  3095  000490  6F47               	movwf	71,b	;volatile
  3096                           
  3097                           ;ECAN.c: 150: MSEL0 = 0xC0;
  3098  000492  0EC0               	movlw	192
  3099  000494  010E               	movlb	14	; () banked
  3100  000496  6F79               	movwf	121,b	;volatile
  3101                           
  3102                           ; BSR set to: 14
  3103                           ;ECAN.c: 151: MSEL1 = 0xFF;
  3104  000498  010E               	movlb	14	; () banked
  3105  00049A  697A               	setf	122,b	;volatile
  3106                           
  3107                           ; BSR set to: 14
  3108                           ;ECAN.c: 152: MSEL2 = 0xFF;
  3109  00049C  010E               	movlb	14	; () banked
  3110  00049E  697B               	setf	123,b	;volatile
  3111                           
  3112                           ; BSR set to: 14
  3113                           ;ECAN.c: 153: MSEL3 = 0xFF;
  3114  0004A0  010E               	movlb	14	; () banked
  3115  0004A2  697C               	setf	124,b	;volatile
  3116                           
  3117                           ;ECAN.c: 157: RXFBCON0 = 0x10;
  3118  0004A4  0E10               	movlw	16
  3119  0004A6  010E               	movlb	14	; () banked
  3120  0004A8  6F71               	movwf	113,b	;volatile
  3121                           
  3122                           ;ECAN.c: 158: RXFBCON1 = 0xF2;
  3123  0004AA  0EF2               	movlw	242
  3124  0004AC  010E               	movlb	14	; () banked
  3125  0004AE  6F72               	movwf	114,b	;volatile
  3126                           
  3127                           ; BSR set to: 14
  3128                           ;ECAN.c: 160: RXFBCON2 = 0xFF;
  3129  0004B0  010E               	movlb	14	; () banked
  3130  0004B2  6973               	setf	115,b	;volatile
  3131                           
  3132                           ; BSR set to: 14
  3133                           ;ECAN.c: 161: RXFBCON3 = 0xFF;
  3134  0004B4  010E               	movlb	14	; () banked
  3135  0004B6  6974               	setf	116,b	;volatile
  3136                           
  3137                           ; BSR set to: 14
  3138                           ;ECAN.c: 162: RXFBCON4 = 0xFF;
  3139  0004B8  010E               	movlb	14	; () banked
  3140  0004BA  6975               	setf	117,b	;volatile
  3141                           
  3142                           ; BSR set to: 14
  3143                           ;ECAN.c: 163: RXFBCON5 = 0xFF;
  3144  0004BC  010E               	movlb	14	; () banked
  3145  0004BE  6976               	setf	118,b	;volatile
  3146                           
  3147                           ; BSR set to: 14
  3148                           ;ECAN.c: 164: RXFBCON6 = 0xFF;
  3149  0004C0  010E               	movlb	14	; () banked
  3150  0004C2  6977               	setf	119,b	;volatile
  3151                           
  3152                           ; BSR set to: 14
  3153                           ;ECAN.c: 165: RXFBCON7 = 0xFF;
  3154  0004C4  010E               	movlb	14	; () banked
  3155  0004C6  6978               	setf	120,b	;volatile
  3156                           
  3157                           ;ECAN.c: 171: RXF0EIDH = 0x00;
  3158  0004C8  0E00               	movlw	0
  3159  0004CA  010E               	movlb	14	; () banked
  3160  0004CC  6FE2               	movwf	226,b	;volatile
  3161                           
  3162                           ;ECAN.c: 172: RXF0EIDL = 0x00;
  3163  0004CE  0E00               	movlw	0
  3164  0004D0  010E               	movlb	14	; () banked
  3165  0004D2  6FE3               	movwf	227,b	;volatile
  3166                           
  3167                           ;ECAN.c: 173: RXF0SIDH = 0x32;
  3168  0004D4  0E32               	movlw	50
  3169  0004D6  010E               	movlb	14	; () banked
  3170  0004D8  6FE0               	movwf	224,b	;volatile
  3171                           
  3172                           ;ECAN.c: 174: RXF0SIDL = 0xC0;
  3173  0004DA  0EC0               	movlw	192
  3174  0004DC  010E               	movlb	14	; () banked
  3175  0004DE  6FE1               	movwf	225,b	;volatile
  3176                           
  3177                           ;ECAN.c: 175: RXF1EIDH = 0x00;
  3178  0004E0  0E00               	movlw	0
  3179  0004E2  010E               	movlb	14	; () banked
  3180  0004E4  6FE6               	movwf	230,b	;volatile
  3181                           
  3182                           ;ECAN.c: 176: RXF1EIDL = 0x00;
  3183  0004E6  0E00               	movlw	0
  3184  0004E8  010E               	movlb	14	; () banked
  3185  0004EA  6FE7               	movwf	231,b	;volatile
  3186                           
  3187                           ;ECAN.c: 177: RXF1SIDH = 0x33;
  3188  0004EC  0E33               	movlw	51
  3189  0004EE  010E               	movlb	14	; () banked
  3190  0004F0  6FE4               	movwf	228,b	;volatile
  3191                           
  3192                           ;ECAN.c: 178: RXF1SIDL = 0x40;
  3193  0004F2  0E40               	movlw	64
  3194  0004F4  010E               	movlb	14	; () banked
  3195  0004F6  6FE5               	movwf	229,b	;volatile
  3196                           
  3197                           ;ECAN.c: 179: RXF2EIDH = 0x00;
  3198  0004F8  0E00               	movlw	0
  3199  0004FA  010E               	movlb	14	; () banked
  3200  0004FC  6FEA               	movwf	234,b	;volatile
  3201                           
  3202                           ;ECAN.c: 180: RXF2EIDL = 0x00;
  3203  0004FE  0E00               	movlw	0
  3204  000500  010E               	movlb	14	; () banked
  3205  000502  6FEB               	movwf	235,b	;volatile
  3206                           
  3207                           ;ECAN.c: 181: RXF2SIDH = 0x33;
  3208  000504  0E33               	movlw	51
  3209  000506  010E               	movlb	14	; () banked
  3210  000508  6FE8               	movwf	232,b	;volatile
  3211                           
  3212                           ;ECAN.c: 182: RXF2SIDL = 0xC0;
  3213  00050A  0EC0               	movlw	192
  3214  00050C  010E               	movlb	14	; () banked
  3215  00050E  6FE9               	movwf	233,b	;volatile
  3216                           
  3217                           ;ECAN.c: 185: if (0 ==1)
  3218  000510  D00E               	goto	l2420
  3219  000512                     l2414:
  3220  000512  386E               	swapf	3950,w,c	;volatile
  3221  000514  32E8               	rrcf	wreg,f,c
  3222  000516  0B07               	andlw	7
  3223  000518  0A40               	xorlw	64
  3224  00051A  A4D8               	btfss	status,2,c
  3225  00051C  D017               	goto	l2428
  3226  00051E  D7F9               	goto	l2414
  3227  000520                     l2418:
  3228  000520  386E               	swapf	3950,w,c	;volatile
  3229  000522  32E8               	rrcf	wreg,f,c
  3230  000524  0B07               	andlw	7
  3231  000526  0A60               	xorlw	96
  3232  000528  A4D8               	btfss	status,2,c
  3233  00052A  D010               	goto	l2428
  3234  00052C  D7F9               	goto	l2418
  3235  00052E                     l2420:
  3236                           
  3237                           ;ECAN.c: 196: CANCON = 0x00;
  3238  00052E  0E00               	movlw	0
  3239  000530  6E6F               	movwf	3951,c	;volatile
  3240  000532                     l2422:
  3241  000532  386E               	swapf	3950,w,c	;volatile
  3242  000534  32E8               	rrcf	wreg,f,c
  3243  000536  0B07               	andlw	7
  3244  000538  0900               	iorlw	0
  3245  00053A  A4D8               	btfss	status,2,c
  3246  00053C  D007               	goto	l2428
  3247  00053E  D7F9               	goto	l2422
  3248  000540                     l2426:
  3249  000540  386E               	swapf	3950,w,c	;volatile
  3250  000542  32E8               	rrcf	wreg,f,c
  3251  000544  0B07               	andlw	7
  3252  000546  0A40               	xorlw	64
  3253  000548  B4D8               	btfsc	status,2,c
  3254  00054A  D7FA               	goto	l2426
  3255  00054C                     l2428:
  3256                           
  3257                           ;ECAN.c: 204: }
  3258                           ;ECAN.c: 207: RXB0CON = 0x00;
  3259  00054C  0E00               	movlw	0
  3260  00054E  6E60               	movwf	3936,c	;volatile
  3261                           
  3262                           ;ECAN.c: 208: RXB1CON = 0x00;
  3263  000550  0E00               	movlw	0
  3264  000552  010F               	movlb	15	; () banked
  3265  000554  6F30               	movwf	48,b	;volatile
  3266                           
  3267                           ;ECAN.c: 211: CAN_ERRORBIT = 0;
  3268  000556  0E00               	movlw	0
  3269  000558  6E06               	movwf	_CAN_ERRORBIT+1,c
  3270  00055A  0E00               	movlw	0
  3271  00055C  6E05               	movwf	_CAN_ERRORBIT,c
  3272                           
  3273                           ; BSR set to: 15
  3274  00055E  0012               	return		;funcret
  3275  000560                     __end_of_CANSetup:
  3276                           	opt stack 0
  3277                           tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           intcon	equ	0xFF2
  3282                           postinc0	equ	0xFEE
  3283                           wreg	equ	0xFE8
  3284                           postdec1	equ	0xFE5
  3285                           fsr1l	equ	0xFE1
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function _ISR *****************
  3289 ;; Defined at:
  3290 ;;		line 72 in file "main.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3307 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3308 ;;Total ram usage:       14 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    2
  3311 ;; This function calls:
  3312 ;;		_danger
  3313 ;; This function is called by:
  3314 ;;		Interrupt level 2
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	intcode
  3319  000008                     __pintcode:
  3320                           	opt stack 0
  3321  000008                     _ISR:
  3322                           	opt stack 25
  3323                           
  3324                           ; BSR set to: 15
  3325                           ;incstack = 0
  3326  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3327  00000A  CFFA F03E          	movff	pclath,??_ISR
  3328  00000E  CFFB F03F          	movff	pclatu,??_ISR+1
  3329  000012  CFE9 F040          	movff	fsr0l,??_ISR+2
  3330  000016  CFEA F041          	movff	fsr0h,??_ISR+3
  3331  00001A  CFE1 F042          	movff	fsr1l,??_ISR+4
  3332  00001E  CFE2 F043          	movff	fsr1h,??_ISR+5
  3333  000022  CFD9 F044          	movff	fsr2l,??_ISR+6
  3334  000026  CFDA F045          	movff	fsr2h,??_ISR+7
  3335  00002A  CFF3 F046          	movff	prodl,??_ISR+8
  3336  00002E  CFF4 F047          	movff	prodh,??_ISR+9
  3337  000032  CFF6 F048          	movff	tblptrl,??_ISR+10
  3338  000036  CFF7 F049          	movff	tblptrh,??_ISR+11
  3339  00003A  CFF8 F04A          	movff	tblptru,??_ISR+12
  3340  00003E  CFF5 F04B          	movff	tablat,??_ISR+13
  3341                           
  3342                           ;main.c: 76: if(IRXIF){
  3343  000042  AE77               	btfss	3959,7,c	;volatile
  3344  000044  D008               	goto	i2l2244
  3345                           
  3346                           ;main.c: 77: if(TXB0CONbits.TXERR){
  3347  000046  010F               	movlb	15	; () banked
  3348  000048  A920               	btfss	32,4,b	;volatile
  3349  00004A  D004               	goto	i2l2242
  3350                           
  3351                           ; BSR set to: 15
  3352                           ;main.c: 78: CAN_ERRORBIT = 1;
  3353  00004C  0E00               	movlw	0
  3354  00004E  6E06               	movwf	_CAN_ERRORBIT+1,c
  3355  000050  0E01               	movlw	1
  3356  000052  6E05               	movwf	_CAN_ERRORBIT,c
  3357  000054                     i2l2242:
  3358                           
  3359                           ; BSR set to: 15
  3360                           ;main.c: 80: }
  3361                           ;main.c: 81: IRXIF = 0;
  3362  000054  9E77               	bcf	3959,7,c	;volatile
  3363  000056                     i2l2244:
  3364                           
  3365                           ;main.c: 82: }
  3366                           ;main.c: 86: if(TMR0IF == 1){
  3367  000056  A4F2               	btfss	intcon,2,c	;volatile
  3368  000058  D021               	goto	i2l2254
  3369                           
  3370                           ;main.c: 87: if(!FIRST_SEND){
  3371  00005A  5007               	movf	_FIRST_SEND,w,c
  3372  00005C  1008               	iorwf	_FIRST_SEND+1,w,c
  3373  00005E  A4D8               	btfss	status,2,c
  3374  000060  D01C               	goto	i2l2252
  3375                           
  3376                           ;main.c: 88: heartBeatCounter++;
  3377  000062  0E01               	movlw	1
  3378  000064  0100               	movlb	0	; () banked
  3379  000066  2760               	addwf	_heartBeatCounter& (0+255),f,b
  3380  000068  0E00               	movlw	0
  3381  00006A  2361               	addwfc	(_heartBeatCounter+1)& (0+255),f,b
  3382  00006C  2362               	addwfc	(_heartBeatCounter+2)& (0+255),f,b
  3383  00006E  2363               	addwfc	(_heartBeatCounter+3)& (0+255),f,b
  3384                           
  3385                           ;main.c: 89: if(heartBeatCounter > 35){
  3386  000070  0100               	movlb	0	; () banked
  3387  000072  BF63               	btfsc	(_heartBeatCounter+3)& (0+255),7,b
  3388  000074  D012               	goto	i2l2252
  3389  000076  0100               	movlb	0	; () banked
  3390  000078  5163               	movf	(_heartBeatCounter+3)& (0+255),w,b
  3391  00007A  0100               	movlb	0	; () banked
  3392  00007C  1162               	iorwf	(_heartBeatCounter+2)& (0+255),w,b
  3393  00007E  0100               	movlb	0	; () banked
  3394  000080  1161               	iorwf	(_heartBeatCounter+1)& (0+255),w,b
  3395  000082  E105               	bnz	i2u107_40
  3396  000084  0E24               	movlw	36
  3397  000086  0100               	movlb	0	; () banked
  3398  000088  5D60               	subwf	_heartBeatCounter& (0+255),w,b
  3399  00008A  A0D8               	btfss	status,0,c
  3400  00008C  D006               	goto	i2l2252
  3401  00008E                     i2u107_40:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;main.c: 90: danger(HEARTBEAT_ERRORCODE);
  3405  00008E  C04E  F037         	movff	_HEARTBEAT_ERRORCODE,danger@errorCode
  3406  000092  C04F  F038         	movff	_HEARTBEAT_ERRORCODE+1,danger@errorCode+1
  3407  000096  ECED  F003         	call	_danger	;wreg free
  3408  00009A                     i2l2252:
  3409                           
  3410                           ;main.c: 91: }
  3411                           ;main.c: 92: }
  3412                           ;main.c: 93: TMR0IF = 0;
  3413  00009A  94F2               	bcf	intcon,2,c	;volatile
  3414  00009C                     i2l2254:
  3415                           
  3416                           ;main.c: 94: }
  3417                           ;main.c: 98: if(TMR1IF == 1){
  3418  00009C  A09E               	btfss	3998,0,c	;volatile
  3419  00009E  D049               	goto	i2l153
  3420                           
  3421                           ;main.c: 99: if(MAP_V_BLINK == 1){
  3422  0000A0  0417               	decf	_MAP_V_BLINK,w,c
  3423  0000A2  1018               	iorwf	_MAP_V_BLINK+1,w,c
  3424  0000A4  A4D8               	btfss	status,2,c
  3425  0000A6  D020               	goto	i2l2268
  3426                           
  3427                           ;main.c: 100: blinkCounter++;
  3428  0000A8  0E01               	movlw	1
  3429  0000AA  2601               	addwf	_blinkCounter,f,c
  3430  0000AC  0E00               	movlw	0
  3431  0000AE  2202               	addwfc	_blinkCounter+1,f,c
  3432  0000B0  2203               	addwfc	_blinkCounter+2,f,c
  3433  0000B2  2204               	addwfc	_blinkCounter+3,f,c
  3434                           
  3435                           ;main.c: 102: if(blinkCounter == 13){
  3436  0000B4  0E0D               	movlw	13
  3437  0000B6  1801               	xorwf	_blinkCounter,w,c
  3438  0000B8  1002               	iorwf	_blinkCounter+1,w,c
  3439  0000BA  1003               	iorwf	_blinkCounter+2,w,c
  3440  0000BC  1004               	iorwf	_blinkCounter+3,w,c
  3441  0000BE  B4D8               	btfsc	status,2,c
  3442                           
  3443                           ;main.c: 103: LATBbits.LATB5 = 0;
  3444  0000C0  9A8A               	bcf	3978,5,c	;volatile
  3445                           
  3446                           ;main.c: 104: }
  3447                           ;main.c: 105: if(blinkCounter > 26){
  3448  0000C2  BE04               	btfsc	_blinkCounter+3,7,c
  3449  0000C4  D011               	goto	i2l2268
  3450  0000C6  5004               	movf	_blinkCounter+3,w,c
  3451  0000C8  1003               	iorwf	_blinkCounter+2,w,c
  3452  0000CA  1002               	iorwf	_blinkCounter+1,w,c
  3453  0000CC  E104               	bnz	i2u111_40
  3454  0000CE  0E1B               	movlw	27
  3455  0000D0  5C01               	subwf	_blinkCounter,w,c
  3456  0000D2  A0D8               	btfss	status,0,c
  3457  0000D4  D009               	goto	i2l2268
  3458  0000D6                     i2u111_40:
  3459                           
  3460                           ;main.c: 106: LATBbits.LATB5 = 1;
  3461  0000D6  8A8A               	bsf	3978,5,c	;volatile
  3462                           
  3463                           ;main.c: 107: blinkCounter = 0;
  3464  0000D8  0E00               	movlw	0
  3465  0000DA  6E01               	movwf	_blinkCounter,c
  3466  0000DC  0E00               	movlw	0
  3467  0000DE  6E02               	movwf	_blinkCounter+1,c
  3468  0000E0  0E00               	movlw	0
  3469  0000E2  6E03               	movwf	_blinkCounter+2,c
  3470  0000E4  0E00               	movlw	0
  3471  0000E6  6E04               	movwf	_blinkCounter+3,c
  3472  0000E8                     i2l2268:
  3473                           
  3474                           ;main.c: 108: }
  3475                           ;main.c: 110: }
  3476                           ;main.c: 112: if(MAP_H_BLINK == 1){
  3477  0000E8  0411               	decf	_MAP_H_BLINK,w,c
  3478  0000EA  1012               	iorwf	_MAP_H_BLINK+1,w,c
  3479  0000EC  A4D8               	btfss	status,2,c
  3480  0000EE  D020               	goto	i2l2280
  3481                           
  3482                           ;main.c: 113: blinkCounter++;
  3483  0000F0  0E01               	movlw	1
  3484  0000F2  2601               	addwf	_blinkCounter,f,c
  3485  0000F4  0E00               	movlw	0
  3486  0000F6  2202               	addwfc	_blinkCounter+1,f,c
  3487  0000F8  2203               	addwfc	_blinkCounter+2,f,c
  3488  0000FA  2204               	addwfc	_blinkCounter+3,f,c
  3489                           
  3490                           ;main.c: 115: if(blinkCounter == 13){
  3491  0000FC  0E0D               	movlw	13
  3492  0000FE  1801               	xorwf	_blinkCounter,w,c
  3493  000100  1002               	iorwf	_blinkCounter+1,w,c
  3494  000102  1003               	iorwf	_blinkCounter+2,w,c
  3495  000104  1004               	iorwf	_blinkCounter+3,w,c
  3496  000106  B4D8               	btfsc	status,2,c
  3497                           
  3498                           ;main.c: 116: LATBbits.LATB6 = 0;
  3499  000108  9C8A               	bcf	3978,6,c	;volatile
  3500                           
  3501                           ;main.c: 117: }
  3502                           ;main.c: 118: if(blinkCounter > 26){
  3503  00010A  BE04               	btfsc	_blinkCounter+3,7,c
  3504  00010C  D011               	goto	i2l2280
  3505  00010E  5004               	movf	_blinkCounter+3,w,c
  3506  000110  1003               	iorwf	_blinkCounter+2,w,c
  3507  000112  1002               	iorwf	_blinkCounter+1,w,c
  3508  000114  E104               	bnz	i2u114_40
  3509  000116  0E1B               	movlw	27
  3510  000118  5C01               	subwf	_blinkCounter,w,c
  3511  00011A  A0D8               	btfss	status,0,c
  3512  00011C  D009               	goto	i2l2280
  3513  00011E                     i2u114_40:
  3514                           
  3515                           ;main.c: 119: LATBbits.LATB6 = 1;
  3516  00011E  8C8A               	bsf	3978,6,c	;volatile
  3517                           
  3518                           ;main.c: 120: blinkCounter = 0;
  3519  000120  0E00               	movlw	0
  3520  000122  6E01               	movwf	_blinkCounter,c
  3521  000124  0E00               	movlw	0
  3522  000126  6E02               	movwf	_blinkCounter+1,c
  3523  000128  0E00               	movlw	0
  3524  00012A  6E03               	movwf	_blinkCounter+2,c
  3525  00012C  0E00               	movlw	0
  3526  00012E  6E04               	movwf	_blinkCounter+3,c
  3527  000130                     i2l2280:
  3528                           
  3529                           ;main.c: 121: }
  3530                           ;main.c: 123: }
  3531                           ;main.c: 125: TMR1IF = 0;
  3532  000130  909E               	bcf	3998,0,c	;volatile
  3533  000132                     i2l153:
  3534  000132  C04B  FFF5         	movff	??_ISR+13,tablat
  3535  000136  C04A  FFF8         	movff	??_ISR+12,tblptru
  3536  00013A  C049  FFF7         	movff	??_ISR+11,tblptrh
  3537  00013E  C048  FFF6         	movff	??_ISR+10,tblptrl
  3538  000142  C047  FFF4         	movff	??_ISR+9,prodh
  3539  000146  C046  FFF3         	movff	??_ISR+8,prodl
  3540  00014A  C045  FFDA         	movff	??_ISR+7,fsr2h
  3541  00014E  C044  FFD9         	movff	??_ISR+6,fsr2l
  3542  000152  C043  FFE2         	movff	??_ISR+5,fsr1h
  3543  000156  C042  FFE1         	movff	??_ISR+4,fsr1l
  3544  00015A  C041  FFEA         	movff	??_ISR+3,fsr0h
  3545  00015E  C040  FFE9         	movff	??_ISR+2,fsr0l
  3546  000162  C03F  FFFB         	movff	??_ISR+1,pclatu
  3547  000166  C03E  FFFA         	movff	??_ISR,pclath
  3548  00016A  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3549  00016C  0011               	retfie		f
  3550  00016E                     __end_of_ISR:
  3551                           	opt stack 0
  3552                           pclatu	equ	0xFFB
  3553                           pclath	equ	0xFFA
  3554                           tblptru	equ	0xFF8
  3555                           tblptrh	equ	0xFF7
  3556                           tblptrl	equ	0xFF6
  3557                           tablat	equ	0xFF5
  3558                           prodh	equ	0xFF4
  3559                           prodl	equ	0xFF3
  3560                           intcon	equ	0xFF2
  3561                           postinc0	equ	0xFEE
  3562                           fsr0h	equ	0xFEA
  3563                           fsr0l	equ	0xFE9
  3564                           wreg	equ	0xFE8
  3565                           postdec1	equ	0xFE5
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           fsr2h	equ	0xFDA
  3569                           fsr2l	equ	0xFD9
  3570                           status	equ	0xFD8
  3571                           
  3572 ;; *************** function _danger *****************
  3573 ;; Defined at:
  3574 ;;		line 16 in file "Other.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  errorCode       2    2[COMRAM] int 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  i               2    7[COMRAM] int 
  3579 ;;  i               2    5[COMRAM] int 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3590 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3592 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;Total ram usage:        7 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    1
  3596 ;; This function calls:
  3597 ;;		i2_Delay
  3598 ;; This function is called by:
  3599 ;;		_ISR
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text20
  3604  0007DA                     __ptext20:
  3605                           	opt stack 0
  3606  0007DA                     _danger:
  3607                           	opt stack 25
  3608                           
  3609                           ;Other.c: 19: INTCONbits.GIEH = 0;
  3610                           
  3611                           ;incstack = 0
  3612  0007DA  9EF2               	bcf	intcon,7,c	;volatile
  3613                           
  3614                           ;Other.c: 20: INTCONbits.GIEL = 0;
  3615  0007DC  9CF2               	bcf	intcon,6,c	;volatile
  3616                           
  3617                           ;Other.c: 22: LATBbits.LATB1 = 0;
  3618  0007DE  928A               	bcf	3978,1,c	;volatile
  3619                           
  3620                           ;Other.c: 23: LATBbits.LATB4 = 1;
  3621  0007E0  888A               	bsf	3978,4,c	;volatile
  3622                           
  3623                           ;Other.c: 24: LATBbits.LATB0 = 0;
  3624  0007E2  908A               	bcf	3978,0,c	;volatile
  3625  0007E4                     i2l2160:
  3626                           
  3627                           ;Other.c: 27: for(int i = 0; i< errorCode; i++){
  3628  0007E4  0E00               	movlw	0
  3629  0007E6  6E3B               	movwf	danger@i+1,c
  3630  0007E8  0E00               	movlw	0
  3631  0007EA  6E3A               	movwf	danger@i,c
  3632  0007EC  D010               	goto	i2l2168
  3633  0007EE                     i2l588:
  3634                           
  3635                           ;Other.c: 28: LATAbits.LATA7 = 1;
  3636  0007EE  8E89               	bsf	3977,7,c	;volatile
  3637                           
  3638                           ;Other.c: 32: Delay(65000);
  3639  0007F0  0EFD               	movlw	253
  3640  0007F2  6E36               	movwf	i2Delay@count+1,c
  3641  0007F4  0EE8               	movlw	232
  3642  0007F6  6E35               	movwf	i2Delay@count,c
  3643  0007F8  ECA4  F005         	call	i2_Delay	;wreg free
  3644                           
  3645                           ;Other.c: 33: LATAbits.LATA7 = 0;
  3646  0007FC  9E89               	bcf	3977,7,c	;volatile
  3647                           
  3648                           ;Other.c: 34: Delay(65000);
  3649  0007FE  0EFD               	movlw	253
  3650  000800  6E36               	movwf	i2Delay@count+1,c
  3651  000802  0EE8               	movlw	232
  3652  000804  6E35               	movwf	i2Delay@count,c
  3653  000806  ECA4  F005         	call	i2_Delay	;wreg free
  3654  00080A  4A3A               	infsnz	danger@i,f,c
  3655  00080C  2A3B               	incf	danger@i+1,f,c
  3656  00080E                     i2l2168:
  3657  00080E  5037               	movf	danger@errorCode,w,c
  3658  000810  5C3A               	subwf	danger@i,w,c
  3659  000812  503B               	movf	danger@i+1,w,c
  3660  000814  0A80               	xorlw	128
  3661  000816  6E39               	movwf	??_danger& (0+255),c
  3662  000818  5038               	movf	danger@errorCode+1,w,c
  3663  00081A  0A80               	xorlw	128
  3664  00081C  5839               	subwfb	??_danger& (0+255),w,c
  3665  00081E  A0D8               	btfss	status,0,c
  3666  000820  D7E6               	goto	i2l588
  3667                           
  3668                           ;Other.c: 36: }
  3669                           ;Other.c: 38: Delay((unsigned int)((unsigned int)(64/4)*80 * 2000));
  3670  000822  0E10               	movlw	16
  3671  000824  6E36               	movwf	i2Delay@count+1,c
  3672  000826  0E00               	movlw	0
  3673  000828  6E35               	movwf	i2Delay@count,c
  3674  00082A  ECA4  F005         	call	i2_Delay	;wreg free
  3675                           
  3676                           ;Other.c: 40: if(CAN_ERRORBIT == 1){
  3677  00082E  0405               	decf	_CAN_ERRORBIT,w,c
  3678  000830  1006               	iorwf	_CAN_ERRORBIT+1,w,c
  3679  000832  A4D8               	btfss	status,2,c
  3680  000834  D01F               	goto	i2l2184
  3681                           
  3682                           ;Other.c: 41: for(int i = 0; i< CAN_ERRORCODE; i++){
  3683  000836  0E00               	movlw	0
  3684  000838  6E3D               	movwf	danger@i_1322+1,c
  3685  00083A  0E00               	movlw	0
  3686  00083C  6E3C               	movwf	danger@i_1322,c
  3687  00083E  D010               	goto	i2l2182
  3688  000840                     i2l592:
  3689                           
  3690                           ;Other.c: 42: LATAbits.LATA7 = 1;
  3691  000840  8E89               	bsf	3977,7,c	;volatile
  3692                           
  3693                           ;Other.c: 43: Delay((unsigned int)(64/4)*80 * 500);
  3694  000842  0EC4               	movlw	196
  3695  000844  6E36               	movwf	i2Delay@count+1,c
  3696  000846  0E00               	movlw	0
  3697  000848  6E35               	movwf	i2Delay@count,c
  3698  00084A  ECA4  F005         	call	i2_Delay	;wreg free
  3699                           
  3700                           ;Other.c: 44: LATAbits.LATA7 = 0;
  3701  00084E  9E89               	bcf	3977,7,c	;volatile
  3702                           
  3703                           ;Other.c: 45: Delay((unsigned int)(64/4)*80 * 500);
  3704  000850  0EC4               	movlw	196
  3705  000852  6E36               	movwf	i2Delay@count+1,c
  3706  000854  0E00               	movlw	0
  3707  000856  6E35               	movwf	i2Delay@count,c
  3708  000858  ECA4  F005         	call	i2_Delay	;wreg free
  3709  00085C  4A3C               	infsnz	danger@i_1322,f,c
  3710  00085E  2A3D               	incf	danger@i_1322+1,f,c
  3711  000860                     i2l2182:
  3712  000860  504C               	movf	_CAN_ERRORCODE,w,c
  3713  000862  5C3C               	subwf	danger@i_1322,w,c
  3714  000864  503D               	movf	danger@i_1322+1,w,c
  3715  000866  0A80               	xorlw	128
  3716  000868  6E39               	movwf	??_danger& (0+255),c
  3717  00086A  504D               	movf	_CAN_ERRORCODE+1,w,c
  3718  00086C  0A80               	xorlw	128
  3719  00086E  5839               	subwfb	??_danger& (0+255),w,c
  3720  000870  A0D8               	btfss	status,0,c
  3721  000872  D7E6               	goto	i2l592
  3722  000874                     i2l2184:
  3723                           
  3724                           ;Other.c: 47: }
  3725                           ;Other.c: 48: }
  3726                           ;Other.c: 50: Delay((unsigned int)(64/4)*80 * 2000);
  3727  000874  0E10               	movlw	16
  3728  000876  6E36               	movwf	i2Delay@count+1,c
  3729  000878  0E00               	movlw	0
  3730  00087A  6E35               	movwf	i2Delay@count,c
  3731  00087C  ECA4  F005         	call	i2_Delay	;wreg free
  3732  000880  D7B1               	goto	i2l2160
  3733  000882                     __end_of_danger:
  3734                           	opt stack 0
  3735                           pclatu	equ	0xFFB
  3736                           pclath	equ	0xFFA
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           fsr0h	equ	0xFEA
  3746                           fsr0l	equ	0xFE9
  3747                           wreg	equ	0xFE8
  3748                           postdec1	equ	0xFE5
  3749                           fsr1h	equ	0xFE2
  3750                           fsr1l	equ	0xFE1
  3751                           fsr2h	equ	0xFDA
  3752                           fsr2l	equ	0xFD9
  3753                           status	equ	0xFD8
  3754                           
  3755 ;; *************** function i2_Delay *****************
  3756 ;; Defined at:
  3757 ;;		line 10 in file "Other.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  count           2    0[COMRAM] unsigned int 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_danger
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text21
  3785  000B48                     __ptext21:
  3786                           	opt stack 0
  3787  000B48                     i2_Delay:
  3788                           	opt stack 25
  3789  000B48                     i2l1948:
  3790  000B48  0635               	decf	i2Delay@count,f,c
  3791  000B4A  A0D8               	btfss	status,0,c
  3792  000B4C  0636               	decf	i2Delay@count+1,f,c
  3793  000B4E  2835               	incf	i2Delay@count,w,c
  3794  000B50  E1FB               	bnz	i2l1948
  3795  000B52  2836               	incf	i2Delay@count+1,w,c
  3796  000B54  B4D8               	btfsc	status,2,c
  3797  000B56  0012               	return	
  3798  000B58  D7F7               	goto	i2l1948
  3799  000B5A                     __end_ofi2_Delay:
  3800                           	opt stack 0
  3801  0000                     pclatu	equ	0xFFB
  3802                           pclath	equ	0xFFA
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           intcon	equ	0xFF2
  3810                           postinc0	equ	0xFEE
  3811                           fsr0h	equ	0xFEA
  3812                           fsr0l	equ	0xFE9
  3813                           wreg	equ	0xFE8
  3814                           postdec1	equ	0xFE5
  3815                           fsr1h	equ	0xFE2
  3816                           fsr1l	equ	0xFE1
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           status	equ	0xFD8
  3820                           pclatu	equ	0xFFB
  3821                           pclath	equ	0xFFA
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           prodh	equ	0xFF4
  3827                           prodl	equ	0xFF3
  3828                           intcon	equ	0xFF2
  3829                           postinc0	equ	0xFEE
  3830                           fsr0h	equ	0xFEA
  3831                           fsr0l	equ	0xFE9
  3832                           wreg	equ	0xFE8
  3833                           postdec1	equ	0xFE5
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8
  3839                           
  3840                           	psect	rparam
  3841  0000                     pclatu	equ	0xFFB
  3842                           pclath	equ	0xFFA
  3843                           tblptru	equ	0xFF8
  3844                           tblptrh	equ	0xFF7
  3845                           tblptrl	equ	0xFF6
  3846                           tablat	equ	0xFF5
  3847                           prodh	equ	0xFF4
  3848                           prodl	equ	0xFF3
  3849                           intcon	equ	0xFF2
  3850                           postinc0	equ	0xFEE
  3851                           fsr0h	equ	0xFEA
  3852                           fsr0l	equ	0xFE9
  3853                           wreg	equ	0xFE8
  3854                           postdec1	equ	0xFE5
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           fsr2h	equ	0xFDA
  3858                           fsr2l	equ	0xFD9
  3859                           status	equ	0xFD8
  3860                           
  3861                           	psect	temp
  3862  000052                     btemp:
  3863                           	opt stack 0
  3864  000052                     	ds	1
  3865  0000                     int$flags	set	btemp
  3866                           pclatu	equ	0xFFB
  3867                           pclath	equ	0xFFA
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           intcon	equ	0xFF2
  3875                           postinc0	equ	0xFEE
  3876                           fsr0h	equ	0xFEA
  3877                           fsr0l	equ	0xFE9
  3878                           wreg	equ	0xFE8
  3879                           postdec1	equ	0xFE5
  3880                           fsr1h	equ	0xFE2
  3881                           fsr1l	equ	0xFE1
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         74
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      81
    BANK0           160     13      38
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_danger
    _danger->i2_Delay

Critical Paths under _main in BANK0

    _main->_checkAccelerator
    _updateInputs->_readAnalog
    _readAnalog->_Delay
    _checkAccelerator->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2187
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                         _InitDevice
                   _checkAccelerator
                     _checkBacklight
                         _checkBrake
                     _checkDirection
                       _checkH_blink
                     _checkSafetyPin
                          _checkStop
                       _checkV_blink
                    _setup_Interrupt
                           _unZipCAN
                       _updateInputs
 ---------------------------------------------------------------------------------
 (1) _updateInputs                                         0     0      0     389
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           8     6      2     389
                                              2 BANK0      8     6      2
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     0      2     253
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _unZipCAN                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkV_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkStop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSafetyPin                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkH_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDirection                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBrake                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBacklight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkAccelerator                                     5     5      0     618
                                              8 BANK0      5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     553
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10     881
                                              0 BANK0     11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0     291
                                              9 COMRAM    14    14      0
                             _danger
 ---------------------------------------------------------------------------------
 (5) _danger                                               7     5      2     291
                                              2 COMRAM     7     5      2
                            i2_Delay
 ---------------------------------------------------------------------------------
 (6) i2_Delay                                              2     0      2     178
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _InitDevice
   _checkAccelerator
     ___awdiv
   _checkBacklight
   _checkBrake
   _checkDirection
   _checkH_blink
   _checkSafetyPin
   _checkStop
   _checkV_blink
   _setup_Interrupt
   _unZipCAN
   _updateInputs
     _readAnalog
       _Delay

 _ISR (ROOT)
   _danger
     i2_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D      26       5       23.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      51       1       86.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      77       6        0.0%
DATA                 0      0      77       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 07 13:36:08 2016

                   _MAP_BACKLIGHT 0009              __end_of_checkV_blink 0A66  
                 _MAP_ACCELERATOR 0068                   ?_checkBacklight 0035  
                    ___awdiv@sign 007B                       __CFG_BORV$3 000000  
          __end_of_checkSafetyPin 0B30                 ?_checkAccelerator 0035  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l700 0AB6                               l474 0680  
                             l476 06C0                               l732 08E6  
                             l734 0912                               l742 092C  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _ISR 0008                ??_checkAccelerator 007E  
                             wreg 000FE8                              ?_ISR 0035  
                   _MAP_HEARTBEAT 006A                              _B0D0 000E86  
                            _B0D1 000E87                              _B0D2 000E88  
                            _B0D3 000E89                              _B0D4 000E8A  
                            _B0D5 000E8B                              _B0D6 000E8C  
                            _B0D7 000E8D                     _MAP_DIRECTION 000F  
                            l2302 096A                              l2320 074E  
                            l2330 077E                              l2314 0738  
                            l2420 052E                              l2422 0532  
                            l2414 0512                              l2326 076C  
                            l2342 07BC                              l2328 0778  
                            l2426 0540                              l2418 0520  
                            l2450 06FE                              l2346 07D0  
                            l2338 07AE                              l2428 054C  
                            l2452 0704                              l2524 08D4  
                            l2284 0B00                              l2464 0718  
                            l2386 0432                              l2574 059C  
                            l2586 05D2                   ?_checkDirection 0035  
                            u1410 0A42                              u1500 08A0  
                            u1405 0AFC                              _LATA 000F89  
                            u1406 0AFE                              u1430 0A06  
                            _LATB 000F8A                              u1335 0234  
                            _LATC 000F8B                              u1425 0A62  
                            u1345 026A                              u1370 0AA2  
                            u1426 0A64                              u1355 02A0  
                            u1460 0B3E                              u1445 0A16  
                            u1365 02D6                              u1390 0AEC  
                            u1446 0A18                              u1470 0B26  
                            u1455 0A30                              u1456 0A32  
                            u1480 0AC8                   __end_ofi2_Delay 0B5A  
                            _main 0560                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0052  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 016E  
                   __CFG_IESO$OFF 000000                  __end_of_CANSetup 0560  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                           ??_ISR 003E                     _MAP_SAFETYPIN 0013  
                 ?_checkSafetyPin 0035                             _B0DLC 000E85  
                           ?_main 0035                   __end_of___awdiv 07DA  
                           _BSEL0 000E7D                   ___awdiv@divisor 0078  
                           i2l153 0132                             i2l592 0840  
                           i2l588 07EE                   ___awdiv@counter 007A  
                           _MSEL0 000E79                             _MSEL1 000E7A  
                           _MSEL2 000E7B                             _MSEL3 000E7C  
                           _IRXIF 007BBF                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                   __CFG_SOSCSEL$ 000000                             _Delay 0B00  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                 danger@errorCode 0037                    __CFG_EBTRB$OFF 000000  
                           _count 0085                             tablat 000FF5  
                           status 000FD8                        _InitDevice 02EE  
           __size_of_ECAN_Receive 00DE               _HEARTBEAT_ERRORCODE 004E  
                 __initialization 0974                      _deadArea_gas 0083  
                    __end_of_main 063E                            ??_main 0083  
                   __activetblptr 000000                    __CFG_RETEN$OFF 000000  
                          ?_Delay 0076                            _B0EIDH 000E83  
                          _B0EIDL 000E84                  ECAN_Transmit@DLC 0077  
                          _B0SIDH 000E81                            _B0SIDL 000E82  
                       ??i2_Delay 0037                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _ANCON0 000F5D  
                          _ANCON1 000F5C                  ___awdiv@dividend 0076  
           __size_of_checkH_blink 003C                      _ECAN_Receive 063E  
                  _TEMP_MAP_BRAKE 001B                   __CFG_BBSIZ$BB2K 000000  
                          i2l2160 07E4                            i2l2242 0054  
                          i2l2252 009A                            i2l2244 0056  
                          i2l2182 0860                            i2l2254 009C  
                          i2l2184 0874                            i2l2168 080E  
                          i2l2280 0130                            i2l2268 00E8  
                          i2l1948 0B48                      _CAN_ERRORBIT 0005  
        __size_of_setup_Interrupt 002E                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F36                            _RXB0D5 000F6B  
                          _RXB1D1 000F37                            _RXB0D6 000F6C  
                          _RXB1D2 000F38                            _RXB0D7 000F6D  
                          _RXB1D3 000F39                            _RXB1D4 000F3A  
                          _RXB1D5 000F3B                            _RXB1D6 000F3C  
                          _RXB1D7 000F3D                            _TMR0IF 007F92  
                          _TMR1IF 007CF0                            _TXB0D0 000F26  
                          _TXB0D1 000F27                            _TXB0D2 000F28  
                          _TXB0D3 000F29                            _TXB0D4 000F2A  
                          _TXB0D5 000F2B                            _TXB0D6 000F2C  
                          _TXB0D7 000F2D             __size_of_checkV_blink 0032  
                  __CFG_XINST$OFF 000000                         ??___awdiv 007A  
                  __CFG_STVREN$ON 000000                            _danger 07DA  
                _heartBeatCounter 0060                            clear_0 097A  
                          clear_1 0986                  ___awdiv@quotient 007C  
                    _checkH_blink 09F8                  __end_of_unZipCAN 02EE  
                    __pdataCOMRAM 004C                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ?_CANSetup 0035                      _checkV_blink 0A34  
                      __accesstop 0060           __end_of__initialization 09AC  
        ECAN_Transmit@TRANSMIT_ID 0078              _TEMP_MAP_ACCELERATOR 0070  
                   ___rparam_used 000001                  ??_checkBacklight 0076  
                     ?_InitDevice 0035                     __end_of_Delay 0B18  
                  __pcstackCOMRAM 0035                __size_of_checkStop 0024  
          __size_of_ECAN_Transmit 0042                           ??_Delay 0078  
                ??_checkDirection 0076              readAnalog@totBattery 007E  
                      ??_CANSetup 0076                        _checkBrake 0A94  
                      __pbssBANK0 0060         __size_of_checkAccelerator 0094  
                 __CFG_PLLCFG$OFF 000000                 ??_setup_Interrupt 0076  
                ??_checkSafetyPin 0076                 ECAN_Transmit@SIDH 0080  
               ECAN_Transmit@SIDL 0076                           ?_danger 0037  
                       _B0CONbits 000E80                           _ECANCON 000F72  
                    _blinkCounter 0001                           _BITDATA 0027  
                         _BRGCON1 000E43                           _BRGCON2 000E44  
                         _BRGCON3 000E45                  __CFG_CANMX$PORTB 000000  
                   _CAN_ERRORCODE 004C               __size_of_InitDevice 0140  
                _BATTERISTATUS_ID 0050                           _RXB0DLC 000F65  
                         _RXB1DLC 000F35                           _RXB0CON 000F60  
                         _RXB1CON 000F30                           _TXB0DLC 000F25  
                         i2_Delay 0B48                           _RXFCON0 000E46  
                         _RXFCON1 000E47                     _ECAN_Transmit 09B6  
               __end_of_checkStop 0ADE                    readAnalog@high 007C  
                 __CFG_PWRTEN$OFF 000000                           __Hparam 0000  
                         __Lparam 0000                         ?_unZipCAN 0035  
                      _readAnalog 0916                           ___awdiv 071C  
                 __size_of_danger 00A8                           __pcinit 0974  
                         __ramtop 0F00                           __ptext0 0560  
                         __ptext1 0B5A                           __ptext2 0916  
                         __ptext3 0B00                           __ptext4 0172  
                         __ptext5 0A66                           __ptext6 0A34  
                         __ptext7 0ABA                           __ptext8 0B18  
                         __ptext9 09F8                         _T0CONbits 000FD5  
                    __size_of_ISR 0166                         _T1CONbits 000FCD  
                _TEMP_ACCELERATOR 0028                           danger@i 003A  
               __CFG_MSSPMSK$MSK7 000000                           _temp_D2 002A  
                         _temp_D3 002B                           _temp_D4 002C  
                         _temp_D5 002D                           _temp_D6 002E  
                         _temp_D7 002F                    ?_ECAN_Transmit 0076  
                     ?_checkBrake 0035                         _MAP_BRAKE 000D  
            end_of_initialization 09AC                 _MAP_BATTERYSTATUS 000B  
                      ??_unZipCAN 0076                  _buttonWasPressed 0029  
                         postdec1 000FE5                           postinc0 000FEE  
                __CFG_FOSC$INTIO2 000000                  _checkAccelerator 0882  
               __size_of_CANSetup 0132                      ??_InitDevice 0076  
                   ?_updateInputs 0035                       ?_readAnalog 0078  
             __size_of_checkBrake 0026                    __end_of_danger 0882  
                   __pidataCOMRAM 0B68                      _MAP_VELOCITY 006C  
             start_initialization 0974                   ??_ECAN_Transmit 0080  
                     __end_of_ISR 016E                __end_of_InitDevice 042E  
                 _setup_Interrupt 0A66                       _CANSTATbits 000F6E  
              _OFFSET_ACCELERATOR 006E                    ??_updateInputs 0080  
                   _TEMP_MAP_STOP 0023                          ??_danger 0039  
                    danger@i_1322 003C                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0076                          ?i2_Delay 0035  
             __size_of_readAnalog 005E                         _checkStop 0ABA  
                       __pnvBANK0 0083                ECAN_Transmit@DATA1 0079  
              ECAN_Transmit@DATA2 007A                ECAN_Transmit@DATA3 007B  
              ECAN_Transmit@DATA4 007C                ECAN_Transmit@DATA5 007D  
              ECAN_Transmit@DATA6 007E                ECAN_Transmit@DATA7 007F  
                       __pintcode 0008                          ?___awdiv 0076  
               __size_of_unZipCAN 017C           __size_of_checkBacklight 0022  
                  _heartbeatCount 0074                      i2Delay@count 0035  
         __end_of_setup_Interrupt 0A94                    __size_of_Delay 0018  
                   readAnalog@low 007A                          _CANSetup 042E  
                    ??_checkBrake 0076                     ?_ECAN_Receive 0035  
                        _LATAbits 000F89                          _LATBbits 000F8A  
         __size_of_checkDirection 0018                        ?_checkStop 0035  
                        _MAP_STOP 0015                          _PIE1bits 000F9D  
                _TEMP_MAP_H_BLINK 001F                         _temp_EIDH 0031  
                       _temp_EIDL 0032                         _temp_SIDH 0033  
                       _temp_SIDL 0034                          i2u111_40 00D6  
                        i2u114_40 011E                          i2u107_40 008E  
                        _PIR5bits 000F77                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F33  
                        _RXB1EIDL 000F34                          _RCONbits 000FD0  
                        _MOTOR_ID 0051                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXB1SIDH 000F31  
                        _RXF0EIDH 000EE2                          _RXB1SIDL 000F32  
                        _RXF0EIDL 000EE3                          _RXF1EIDH 000EE6  
                        _RXF1EIDL 000EE7                          _RXF2EIDH 000EEA  
                        _RXF2EIDL 000EEB                          _RXF0SIDH 000EE0  
                        _RXF0SIDL 000EE1                          _TXB0EIDH 000F23  
                        _RXF1SIDH 000EE4                          _TXB0EIDL 000F24  
                        _RXF1SIDL 000EE5                          _RXF2SIDH 000EE8  
                        _RXF2SIDL 000EE9                          _RXM0EIDH 000EFA  
                        _RXM0EIDL 000EFB                          _TXB0SIDH 000F21  
                        _RXM1EIDH 000EFE                          _TXB0SIDL 000F22  
                        _RXM1EIDL 000EFF                  _TEMP_MAP_V_BLINK 0025  
                        _RXFBCON0 000E71                          _RXFBCON1 000E72  
                        _RXFBCON2 000E73                          _RXFBCON3 000E74  
                        _RXFBCON4 000E75                          _RXFBCON5 000E76  
                        _RXFBCON6 000E77                          _RXFBCON7 000E78  
                        _RXM0SIDH 000EF8                          _RXM0SIDL 000EF9  
                        _RXM1SIDH 000EFC                          _RXM1SIDL 000EFD  
        __end_of_checkAccelerator 0916                __end_of_checkBrake 0ABA  
                      _ADCON0bits 000FC2                        _ADCON2bits 000FC0  
           ECAN_Receive@RXMsgFlag 0076                     ?_checkH_blink 0035  
checkAccelerator@HALF_ACCELERATOR 0081           __size_of_checkSafetyPin 0018  
            __end_of_updateInputs 0B68                     ?_checkV_blink 0035  
                  ??_ECAN_Receive 0076                       _MAP_H_BLINK 0011  
                __size_ofi2_Delay 0012                         copy_data0 09A0  
                     _MAP_V_BLINK 0017                          __Hrparam 0000  
                        __Lrparam 0000                      ??_readAnalog 007A  
              __CFG_BOREN$SBORDIS 000000                  __size_of___awdiv 00BE  
              _TEMP_MAP_BACKLIGHT 0019                    ??_checkH_blink 0076  
                _interruptCounter 0064                  ?_setup_Interrupt 0035  
                  ??_checkV_blink 0076                          __ptext10 0B30  
                        __ptext11 0A94                          __ptext20 07DA  
                        __ptext12 0ADE                          __ptext21 0B48  
                        __ptext13 0882                        _T1GCONbits 000FAA  
                        __ptext14 071C                          __ptext15 02EE  
                        __ptext16 09B6                          __ptext17 063E  
                        __ptext18 042E                __end_of_readAnalog 0974  
                   __size_of_main 00DE                _TEMP_MAP_HEARTBEAT 0072  
              _TEMP_MAP_DIRECTION 001D                       ??_checkStop 0076  
                      _FIRST_SEND 0007                          _temp_DLC 0030  
                        _unZipCAN 0172                          int$flags 0052  
                  _checkBacklight 0ADE               __CFG_INTOSCSEL$HIGH 000000  
                      Delay@count 0076                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F30                __CFG_WDTEN$SWDTDIS 000000  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
              _TEMP_MAP_SAFETYPIN 0021             __end_of_ECAN_Transmit 09F8  
                        intlevel2 0000                    _checkDirection 0B30  
                     _TXB0CONbits 000F20                        _OSCCONbits 000FD3  
          __end_of_checkBacklight 0B00                __CFG_WDTPS$1048576 000000  
            __end_of_ECAN_Receive 071C             __size_of_updateInputs 000E  
                  _checkSafetyPin 0B18            __end_of_checkDirection 0B48  
             __CFG_BORPWR$ZPBORMV 000000              __end_of_checkH_blink 0A34  
                    _updateInputs 0B5A  
