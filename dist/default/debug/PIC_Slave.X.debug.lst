

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 17 13:11:32 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  0006F4                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _BATTERISTATUS_ID
    40  0006F4  02                 	db	2
    41                           
    42                           ;initializer for _MOTOR_ID
    43  0006F5  01                 	db	1
    44                           
    45                           	psect	nvCOMRAM
    46  000050                     __pnvCOMRAM:
    47                           	opt stack 0
    48  000050                     _count:
    49                           	opt stack 0
    50  000050                     	ds	1
    51  0000                     _B0CONbits	set	3712
    52  0000                     _B0D0	set	3718
    53  0000                     _B0D1	set	3719
    54  0000                     _B0D2	set	3720
    55  0000                     _B0D3	set	3721
    56  0000                     _B0D4	set	3722
    57  0000                     _B0D5	set	3723
    58  0000                     _B0D6	set	3724
    59  0000                     _B0D7	set	3725
    60  0000                     _B0DLC	set	3717
    61  0000                     _B0EIDH	set	3715
    62  0000                     _B0EIDL	set	3716
    63  0000                     _B0SIDH	set	3713
    64  0000                     _B0SIDL	set	3714
    65  0000                     _BRGCON1	set	3651
    66  0000                     _BRGCON2	set	3652
    67  0000                     _BRGCON3	set	3653
    68  0000                     _BSEL0	set	3709
    69  0000                     _MSEL0	set	3705
    70  0000                     _MSEL1	set	3706
    71  0000                     _MSEL2	set	3707
    72  0000                     _MSEL3	set	3708
    73  0000                     _RXF0EIDH	set	3810
    74  0000                     _RXF0EIDL	set	3811
    75  0000                     _RXF0SIDH	set	3808
    76  0000                     _RXF0SIDL	set	3809
    77  0000                     _RXF1EIDH	set	3814
    78  0000                     _RXF1EIDL	set	3815
    79  0000                     _RXF1SIDH	set	3812
    80  0000                     _RXF1SIDL	set	3813
    81  0000                     _RXF2EIDH	set	3818
    82  0000                     _RXF2EIDL	set	3819
    83  0000                     _RXF2SIDH	set	3816
    84  0000                     _RXF2SIDL	set	3817
    85  0000                     _RXFBCON0	set	3697
    86  0000                     _RXFBCON1	set	3698
    87  0000                     _RXFBCON2	set	3699
    88  0000                     _RXFBCON3	set	3700
    89  0000                     _RXFBCON4	set	3701
    90  0000                     _RXFBCON5	set	3702
    91  0000                     _RXFBCON6	set	3703
    92  0000                     _RXFBCON7	set	3704
    93  0000                     _RXFCON0	set	3654
    94  0000                     _RXFCON1	set	3655
    95  0000                     _RXM0EIDH	set	3834
    96  0000                     _RXM0EIDL	set	3835
    97  0000                     _RXM0SIDH	set	3832
    98  0000                     _RXM0SIDL	set	3833
    99  0000                     _RXM1EIDH	set	3838
   100  0000                     _RXM1EIDL	set	3839
   101  0000                     _RXM1SIDH	set	3836
   102  0000                     _RXM1SIDL	set	3837
   103  0000                     _ANCON0	set	3933
   104  0000                     _ANCON1	set	3932
   105  0000                     _RXB1CON	set	3888
   106  0000                     _RXB1CONbits	set	3888
   107  0000                     _RXB1D0	set	3894
   108  0000                     _RXB1D1	set	3895
   109  0000                     _RXB1D2	set	3896
   110  0000                     _RXB1D3	set	3897
   111  0000                     _RXB1D4	set	3898
   112  0000                     _RXB1D5	set	3899
   113  0000                     _RXB1D6	set	3900
   114  0000                     _RXB1D7	set	3901
   115  0000                     _RXB1DLC	set	3893
   116  0000                     _RXB1EIDH	set	3891
   117  0000                     _RXB1EIDL	set	3892
   118  0000                     _RXB1SIDH	set	3889
   119  0000                     _RXB1SIDL	set	3890
   120  0000                     _TXB0CONbits	set	3872
   121  0000                     _TXB0D0	set	3878
   122  0000                     _TXB0D1	set	3879
   123  0000                     _TXB0D2	set	3880
   124  0000                     _TXB0D3	set	3881
   125  0000                     _TXB0D4	set	3882
   126  0000                     _TXB0D5	set	3883
   127  0000                     _TXB0D6	set	3884
   128  0000                     _TXB0D7	set	3885
   129  0000                     _TXB0DLC	set	3877
   130  0000                     _TXB0EIDH	set	3875
   131  0000                     _TXB0EIDL	set	3876
   132  0000                     _TXB0SIDH	set	3873
   133  0000                     _TXB0SIDL	set	3874
   134  0000                     _ADCON0	set	4034
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _ADCON1	set	4033
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON2bits	set	4032
   139  0000                     _ADRESH	set	4036
   140  0000                     _CANCON	set	3951
   141  0000                     _CANSTATbits	set	3950
   142  0000                     _ECANCON	set	3954
   143  0000                     _INTCONbits	set	4082
   144  0000                     _LATA	set	3977
   145  0000                     _LATAbits	set	3977
   146  0000                     _LATB	set	3978
   147  0000                     _LATBbits	set	3978
   148  0000                     _LATC	set	3979
   149  0000                     _OSCCONbits	set	4051
   150  0000                     _OSCTUNEbits	set	3995
   151  0000                     _PIR5bits	set	3959
   152  0000                     _RCONbits	set	4048
   153  0000                     _RXB0CON	set	3936
   154  0000                     _RXB0CONbits	set	3936
   155  0000                     _RXB0D0	set	3942
   156  0000                     _RXB0D1	set	3943
   157  0000                     _RXB0D2	set	3944
   158  0000                     _RXB0D3	set	3945
   159  0000                     _RXB0D4	set	3946
   160  0000                     _RXB0D5	set	3947
   161  0000                     _RXB0D6	set	3948
   162  0000                     _RXB0D7	set	3949
   163  0000                     _RXB0DLC	set	3941
   164  0000                     _RXB0EIDH	set	3939
   165  0000                     _RXB0EIDL	set	3940
   166  0000                     _RXB0SIDH	set	3937
   167  0000                     _RXB0SIDL	set	3938
   168  0000                     _T0CONbits	set	4053
   169  0000                     _TRISA	set	3986
   170  0000                     _TRISB	set	3987
   171  0000                     _TRISC	set	3988
   172  0000                     _IRXIF	set	31679
   173  0000                     _TMR0IF	set	32658
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  0005A8                     __pcinit:
   179                           	opt stack 0
   180  0005A8                     start_initialization:
   181                           	opt stack 0
   182  0005A8                     __initialization:
   183                           	opt stack 0
   184                           
   185                           ; Clear objects allocated to COMRAM (60 bytes)
   186  0005A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   187  0005AC  0E3C               	movlw	60
   188  0005AE                     clear_0:
   189  0005AE  6AEE               	clrf	postinc0,c
   190  0005B0  06E8               	decf	wreg,f,c
   191  0005B2  E1FD               	bnz	clear_0
   192                           
   193                           ; Initialize objects allocated to COMRAM (2 bytes)
   194                           ; load TBLPTR registers with __pidataCOMRAM
   195  0005B4  0EF4               	movlw	low __pidataCOMRAM
   196  0005B6  6EF6               	movwf	tblptrl,c
   197  0005B8  0E06               	movlw	high __pidataCOMRAM
   198  0005BA  6EF7               	movwf	tblptrh,c
   199  0005BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   200  0005BE  6EF8               	movwf	tblptru,c
   201  0005C0  0009               	tblrd		*+	;fetch initializer
   202  0005C2  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   203  0005C6  0009               	tblrd		*+	;fetch initializer
   204  0005C8  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   205  0005CC                     end_of_initialization:
   206                           	opt stack 0
   207  0005CC                     __end_of__initialization:
   208                           	opt stack 0
   209  0005CC  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210  0005CE  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211  0005D0  0100               	movlb	0
   212  0005D2  EF57  F002         	goto	_main	;jump to C main() function
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	bssCOMRAM
   221  000001                     __pbssCOMRAM:
   222                           	opt stack 0
   223  000001                     _interruptCounter:
   224                           	opt stack 0
   225  000001                     	ds	4
   226  000005                     _FIRST_SEND:
   227                           	opt stack 0
   228  000005                     	ds	2
   229  000007                     _MAP_ACCELERATOR:
   230                           	opt stack 0
   231  000007                     	ds	2
   232  000009                     _MAP_BACKLIGHT:
   233                           	opt stack 0
   234  000009                     	ds	2
   235  00000B                     _MAP_BATTERYSTATUS:
   236                           	opt stack 0
   237  00000B                     	ds	2
   238  00000D                     _MAP_BRAKE:
   239                           	opt stack 0
   240  00000D                     	ds	2
   241  00000F                     _MAP_DIRECTION:
   242                           	opt stack 0
   243  00000F                     	ds	2
   244  000011                     _MAP_HEARTBEAT:
   245                           	opt stack 0
   246  000011                     	ds	2
   247  000013                     _MAP_H_BLINK:
   248                           	opt stack 0
   249  000013                     	ds	2
   250  000015                     _MAP_SAFETYPIN:
   251                           	opt stack 0
   252  000015                     	ds	2
   253  000017                     _MAP_VELOCITY:
   254                           	opt stack 0
   255  000017                     	ds	2
   256  000019                     _MAP_V_BLINK:
   257                           	opt stack 0
   258  000019                     	ds	2
   259  00001B                     _TEMP_MAP_ACCELERATOR:
   260                           	opt stack 0
   261  00001B                     	ds	2
   262  00001D                     _TEMP_MAP_BACKLIGHT:
   263                           	opt stack 0
   264  00001D                     	ds	2
   265  00001F                     _TEMP_MAP_BRAKE:
   266                           	opt stack 0
   267  00001F                     	ds	2
   268  000021                     _TEMP_MAP_DIRECTION:
   269                           	opt stack 0
   270  000021                     	ds	2
   271  000023                     _TEMP_MAP_HEARTBEAT:
   272                           	opt stack 0
   273  000023                     	ds	2
   274  000025                     _TEMP_MAP_H_BLINK:
   275                           	opt stack 0
   276  000025                     	ds	2
   277  000027                     _TEMP_MAP_SAFETYPIN:
   278                           	opt stack 0
   279  000027                     	ds	2
   280  000029                     _TEMP_MAP_V_BLINK:
   281                           	opt stack 0
   282  000029                     	ds	2
   283  00002B                     _heartBeatCounter:
   284                           	opt stack 0
   285  00002B                     	ds	2
   286  00002D                     _heartbeatCount:
   287                           	opt stack 0
   288  00002D                     	ds	2
   289  00002F                     _ACCELERATOR:
   290                           	opt stack 0
   291  00002F                     	ds	1
   292  000030                     _BITDATA:
   293                           	opt stack 0
   294  000030                     	ds	1
   295  000031                     _buttonWasPressed:
   296                           	opt stack 0
   297  000031                     	ds	1
   298  000032                     _temp_D2:
   299                           	opt stack 0
   300  000032                     	ds	1
   301  000033                     _temp_D3:
   302                           	opt stack 0
   303  000033                     	ds	1
   304  000034                     _temp_D4:
   305                           	opt stack 0
   306  000034                     	ds	1
   307  000035                     _temp_D5:
   308                           	opt stack 0
   309  000035                     	ds	1
   310  000036                     _temp_D6:
   311                           	opt stack 0
   312  000036                     	ds	1
   313  000037                     _temp_D7:
   314                           	opt stack 0
   315  000037                     	ds	1
   316  000038                     _temp_DLC:
   317                           	opt stack 0
   318  000038                     	ds	1
   319  000039                     _temp_EIDH:
   320                           	opt stack 0
   321  000039                     	ds	1
   322  00003A                     _temp_EIDL:
   323                           	opt stack 0
   324  00003A                     	ds	1
   325  00003B                     _temp_SIDH:
   326                           	opt stack 0
   327  00003B                     	ds	1
   328  00003C                     _temp_SIDL:
   329                           	opt stack 0
   330  00003C                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	dataCOMRAM
   339  00004E                     __pdataCOMRAM:
   340                           	opt stack 0
   341  00004E                     _BATTERISTATUS_ID:
   342                           	opt stack 0
   343  00004E                     	ds	1
   344  00004F                     _MOTOR_ID:
   345                           	opt stack 0
   346  00004F                     	ds	1
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           
   354                           	psect	cstackBANK0
   355  000060                     __pcstackBANK0:
   356                           	opt stack 0
   357  000060                     ?_readAnalog:
   358                           	opt stack 0
   359  000060                     ECAN_Transmit@SIDL:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x0
   363  000060                     	ds	1
   364  000061                     ECAN_Transmit@DLC:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x1
   368  000061                     	ds	1
   369  000062                     ECAN_Transmit@TRANSMIT_ID:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x2
   373  000062                     	ds	1
   374  000063                     ECAN_Transmit@DATA1:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x3
   378  000063                     	ds	1
   379  000064                     ECAN_Transmit@DATA2:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x4
   383  000064                     	ds	1
   384  000065                     ECAN_Transmit@DATA3:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x5
   388  000065                     	ds	1
   389  000066                     ECAN_Transmit@DATA4:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x6
   393  000066                     	ds	1
   394  000067                     ECAN_Transmit@DATA5:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x7
   398  000067                     	ds	1
   399  000068                     ECAN_Transmit@DATA6:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x8
   403  000068                     	ds	1
   404  000069                     ECAN_Transmit@DATA7:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x9
   408  000069                     	ds	1
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416                           	psect	cstackCOMRAM
   417  00003D                     __pcstackCOMRAM:
   418                           	opt stack 0
   419  00003D                     ??_ISR:
   420  00003D                     
   421                           ; 2 bytes @ 0x0
   422  00003D                     	ds	14
   423  00004B                     ??_unZipCAN:
   424  00004B                     ECAN_Receive@RXMsgFlag:
   425                           	opt stack 0
   426  00004B                     ECAN_Transmit@SIDH:
   427                           	opt stack 0
   428  00004B                     Delay@count:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xE
   432  00004B                     	ds	2
   433  00004D                     
   434                           ; 0 bytes @ 0x10
   435  00004D                     	ds	1
   436  00004E                     tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443                           ; 0 bytes @ 0x11
   444 ;;
   445 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   446 ;;
   447 ;; *************** function _main *****************
   448 ;; Defined at:
   449 ;;		line 9 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  2  112[None  ] int 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels required when called:    4
   469 ;; This function calls:
   470 ;;		_CANSetup
   471 ;;		_Delay
   472 ;;		_ECAN_Receive
   473 ;;		_ECAN_Transmit
   474 ;;		_InitDevice
   475 ;;		_checkAccelerator
   476 ;;		_checkBacklight
   477 ;;		_checkBrake
   478 ;;		_checkDirection
   479 ;;		_checkH_blink
   480 ;;		_checkSafetyPin
   481 ;;		_checkV_blink
   482 ;;		_danger
   483 ;;		_setup_Interrupt
   484 ;;		_unZipCAN
   485 ;;		_updateInputs
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492  0004AE                     __ptext0:
   493                           	opt stack 0
   494  0004AE                     _main:
   495                           	opt stack 27
   496                           
   497                           ;main.c: 12: InitDevice();
   498                           
   499                           ;incstack = 0
   500  0004AE  EC6F  F001         	call	_InitDevice	;wreg free
   501                           
   502                           ;main.c: 13: CANSetup();
   503  0004B2  EC55  F000         	call	_CANSetup	;wreg free
   504                           
   505                           ;main.c: 14: setup_Interrupt();
   506  0004B6  EC72  F003         	call	_setup_Interrupt	;wreg free
   507                           
   508                           ;main.c: 16: heartBeatCounter = 0;
   509  0004BA  0E00               	movlw	0
   510  0004BC  6E2C               	movwf	_heartBeatCounter+1,c
   511  0004BE  0E00               	movlw	0
   512  0004C0  6E2B               	movwf	_heartBeatCounter,c
   513                           
   514                           ;main.c: 17: FIRST_SEND = 1;
   515  0004C2  0E00               	movlw	0
   516  0004C4  6E06               	movwf	_FIRST_SEND+1,c
   517  0004C6  0E01               	movlw	1
   518  0004C8  6E05               	movwf	_FIRST_SEND,c
   519                           
   520                           ;main.c: 18: interruptCounter = 0;
   521  0004CA  0E00               	movlw	0
   522  0004CC  6E01               	movwf	_interruptCounter,c
   523  0004CE  0E00               	movlw	0
   524  0004D0  6E02               	movwf	_interruptCounter+1,c
   525  0004D2  0E00               	movlw	0
   526  0004D4  6E03               	movwf	_interruptCounter+2,c
   527  0004D6  0E00               	movlw	0
   528  0004D8  6E04               	movwf	_interruptCounter+3,c
   529                           
   530                           ;main.c: 20: LATAbits.LATA7 = 1;
   531  0004DA  8E89               	bsf	3977,7,c	;volatile
   532                           
   533                           ;main.c: 21: LATBbits.LATB1 = 0;
   534  0004DC  928A               	bcf	3978,1,c	;volatile
   535  0004DE                     l113:
   536                           
   537                           ;main.c: 26: if(ECAN_Receive()){
   538  0004DE  ECEC  F001         	call	_ECAN_Receive	;wreg free
   539  0004E2  0900               	iorlw	0
   540  0004E4  B4D8               	btfsc	status,2,c
   541  0004E6  D00F               	goto	l1738
   542                           
   543                           ;main.c: 27: FIRST_SEND = 0;
   544  0004E8  0E00               	movlw	0
   545  0004EA  6E06               	movwf	_FIRST_SEND+1,c
   546  0004EC  0E00               	movlw	0
   547  0004EE  6E05               	movwf	_FIRST_SEND,c
   548                           
   549                           ;main.c: 28: LATAbits.LATA6 = 1;
   550  0004F0  8C89               	bsf	3977,6,c	;volatile
   551                           
   552                           ;main.c: 29: unZipCAN();
   553  0004F2  ECEA  F000         	call	_unZipCAN	;wreg free
   554                           
   555                           ;main.c: 30: if(TEMP_MAP_HEARTBEAT == 1){
   556  0004F6  0423               	decf	_TEMP_MAP_HEARTBEAT,w,c
   557  0004F8  1024               	iorwf	_TEMP_MAP_HEARTBEAT+1,w,c
   558  0004FA  A4D8               	btfss	status,2,c
   559  0004FC  D004               	goto	l1738
   560                           
   561                           ;main.c: 31: heartBeatCounter = 0;
   562  0004FE  0E00               	movlw	0
   563  000500  6E2C               	movwf	_heartBeatCounter+1,c
   564  000502  0E00               	movlw	0
   565  000504  6E2B               	movwf	_heartBeatCounter,c
   566  000506                     l1738:
   567                           
   568                           ;main.c: 38: }
   569                           ;main.c: 40: checkBrake();
   570  000506  EC56  F003         	call	_checkBrake	;wreg free
   571                           
   572                           ;main.c: 41: checkBacklight();
   573  00050A  EC1F  F003         	call	_checkBacklight	;wreg free
   574                           
   575                           ;main.c: 42: checkV_blink();
   576  00050E  ECFD  F002         	call	_checkV_blink	;wreg free
   577                           
   578                           ;main.c: 43: checkH_blink();
   579  000512  EC0E  F003         	call	_checkH_blink	;wreg free
   580                           
   581                           ;main.c: 44: checkDirection();
   582  000516  EC4A  F003         	call	_checkDirection	;wreg free
   583                           
   584                           ;main.c: 45: checkSafetyPin();
   585  00051A  EC3E  F003         	call	_checkSafetyPin	;wreg free
   586                           
   587                           ;main.c: 46: checkAccelerator();
   588  00051E  EC30  F003         	call	_checkAccelerator	;wreg free
   589                           
   590                           ;main.c: 51: updateInputs();
   591  000522  EC6B  F003         	call	_updateInputs	;wreg free
   592                           
   593                           ;main.c: 53: ECAN_Transmit(0x32,0xC0, 0x08,
   594                           ;main.c: 54: MAP_BATTERYSTATUS,
   595                           ;main.c: 55: MAP_VELOCITY,
   596                           ;main.c: 56: 1,
   597                           ;main.c: 57: temp_D3,
   598                           ;main.c: 58: temp_D4,
   599                           ;main.c: 59: temp_D5,
   600                           ;main.c: 60: temp_D6,
   601                           ;main.c: 61: temp_D7);
   602  000526  0EC0               	movlw	192
   603  000528  0100               	movlb	0	; () banked
   604  00052A  6F60               	movwf	ECAN_Transmit@SIDL& (0+255),b
   605  00052C  0E08               	movlw	8
   606  00052E  0100               	movlb	0	; () banked
   607  000530  6F61               	movwf	ECAN_Transmit@DLC& (0+255),b
   608  000532  C00B  F062         	movff	_MAP_BATTERYSTATUS,ECAN_Transmit@TRANSMIT_ID
   609  000536  C017  F063         	movff	_MAP_VELOCITY,ECAN_Transmit@DATA1
   610  00053A  0E01               	movlw	1
   611  00053C  0100               	movlb	0	; () banked
   612  00053E  6F64               	movwf	ECAN_Transmit@DATA2& (0+255),b
   613  000540  C033  F065         	movff	_temp_D3,ECAN_Transmit@DATA3
   614  000544  C034  F066         	movff	_temp_D4,ECAN_Transmit@DATA4
   615  000548  C035  F067         	movff	_temp_D5,ECAN_Transmit@DATA5
   616  00054C  C036  F068         	movff	_temp_D6,ECAN_Transmit@DATA6
   617  000550  C037  F069         	movff	_temp_D7,ECAN_Transmit@DATA7
   618  000554  0E32               	movlw	50
   619  000556  ECB4  F002         	call	_ECAN_Transmit
   620                           
   621                           ;main.c: 64: Delay(10);
   622  00055A  0E00               	movlw	0
   623  00055C  6E4C               	movwf	Delay@count+1,c
   624  00055E  0E0A               	movlw	10
   625  000560  6E4B               	movwf	Delay@count,c
   626  000562  EC62  F003         	call	_Delay	;wreg free
   627  000566  D7BB               	goto	l113
   628  000568                     __end_of_main:
   629                           	opt stack 0
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           status	equ	0xFD8
   637                           
   638 ;; *************** function _updateInputs *****************
   639 ;; Defined at:
   640 ;;		line 59 in file "peripherals.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    3
   661 ;; This function calls:
   662 ;;		_readAnalog
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text1
   669  0006D6                     __ptext1:
   670                           	opt stack 0
   671  0006D6                     _updateInputs:
   672                           	opt stack 27
   673                           
   674                           ;peripherals.c: 62: MAP_BATTERYSTATUS = readAnalog();
   675                           
   676                           ;incstack = 0
   677  0006D6  ECEB  F002         	call	_readAnalog	;wreg free
   678  0006DA  C060  F00B         	movff	?_readAnalog,_MAP_BATTERYSTATUS
   679  0006DE  C061  F00C         	movff	?_readAnalog+1,_MAP_BATTERYSTATUS+1
   680  0006E2  0012               	return		;funcret
   681  0006E4                     __end_of_updateInputs:
   682                           	opt stack 0
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           status	equ	0xFD8
   690                           
   691 ;; *************** function _readAnalog *****************
   692 ;; Defined at:
   693 ;;		line 68 in file "peripherals.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  2    0[BANK0 ] int 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   711 ;;Total ram usage:        2 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    2
   714 ;; This function calls:
   715 ;;		_Delay
   716 ;; This function is called by:
   717 ;;		_updateInputs
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text2
   722  0005D6                     __ptext2:
   723                           	opt stack 0
   724  0005D6                     _readAnalog:
   725                           	opt stack 27
   726                           
   727                           ;peripherals.c: 71: ADCON0 = 0x00;
   728                           
   729                           ;incstack = 0
   730  0005D6  0E00               	movlw	0
   731  0005D8  6EC2               	movwf	4034,c	;volatile
   732                           
   733                           ;peripherals.c: 73: ADCON0bits.ADON = 1;
   734  0005DA  80C2               	bsf	4034,0,c	;volatile
   735                           
   736                           ;peripherals.c: 77: Delay((unsigned int)(64/4)*80 * 100);
   737  0005DC  0EF4               	movlw	244
   738  0005DE  6E4C               	movwf	Delay@count+1,c
   739  0005E0  0E00               	movlw	0
   740  0005E2  6E4B               	movwf	Delay@count,c
   741  0005E4  EC62  F003         	call	_Delay	;wreg free
   742                           
   743                           ;peripherals.c: 79: ADCON0bits.GO_DONE = 1;
   744  0005E8  82C2               	bsf	4034,1,c	;volatile
   745  0005EA                     l645:
   746  0005EA  B2C2               	btfsc	4034,1,c	;volatile
   747  0005EC  D7FE               	goto	l645
   748                           
   749                           ;peripherals.c: 82: ADCON0bits.ADON = 0;
   750  0005EE  90C2               	bcf	4034,0,c	;volatile
   751                           
   752                           ;peripherals.c: 86: return ADRESH;
   753  0005F0  CFC4 F060          	movff	4036,?_readAnalog	;volatile
   754  0005F4  0100               	movlb	0	; () banked
   755  0005F6  6B61               	clrf	(?_readAnalog+1)& (0+255),b
   756                           
   757                           ; BSR set to: 0
   758  0005F8  0012               	return		;funcret
   759  0005FA                     __end_of_readAnalog:
   760                           	opt stack 0
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _Delay *****************
   770 ;; Defined at:
   771 ;;		line 11 in file "Other.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  count           2   14[COMRAM] unsigned int 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;;		_readAnalog
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text3
   801  0006C4                     __ptext3:
   802                           	opt stack 0
   803  0006C4                     _Delay:
   804                           	opt stack 27
   805  0006C4                     l1588:
   806  0006C4  064B               	decf	Delay@count,f,c
   807  0006C6  A0D8               	btfss	status,0,c
   808  0006C8  064C               	decf	Delay@count+1,f,c
   809  0006CA  284B               	incf	Delay@count,w,c
   810  0006CC  E1FB               	bnz	l1588
   811  0006CE  284C               	incf	Delay@count+1,w,c
   812  0006D0  B4D8               	btfsc	status,2,c
   813  0006D2  0012               	return	
   814  0006D4  D7F7               	goto	l1588
   815  0006D6                     __end_of_Delay:
   816                           	opt stack 0
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           postinc0	equ	0xFEE
   822                           wreg	equ	0xFE8
   823                           status	equ	0xFD8
   824                           
   825 ;; *************** function _unZipCAN *****************
   826 ;; Defined at:
   827 ;;		line 359 in file "ECAN.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;		None               void
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   843 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	text4
   856  0001D4                     __ptext4:
   857                           	opt stack 0
   858  0001D4                     _unZipCAN:
   859                           	opt stack 29
   860                           
   861                           ;ECAN.c: 361: TEMP_MAP_HEARTBEAT = (BITDATA & (1 << 0));
   862                           
   863                           ;incstack = 0
   864  0001D4  C030  F04B         	movff	_BITDATA,??_unZipCAN
   865  0001D8  0E01               	movlw	1
   866  0001DA  164B               	andwf	??_unZipCAN,f,c
   867  0001DC  504B               	movf	??_unZipCAN,w,c
   868  0001DE  6E23               	movwf	_TEMP_MAP_HEARTBEAT,c
   869  0001E0  6A24               	clrf	_TEMP_MAP_HEARTBEAT+1,c
   870                           
   871                           ;ECAN.c: 364: TEMP_MAP_BRAKE = BITDATA & (1 << 1);
   872  0001E2  C030  F04B         	movff	_BITDATA,??_unZipCAN
   873  0001E6  0E02               	movlw	2
   874  0001E8  164B               	andwf	??_unZipCAN,f,c
   875  0001EA  504B               	movf	??_unZipCAN,w,c
   876  0001EC  6E1F               	movwf	_TEMP_MAP_BRAKE,c
   877  0001EE  6A20               	clrf	_TEMP_MAP_BRAKE+1,c
   878                           
   879                           ;ECAN.c: 365: TEMP_MAP_BRAKE = (TEMP_MAP_BRAKE >> 1);
   880  0001F0  3420               	rlcf	_TEMP_MAP_BRAKE+1,w,c
   881  0001F2  3020               	rrcf	_TEMP_MAP_BRAKE+1,w,c
   882  0001F4  6E4B               	movwf	??_unZipCAN& (0+255),c
   883  0001F6  301F               	rrcf	_TEMP_MAP_BRAKE,w,c
   884  0001F8  6E1F               	movwf	_TEMP_MAP_BRAKE,c
   885  0001FA  C04B  F020         	movff	??_unZipCAN,_TEMP_MAP_BRAKE+1
   886                           
   887                           ;ECAN.c: 367: TEMP_MAP_BACKLIGHT = BITDATA & (1 << 2);
   888  0001FE  C030  F04B         	movff	_BITDATA,??_unZipCAN
   889  000202  0E04               	movlw	4
   890  000204  164B               	andwf	??_unZipCAN,f,c
   891  000206  504B               	movf	??_unZipCAN,w,c
   892  000208  6E1D               	movwf	_TEMP_MAP_BACKLIGHT,c
   893  00020A  6A1E               	clrf	_TEMP_MAP_BACKLIGHT+1,c
   894                           
   895                           ;ECAN.c: 368: TEMP_MAP_BACKLIGHT = (TEMP_MAP_BACKLIGHT >> 2);
   896  00020C  C01D  F04B         	movff	_TEMP_MAP_BACKLIGHT,??_unZipCAN
   897  000210  C01E  F04C         	movff	_TEMP_MAP_BACKLIGHT+1,??_unZipCAN+1
   898  000214  344C               	rlcf	??_unZipCAN+1,w,c
   899  000216  324C               	rrcf	??_unZipCAN+1,f,c
   900  000218  324B               	rrcf	??_unZipCAN,f,c
   901  00021A  344C               	rlcf	??_unZipCAN+1,w,c
   902  00021C  324C               	rrcf	??_unZipCAN+1,f,c
   903  00021E  324B               	rrcf	??_unZipCAN,f,c
   904  000220  C04B  F01D         	movff	??_unZipCAN,_TEMP_MAP_BACKLIGHT
   905  000224  C04C  F01E         	movff	??_unZipCAN+1,_TEMP_MAP_BACKLIGHT+1
   906                           
   907                           ;ECAN.c: 370: TEMP_MAP_V_BLINK = BITDATA & (1 << 3);
   908  000228  C030  F04B         	movff	_BITDATA,??_unZipCAN
   909  00022C  0E08               	movlw	8
   910  00022E  164B               	andwf	??_unZipCAN,f,c
   911  000230  504B               	movf	??_unZipCAN,w,c
   912  000232  6E29               	movwf	_TEMP_MAP_V_BLINK,c
   913  000234  6A2A               	clrf	_TEMP_MAP_V_BLINK+1,c
   914                           
   915                           ;ECAN.c: 371: TEMP_MAP_V_BLINK = (TEMP_MAP_V_BLINK >> 3);
   916  000236  C029  F04B         	movff	_TEMP_MAP_V_BLINK,??_unZipCAN
   917  00023A  C02A  F04C         	movff	_TEMP_MAP_V_BLINK+1,??_unZipCAN+1
   918  00023E  344C               	rlcf	??_unZipCAN+1,w,c
   919  000240  324C               	rrcf	??_unZipCAN+1,f,c
   920  000242  324B               	rrcf	??_unZipCAN,f,c
   921  000244  344C               	rlcf	??_unZipCAN+1,w,c
   922  000246  324C               	rrcf	??_unZipCAN+1,f,c
   923  000248  324B               	rrcf	??_unZipCAN,f,c
   924  00024A  344C               	rlcf	??_unZipCAN+1,w,c
   925  00024C  324C               	rrcf	??_unZipCAN+1,f,c
   926  00024E  324B               	rrcf	??_unZipCAN,f,c
   927  000250  C04B  F029         	movff	??_unZipCAN,_TEMP_MAP_V_BLINK
   928  000254  C04C  F02A         	movff	??_unZipCAN+1,_TEMP_MAP_V_BLINK+1
   929                           
   930                           ;ECAN.c: 373: TEMP_MAP_H_BLINK = BITDATA & (1 << 4);
   931  000258  C030  F04B         	movff	_BITDATA,??_unZipCAN
   932  00025C  0E10               	movlw	16
   933  00025E  164B               	andwf	??_unZipCAN,f,c
   934  000260  504B               	movf	??_unZipCAN,w,c
   935  000262  6E25               	movwf	_TEMP_MAP_H_BLINK,c
   936  000264  6A26               	clrf	_TEMP_MAP_H_BLINK+1,c
   937                           
   938                           ;ECAN.c: 374: TEMP_MAP_H_BLINK = (TEMP_MAP_H_BLINK >> 4);
   939  000266  C025  F04B         	movff	_TEMP_MAP_H_BLINK,??_unZipCAN
   940  00026A  C026  F04C         	movff	_TEMP_MAP_H_BLINK+1,??_unZipCAN+1
   941  00026E  0E04               	movlw	4
   942  000270  6E4D               	movwf	(??_unZipCAN+2)& (0+255),c
   943  000272                     u125:
   944  000272  344C               	rlcf	??_unZipCAN+1,w,c
   945  000274  324C               	rrcf	??_unZipCAN+1,f,c
   946  000276  324B               	rrcf	??_unZipCAN,f,c
   947  000278  2E4D               	decfsz	(??_unZipCAN+2)& (0+255),f,c
   948  00027A  D7FB               	goto	u125
   949  00027C  C04B  F025         	movff	??_unZipCAN,_TEMP_MAP_H_BLINK
   950  000280  C04C  F026         	movff	??_unZipCAN+1,_TEMP_MAP_H_BLINK+1
   951                           
   952                           ;ECAN.c: 376: TEMP_MAP_DIRECTION = BITDATA & (1 << 5);
   953  000284  C030  F04B         	movff	_BITDATA,??_unZipCAN
   954  000288  0E20               	movlw	32
   955  00028A  164B               	andwf	??_unZipCAN,f,c
   956  00028C  504B               	movf	??_unZipCAN,w,c
   957  00028E  6E21               	movwf	_TEMP_MAP_DIRECTION,c
   958  000290  6A22               	clrf	_TEMP_MAP_DIRECTION+1,c
   959                           
   960                           ;ECAN.c: 377: TEMP_MAP_DIRECTION = (TEMP_MAP_DIRECTION >> 5);
   961  000292  C021  F04B         	movff	_TEMP_MAP_DIRECTION,??_unZipCAN
   962  000296  C022  F04C         	movff	_TEMP_MAP_DIRECTION+1,??_unZipCAN+1
   963  00029A  0E05               	movlw	5
   964  00029C  6E4D               	movwf	(??_unZipCAN+2)& (0+255),c
   965  00029E                     u135:
   966  00029E  344C               	rlcf	??_unZipCAN+1,w,c
   967  0002A0  324C               	rrcf	??_unZipCAN+1,f,c
   968  0002A2  324B               	rrcf	??_unZipCAN,f,c
   969  0002A4  2E4D               	decfsz	(??_unZipCAN+2)& (0+255),f,c
   970  0002A6  D7FB               	goto	u135
   971  0002A8  C04B  F021         	movff	??_unZipCAN,_TEMP_MAP_DIRECTION
   972  0002AC  C04C  F022         	movff	??_unZipCAN+1,_TEMP_MAP_DIRECTION+1
   973                           
   974                           ;ECAN.c: 379: TEMP_MAP_SAFETYPIN = BITDATA & (1 << 6);
   975  0002B0  C030  F04B         	movff	_BITDATA,??_unZipCAN
   976  0002B4  0E40               	movlw	64
   977  0002B6  164B               	andwf	??_unZipCAN,f,c
   978  0002B8  504B               	movf	??_unZipCAN,w,c
   979  0002BA  6E27               	movwf	_TEMP_MAP_SAFETYPIN,c
   980  0002BC  6A28               	clrf	_TEMP_MAP_SAFETYPIN+1,c
   981                           
   982                           ;ECAN.c: 380: TEMP_MAP_SAFETYPIN = (TEMP_MAP_SAFETYPIN >> 6);
   983  0002BE  C027  F04B         	movff	_TEMP_MAP_SAFETYPIN,??_unZipCAN
   984  0002C2  C028  F04C         	movff	_TEMP_MAP_SAFETYPIN+1,??_unZipCAN+1
   985  0002C6  0E06               	movlw	6
   986  0002C8  6E4D               	movwf	(??_unZipCAN+2)& (0+255),c
   987  0002CA                     u145:
   988  0002CA  344C               	rlcf	??_unZipCAN+1,w,c
   989  0002CC  324C               	rrcf	??_unZipCAN+1,f,c
   990  0002CE  324B               	rrcf	??_unZipCAN,f,c
   991  0002D0  2E4D               	decfsz	(??_unZipCAN+2)& (0+255),f,c
   992  0002D2  D7FB               	goto	u145
   993  0002D4  C04B  F027         	movff	??_unZipCAN,_TEMP_MAP_SAFETYPIN
   994  0002D8  C04C  F028         	movff	??_unZipCAN+1,_TEMP_MAP_SAFETYPIN+1
   995  0002DC  0012               	return		;funcret
   996  0002DE                     __end_of_unZipCAN:
   997                           	opt stack 0
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           status	equ	0xFD8
  1005                           
  1006 ;; *************** function _setup_Interrupt *****************
  1007 ;; Defined at:
  1008 ;;		line 96 in file "init.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;		None               void
  1015 ;; Registers used:
  1016 ;;		None
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text5
  1037  0006E4                     __ptext5:
  1038                           	opt stack 0
  1039  0006E4                     _setup_Interrupt:
  1040                           	opt stack 29
  1041                           
  1042                           ;init.c: 97: RCONbits.IPEN = 1;
  1043                           
  1044                           ;incstack = 0
  1045  0006E4  8ED0               	bsf	4048,7,c	;volatile
  1046                           
  1047                           ;init.c: 98: INTCONbits.GIEH = 1;
  1048  0006E6  8EF2               	bsf	intcon,7,c	;volatile
  1049                           
  1050                           ;init.c: 99: INTCONbits.GIEL = 1;
  1051  0006E8  8CF2               	bsf	intcon,6,c	;volatile
  1052                           
  1053                           ;init.c: 100: INTCONbits.TMR0IE = 1;
  1054  0006EA  8AF2               	bsf	intcon,5,c	;volatile
  1055  0006EC  0012               	return		;funcret
  1056  0006EE                     __end_of_setup_Interrupt:
  1057                           	opt stack 0
  1058                           tblptru	equ	0xFF8
  1059                           tblptrh	equ	0xFF7
  1060                           tblptrl	equ	0xFF6
  1061                           tablat	equ	0xFF5
  1062                           intcon	equ	0xFF2
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           status	equ	0xFD8
  1066                           
  1067 ;; *************** function _danger *****************
  1068 ;; Defined at:
  1069 ;;		line 17 in file "Other.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2   16[None  ] int 
  1076 ;; Registers used:
  1077 ;;		None
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text6
  1098  0006EE                     __ptext6:
  1099                           	opt stack 0
  1100  0006EE                     _danger:
  1101                           	opt stack 29
  1102  0006EE                     l524:
  1103                           
  1104                           ;Other.c: 19: LATAbits.LATA6 = 0;
  1105  0006EE  9C89               	bcf	3977,6,c	;volatile
  1106                           
  1107                           ;Other.c: 20: LATBbits.LATB1 = 1;
  1108  0006F0  828A               	bsf	3978,1,c	;volatile
  1109  0006F2  D7FD               	goto	l524
  1110  0006F4                     __end_of_danger:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           intcon	equ	0xFF2
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           status	equ	0xFD8
  1120                           
  1121 ;; *************** function _checkV_blink *****************
  1122 ;; Defined at:
  1123 ;;		line 27 in file "peripherals.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text7
  1152  0005FA                     __ptext7:
  1153                           	opt stack 0
  1154  0005FA                     _checkV_blink:
  1155                           	opt stack 29
  1156                           
  1157                           ;peripherals.c: 28: if(TEMP_MAP_V_BLINK != MAP_V_BLINK){
  1158                           
  1159                           ;incstack = 0
  1160  0005FA  5019               	movf	_MAP_V_BLINK,w,c
  1161  0005FC  1829               	xorwf	_TEMP_MAP_V_BLINK,w,c
  1162  0005FE  E104               	bnz	u180
  1163  000600  501A               	movf	_MAP_V_BLINK+1,w,c
  1164  000602  182A               	xorwf	_TEMP_MAP_V_BLINK+1,w,c
  1165  000604  B4D8               	btfsc	status,2,c
  1166  000606  0012               	return	
  1167  000608                     u180:
  1168                           
  1169                           ;peripherals.c: 29: MAP_V_BLINK = TEMP_MAP_V_BLINK;
  1170  000608  C029  F019         	movff	_TEMP_MAP_V_BLINK,_MAP_V_BLINK
  1171  00060C  C02A  F01A         	movff	_TEMP_MAP_V_BLINK+1,_MAP_V_BLINK+1
  1172                           
  1173                           ;peripherals.c: 30: LATBbits.LATB5 = MAP_V_BLINK;
  1174  000610  B019               	btfsc	_MAP_V_BLINK,0,c
  1175  000612  D002               	bra	u195
  1176  000614  9A8A               	bcf	3978,5,c	;volatile
  1177  000616  D001               	bra	u196
  1178  000618                     u195:
  1179  000618  8A8A               	bsf	3978,5,c	;volatile
  1180  00061A                     u196:
  1181  00061A  0012               	return	
  1182  00061C                     __end_of_checkV_blink:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           intcon	equ	0xFF2
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           status	equ	0xFD8
  1192                           
  1193 ;; *************** function _checkSafetyPin *****************
  1194 ;; Defined at:
  1195 ;;		line 45 in file "peripherals.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;		None               void
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text8
  1224  00067C                     __ptext8:
  1225                           	opt stack 0
  1226  00067C                     _checkSafetyPin:
  1227                           	opt stack 29
  1228                           
  1229                           ;peripherals.c: 46: if(TEMP_MAP_SAFETYPIN != MAP_SAFETYPIN){
  1230                           
  1231                           ;incstack = 0
  1232  00067C  5015               	movf	_MAP_SAFETYPIN,w,c
  1233  00067E  1827               	xorwf	_TEMP_MAP_SAFETYPIN,w,c
  1234  000680  E104               	bnz	u230
  1235  000682  5016               	movf	_MAP_SAFETYPIN+1,w,c
  1236  000684  1828               	xorwf	_TEMP_MAP_SAFETYPIN+1,w,c
  1237  000686  B4D8               	btfsc	status,2,c
  1238  000688  0012               	return	
  1239  00068A                     u230:
  1240                           
  1241                           ;peripherals.c: 47: MAP_SAFETYPIN = TEMP_MAP_SAFETYPIN;
  1242  00068A  C027  F015         	movff	_TEMP_MAP_SAFETYPIN,_MAP_SAFETYPIN
  1243  00068E  C028  F016         	movff	_TEMP_MAP_SAFETYPIN+1,_MAP_SAFETYPIN+1
  1244  000692  0012               	return	
  1245  000694                     __end_of_checkSafetyPin:
  1246                           	opt stack 0
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           intcon	equ	0xFF2
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           status	equ	0xFD8
  1255                           
  1256 ;; *************** function _checkH_blink *****************
  1257 ;; Defined at:
  1258 ;;		line 33 in file "peripherals.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;		None               void
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text9
  1287  00061C                     __ptext9:
  1288                           	opt stack 0
  1289  00061C                     _checkH_blink:
  1290                           	opt stack 29
  1291                           
  1292                           ;peripherals.c: 34: if(TEMP_MAP_H_BLINK != MAP_H_BLINK){
  1293                           
  1294                           ;incstack = 0
  1295  00061C  5013               	movf	_MAP_H_BLINK,w,c
  1296  00061E  1825               	xorwf	_TEMP_MAP_H_BLINK,w,c
  1297  000620  E104               	bnz	u200
  1298  000622  5014               	movf	_MAP_H_BLINK+1,w,c
  1299  000624  1826               	xorwf	_TEMP_MAP_H_BLINK+1,w,c
  1300  000626  B4D8               	btfsc	status,2,c
  1301  000628  0012               	return	
  1302  00062A                     u200:
  1303                           
  1304                           ;peripherals.c: 35: MAP_H_BLINK = TEMP_MAP_H_BLINK;
  1305  00062A  C025  F013         	movff	_TEMP_MAP_H_BLINK,_MAP_H_BLINK
  1306  00062E  C026  F014         	movff	_TEMP_MAP_H_BLINK+1,_MAP_H_BLINK+1
  1307                           
  1308                           ;peripherals.c: 36: LATBbits.LATB6 = MAP_H_BLINK;
  1309  000632  B013               	btfsc	_MAP_H_BLINK,0,c
  1310  000634  D002               	bra	u215
  1311  000636  9C8A               	bcf	3978,6,c	;volatile
  1312  000638  D001               	bra	u216
  1313  00063A                     u215:
  1314  00063A  8C8A               	bsf	3978,6,c	;volatile
  1315  00063C                     u216:
  1316  00063C  0012               	return	
  1317  00063E                     __end_of_checkH_blink:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           intcon	equ	0xFF2
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _checkDirection *****************
  1329 ;; Defined at:
  1330 ;;		line 39 in file "peripherals.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text10
  1359  000694                     __ptext10:
  1360                           	opt stack 0
  1361  000694                     _checkDirection:
  1362                           	opt stack 29
  1363                           
  1364                           ;peripherals.c: 40: if(TEMP_MAP_DIRECTION != MAP_DIRECTION){
  1365                           
  1366                           ;incstack = 0
  1367  000694  500F               	movf	_MAP_DIRECTION,w,c
  1368  000696  1821               	xorwf	_TEMP_MAP_DIRECTION,w,c
  1369  000698  E104               	bnz	u220
  1370  00069A  5010               	movf	_MAP_DIRECTION+1,w,c
  1371  00069C  1822               	xorwf	_TEMP_MAP_DIRECTION+1,w,c
  1372  00069E  B4D8               	btfsc	status,2,c
  1373  0006A0  0012               	return	
  1374  0006A2                     u220:
  1375                           
  1376                           ;peripherals.c: 41: MAP_DIRECTION = TEMP_MAP_DIRECTION;
  1377  0006A2  C021  F00F         	movff	_TEMP_MAP_DIRECTION,_MAP_DIRECTION
  1378  0006A6  C022  F010         	movff	_TEMP_MAP_DIRECTION+1,_MAP_DIRECTION+1
  1379  0006AA  0012               	return	
  1380  0006AC                     __end_of_checkDirection:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           intcon	equ	0xFF2
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _checkBrake *****************
  1392 ;; Defined at:
  1393 ;;		line 10 in file "peripherals.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;		None               void
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text11
  1422  0006AC                     __ptext11:
  1423                           	opt stack 0
  1424  0006AC                     _checkBrake:
  1425                           	opt stack 29
  1426                           
  1427                           ;peripherals.c: 11: if(TEMP_MAP_BRAKE != MAP_BRAKE){
  1428                           
  1429                           ;incstack = 0
  1430  0006AC  500D               	movf	_MAP_BRAKE,w,c
  1431  0006AE  181F               	xorwf	_TEMP_MAP_BRAKE,w,c
  1432  0006B0  E104               	bnz	u150
  1433  0006B2  500E               	movf	_MAP_BRAKE+1,w,c
  1434  0006B4  1820               	xorwf	_TEMP_MAP_BRAKE+1,w,c
  1435  0006B6  B4D8               	btfsc	status,2,c
  1436  0006B8  0012               	return	
  1437  0006BA                     u150:
  1438                           
  1439                           ;peripherals.c: 12: MAP_BRAKE = TEMP_MAP_BRAKE;
  1440  0006BA  C01F  F00D         	movff	_TEMP_MAP_BRAKE,_MAP_BRAKE
  1441  0006BE  C020  F00E         	movff	_TEMP_MAP_BRAKE+1,_MAP_BRAKE+1
  1442                           
  1443                           ;peripherals.c: 16: else{
  1444                           
  1445                           ;peripherals.c: 15: }
  1446  0006C2  0012               	return	
  1447  0006C4                     __end_of_checkBrake:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           tblptrh	equ	0xFF7
  1451                           tblptrl	equ	0xFF6
  1452                           tablat	equ	0xFF5
  1453                           intcon	equ	0xFF2
  1454                           postinc0	equ	0xFEE
  1455                           wreg	equ	0xFE8
  1456                           status	equ	0xFD8
  1457                           
  1458 ;; *************** function _checkBacklight *****************
  1459 ;; Defined at:
  1460 ;;		line 21 in file "peripherals.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;		None               void
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text12
  1489  00063E                     __ptext12:
  1490                           	opt stack 0
  1491  00063E                     _checkBacklight:
  1492                           	opt stack 29
  1493                           
  1494                           ;peripherals.c: 22: if(TEMP_MAP_BACKLIGHT != MAP_BACKLIGHT){
  1495                           
  1496                           ;incstack = 0
  1497  00063E  5009               	movf	_MAP_BACKLIGHT,w,c
  1498  000640  181D               	xorwf	_TEMP_MAP_BACKLIGHT,w,c
  1499  000642  E104               	bnz	u160
  1500  000644  500A               	movf	_MAP_BACKLIGHT+1,w,c
  1501  000646  181E               	xorwf	_TEMP_MAP_BACKLIGHT+1,w,c
  1502  000648  B4D8               	btfsc	status,2,c
  1503  00064A  0012               	return	
  1504  00064C                     u160:
  1505                           
  1506                           ;peripherals.c: 23: MAP_BACKLIGHT = TEMP_MAP_BACKLIGHT;
  1507  00064C  C01D  F009         	movff	_TEMP_MAP_BACKLIGHT,_MAP_BACKLIGHT
  1508  000650  C01E  F00A         	movff	_TEMP_MAP_BACKLIGHT+1,_MAP_BACKLIGHT+1
  1509                           
  1510                           ;peripherals.c: 24: LATBbits.LATB7 = MAP_BACKLIGHT;
  1511  000654  B009               	btfsc	_MAP_BACKLIGHT,0,c
  1512  000656  D002               	bra	u175
  1513  000658  9E8A               	bcf	3978,7,c	;volatile
  1514  00065A  D001               	bra	u176
  1515  00065C                     u175:
  1516  00065C  8E8A               	bsf	3978,7,c	;volatile
  1517  00065E                     u176:
  1518  00065E  0012               	return	
  1519  000660                     __end_of_checkBacklight:
  1520                           	opt stack 0
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           intcon	equ	0xFF2
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function _checkAccelerator *****************
  1531 ;; Defined at:
  1532 ;;		line 51 in file "peripherals.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text13
  1561  000660                     __ptext13:
  1562                           	opt stack 0
  1563  000660                     _checkAccelerator:
  1564                           	opt stack 29
  1565                           
  1566                           ;peripherals.c: 52: if(TEMP_MAP_ACCELERATOR != MAP_ACCELERATOR){
  1567                           
  1568                           ;incstack = 0
  1569  000660  5007               	movf	_MAP_ACCELERATOR,w,c
  1570  000662  181B               	xorwf	_TEMP_MAP_ACCELERATOR,w,c
  1571  000664  E104               	bnz	u240
  1572  000666  5008               	movf	_MAP_ACCELERATOR+1,w,c
  1573  000668  181C               	xorwf	_TEMP_MAP_ACCELERATOR+1,w,c
  1574  00066A  B4D8               	btfsc	status,2,c
  1575  00066C  0012               	return	
  1576  00066E                     u240:
  1577                           
  1578                           ;peripherals.c: 53: MAP_ACCELERATOR = TEMP_MAP_ACCELERATOR;
  1579  00066E  C01B  F007         	movff	_TEMP_MAP_ACCELERATOR,_MAP_ACCELERATOR
  1580  000672  C01C  F008         	movff	_TEMP_MAP_ACCELERATOR+1,_MAP_ACCELERATOR+1
  1581                           
  1582                           ;peripherals.c: 54: LATB = MAP_ACCELERATOR;
  1583  000676  C007  FF8A         	movff	_MAP_ACCELERATOR,3978	;volatile
  1584  00067A  0012               	return	
  1585  00067C                     __end_of_checkAccelerator:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           intcon	equ	0xFF2
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _InitDevice *****************
  1597 ;; Defined at:
  1598 ;;		line 11 in file "init.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;		None               void
  1605 ;; Registers used:
  1606 ;;		wreg, status,2
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text14
  1627  0002DE                     __ptext14:
  1628                           	opt stack 0
  1629  0002DE                     _InitDevice:
  1630                           	opt stack 29
  1631                           
  1632                           ;init.c: 12: count = 0x01;
  1633                           
  1634                           ;incstack = 0
  1635  0002DE  0E01               	movlw	1
  1636  0002E0  6E50               	movwf	_count,c
  1637                           
  1638                           ;init.c: 15: OSCCONbits.IRCF = 7;
  1639  0002E2  88D3               	bsf	4051,4,c	;volatile
  1640  0002E4  8AD3               	bsf	4051,5,c	;volatile
  1641  0002E6  8CD3               	bsf	4051,6,c	;volatile
  1642                           
  1643                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  1644  0002E8  8C9B               	bsf	3995,6,c	;volatile
  1645                           
  1646                           ;init.c: 19: heartbeatCount = 0;
  1647  0002EA  0E00               	movlw	0
  1648  0002EC  6E2E               	movwf	_heartbeatCount+1,c
  1649  0002EE  0E00               	movlw	0
  1650  0002F0  6E2D               	movwf	_heartbeatCount,c
  1651                           
  1652                           ;init.c: 20: buttonWasPressed = 0;
  1653  0002F2  0E00               	movlw	0
  1654  0002F4  6E31               	movwf	_buttonWasPressed,c
  1655                           
  1656                           ;init.c: 25: TRISA = 0b00111111;
  1657  0002F6  0E3F               	movlw	63
  1658  0002F8  6E92               	movwf	3986,c	;volatile
  1659                           
  1660                           ;init.c: 26: ANCON0 = 0x01;
  1661  0002FA  0E01               	movlw	1
  1662  0002FC  010F               	movlb	15	; () banked
  1663  0002FE  6F5D               	movwf	93,b	;volatile
  1664                           
  1665                           ;init.c: 27: ANCON1 = 0x00;
  1666  000300  0E00               	movlw	0
  1667  000302  010F               	movlb	15	; () banked
  1668  000304  6F5C               	movwf	92,b	;volatile
  1669                           
  1670                           ;init.c: 30: ADCON0 = 0x00;
  1671  000306  0E00               	movlw	0
  1672  000308  6EC2               	movwf	4034,c	;volatile
  1673                           
  1674                           ;init.c: 31: ADCON1 = 0x00;
  1675  00030A  0E00               	movlw	0
  1676  00030C  6EC1               	movwf	4033,c	;volatile
  1677                           
  1678                           ;init.c: 32: ADCON2 = 0x00;
  1679  00030E  0E00               	movlw	0
  1680  000310  6EC0               	movwf	4032,c	;volatile
  1681                           
  1682                           ; BSR set to: 15
  1683                           ;init.c: 36: ADCON2bits.ADFM=1;
  1684  000312  8EC0               	bsf	4032,7,c	;volatile
  1685                           
  1686                           ;init.c: 37: ADCON2bits.ACQT=1;
  1687  000314  50C0               	movf	4032,w,c	;volatile
  1688  000316  0BC7               	andlw	-57
  1689  000318  0908               	iorlw	8
  1690  00031A  6EC0               	movwf	4032,c	;volatile
  1691                           
  1692                           ;init.c: 38: ADCON2bits.ADCS=2;
  1693  00031C  50C0               	movf	4032,w,c	;volatile
  1694  00031E  0BF8               	andlw	-8
  1695  000320  0902               	iorlw	2
  1696  000322  6EC0               	movwf	4032,c	;volatile
  1697                           
  1698                           ;init.c: 42: LATA = 0x00;
  1699  000324  0E00               	movlw	0
  1700  000326  6E89               	movwf	3977,c	;volatile
  1701                           
  1702                           ;init.c: 44: TRISB = 0b00011101;
  1703  000328  0E1D               	movlw	29
  1704  00032A  6E93               	movwf	3987,c	;volatile
  1705                           
  1706                           ;init.c: 45: LATB = 0x00;
  1707  00032C  0E00               	movlw	0
  1708  00032E  6E8A               	movwf	3978,c	;volatile
  1709                           
  1710                           ;init.c: 47: TRISC = 0x00;
  1711  000330  0E00               	movlw	0
  1712  000332  6E94               	movwf	3988,c	;volatile
  1713                           
  1714                           ;init.c: 48: LATC = 0x00;
  1715  000334  0E00               	movlw	0
  1716  000336  6E8B               	movwf	3979,c	;volatile
  1717                           
  1718                           ;init.c: 52: MAP_BRAKE = 0;
  1719  000338  0E00               	movlw	0
  1720  00033A  6E0E               	movwf	_MAP_BRAKE+1,c
  1721  00033C  0E00               	movlw	0
  1722  00033E  6E0D               	movwf	_MAP_BRAKE,c
  1723                           
  1724                           ;init.c: 53: MAP_BACKLIGHT = 0;
  1725  000340  0E00               	movlw	0
  1726  000342  6E0A               	movwf	_MAP_BACKLIGHT+1,c
  1727  000344  0E00               	movlw	0
  1728  000346  6E09               	movwf	_MAP_BACKLIGHT,c
  1729                           
  1730                           ;init.c: 54: MAP_V_BLINK = 0;
  1731  000348  0E00               	movlw	0
  1732  00034A  6E1A               	movwf	_MAP_V_BLINK+1,c
  1733  00034C  0E00               	movlw	0
  1734  00034E  6E19               	movwf	_MAP_V_BLINK,c
  1735                           
  1736                           ;init.c: 55: MAP_H_BLINK = 0;
  1737  000350  0E00               	movlw	0
  1738  000352  6E14               	movwf	_MAP_H_BLINK+1,c
  1739  000354  0E00               	movlw	0
  1740  000356  6E13               	movwf	_MAP_H_BLINK,c
  1741                           
  1742                           ;init.c: 56: MAP_DIRECTION = 0;
  1743  000358  0E00               	movlw	0
  1744  00035A  6E10               	movwf	_MAP_DIRECTION+1,c
  1745  00035C  0E00               	movlw	0
  1746  00035E  6E0F               	movwf	_MAP_DIRECTION,c
  1747                           
  1748                           ;init.c: 57: MAP_SAFETYPIN = 0;
  1749  000360  0E00               	movlw	0
  1750  000362  6E16               	movwf	_MAP_SAFETYPIN+1,c
  1751  000364  0E00               	movlw	0
  1752  000366  6E15               	movwf	_MAP_SAFETYPIN,c
  1753                           
  1754                           ;init.c: 58: MAP_ACCELERATOR = 0;
  1755  000368  0E00               	movlw	0
  1756  00036A  6E08               	movwf	_MAP_ACCELERATOR+1,c
  1757  00036C  0E00               	movlw	0
  1758  00036E  6E07               	movwf	_MAP_ACCELERATOR,c
  1759                           
  1760                           ;init.c: 60: TEMP_MAP_HEARTBEAT = 0;
  1761  000370  0E00               	movlw	0
  1762  000372  6E24               	movwf	_TEMP_MAP_HEARTBEAT+1,c
  1763  000374  0E00               	movlw	0
  1764  000376  6E23               	movwf	_TEMP_MAP_HEARTBEAT,c
  1765                           
  1766                           ;init.c: 61: TEMP_MAP_BRAKE = 0;
  1767  000378  0E00               	movlw	0
  1768  00037A  6E20               	movwf	_TEMP_MAP_BRAKE+1,c
  1769  00037C  0E00               	movlw	0
  1770  00037E  6E1F               	movwf	_TEMP_MAP_BRAKE,c
  1771                           
  1772                           ;init.c: 62: TEMP_MAP_BACKLIGHT = 0;
  1773  000380  0E00               	movlw	0
  1774  000382  6E1E               	movwf	_TEMP_MAP_BACKLIGHT+1,c
  1775  000384  0E00               	movlw	0
  1776  000386  6E1D               	movwf	_TEMP_MAP_BACKLIGHT,c
  1777                           
  1778                           ;init.c: 63: TEMP_MAP_V_BLINK = 0;
  1779  000388  0E00               	movlw	0
  1780  00038A  6E2A               	movwf	_TEMP_MAP_V_BLINK+1,c
  1781  00038C  0E00               	movlw	0
  1782  00038E  6E29               	movwf	_TEMP_MAP_V_BLINK,c
  1783                           
  1784                           ;init.c: 64: TEMP_MAP_H_BLINK = 0;
  1785  000390  0E00               	movlw	0
  1786  000392  6E26               	movwf	_TEMP_MAP_H_BLINK+1,c
  1787  000394  0E00               	movlw	0
  1788  000396  6E25               	movwf	_TEMP_MAP_H_BLINK,c
  1789                           
  1790                           ;init.c: 65: TEMP_MAP_DIRECTION = 0;
  1791  000398  0E00               	movlw	0
  1792  00039A  6E22               	movwf	_TEMP_MAP_DIRECTION+1,c
  1793  00039C  0E00               	movlw	0
  1794  00039E  6E21               	movwf	_TEMP_MAP_DIRECTION,c
  1795                           
  1796                           ;init.c: 66: TEMP_MAP_SAFETYPIN = 0;
  1797  0003A0  0E00               	movlw	0
  1798  0003A2  6E28               	movwf	_TEMP_MAP_SAFETYPIN+1,c
  1799  0003A4  0E00               	movlw	0
  1800  0003A6  6E27               	movwf	_TEMP_MAP_SAFETYPIN,c
  1801                           
  1802                           ;init.c: 67: TEMP_MAP_ACCELERATOR = 0;
  1803  0003A8  0E00               	movlw	0
  1804  0003AA  6E1C               	movwf	_TEMP_MAP_ACCELERATOR+1,c
  1805  0003AC  0E00               	movlw	0
  1806  0003AE  6E1B               	movwf	_TEMP_MAP_ACCELERATOR,c
  1807                           
  1808                           ;init.c: 69: MAP_BATTERYSTATUS = 0;
  1809  0003B0  0E00               	movlw	0
  1810  0003B2  6E0C               	movwf	_MAP_BATTERYSTATUS+1,c
  1811  0003B4  0E00               	movlw	0
  1812  0003B6  6E0B               	movwf	_MAP_BATTERYSTATUS,c
  1813                           
  1814                           ;init.c: 70: MAP_VELOCITY = 0;
  1815  0003B8  0E00               	movlw	0
  1816  0003BA  6E18               	movwf	_MAP_VELOCITY+1,c
  1817  0003BC  0E00               	movlw	0
  1818  0003BE  6E17               	movwf	_MAP_VELOCITY,c
  1819                           
  1820                           ;init.c: 71: MAP_HEARTBEAT = 0;
  1821  0003C0  0E00               	movlw	0
  1822  0003C2  6E12               	movwf	_MAP_HEARTBEAT+1,c
  1823  0003C4  0E00               	movlw	0
  1824  0003C6  6E11               	movwf	_MAP_HEARTBEAT,c
  1825                           
  1826                           ; BSR set to: 15
  1827                           ;init.c: 76: T0CONbits.TMR0ON = 1;
  1828  0003C8  8ED5               	bsf	4053,7,c	;volatile
  1829                           
  1830                           ; BSR set to: 15
  1831                           ;init.c: 77: T0CONbits.T08BIT = 0;
  1832  0003CA  9CD5               	bcf	4053,6,c	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;init.c: 78: T0CONbits.T0CS = 0;
  1836  0003CC  9AD5               	bcf	4053,5,c	;volatile
  1837                           
  1838                           ; BSR set to: 15
  1839                           ;init.c: 80: T0CONbits.PSA = 0;
  1840  0003CE  96D5               	bcf	4053,3,c	;volatile
  1841                           
  1842                           ; BSR set to: 15
  1843                           ;init.c: 81: T0CONbits.T0PS = 7;
  1844  0003D0  80D5               	bsf	4053,0,c	;volatile
  1845  0003D2  82D5               	bsf	4053,1,c	;volatile
  1846  0003D4  84D5               	bsf	4053,2,c	;volatile
  1847                           
  1848                           ; BSR set to: 15
  1849  0003D6  0012               	return		;funcret
  1850  0003D8                     __end_of_InitDevice:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           intcon	equ	0xFF2
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _ECAN_Transmit *****************
  1862 ;; Defined at:
  1863 ;;		line 303 in file "ECAN.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  SIDH            1    wreg     unsigned char 
  1866 ;;  SIDL            1    0[BANK0 ] unsigned char 
  1867 ;;  DLC             1    1[BANK0 ] unsigned char 
  1868 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  1869 ;;  DATA1           1    3[BANK0 ] unsigned char 
  1870 ;;  DATA2           1    4[BANK0 ] unsigned char 
  1871 ;;  DATA3           1    5[BANK0 ] unsigned char 
  1872 ;;  DATA4           1    6[BANK0 ] unsigned char 
  1873 ;;  DATA5           1    7[BANK0 ] unsigned char 
  1874 ;;  DATA6           1    8[BANK0 ] unsigned char 
  1875 ;;  DATA7           1    9[BANK0 ] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  SIDH            1   14[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;		None               void
  1880 ;; Registers used:
  1881 ;;		wreg, status,2
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1887 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;Total ram usage:       11 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    1
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text15
  1902  000568                     __ptext15:
  1903                           	opt stack 0
  1904  000568                     _ECAN_Transmit:
  1905                           	opt stack 29
  1906                           
  1907                           ; BSR set to: 15
  1908                           ;incstack = 0
  1909                           ;ECAN_Transmit@SIDH stored from wreg
  1910  000568  6E4B               	movwf	ECAN_Transmit@SIDH,c
  1911                           
  1912                           ;ECAN.c: 315: TXB0EIDH = 0x00;
  1913  00056A  0E00               	movlw	0
  1914  00056C  010F               	movlb	15	; () banked
  1915  00056E  6F23               	movwf	35,b	;volatile
  1916                           
  1917                           ;ECAN.c: 316: TXB0EIDL = 0x00;
  1918  000570  0E00               	movlw	0
  1919  000572  010F               	movlb	15	; () banked
  1920  000574  6F24               	movwf	36,b	;volatile
  1921                           
  1922                           ; BSR set to: 15
  1923                           ;ECAN.c: 319: TXB0SIDH = SIDH;
  1924  000576  C04B  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  1925                           
  1926                           ; BSR set to: 15
  1927                           ;ECAN.c: 320: TXB0SIDL = SIDL;
  1928  00057A  C060  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;ECAN.c: 321: TXB0DLC = DLC;
  1932  00057E  C061  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  1933                           
  1934                           ; BSR set to: 15
  1935                           ;ECAN.c: 330: TXB0D0 = TRANSMIT_ID;
  1936  000582  C062  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  1937                           
  1938                           ; BSR set to: 15
  1939                           ;ECAN.c: 331: TXB0D1 = DATA1;
  1940  000586  C063  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  1941                           
  1942                           ; BSR set to: 15
  1943                           ;ECAN.c: 332: TXB0D2 = DATA2;
  1944  00058A  C064  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  1945                           
  1946                           ; BSR set to: 15
  1947                           ;ECAN.c: 333: TXB0D3 = DATA3;
  1948  00058E  C065  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  1949                           
  1950                           ; BSR set to: 15
  1951                           ;ECAN.c: 334: TXB0D4 = DATA4;
  1952  000592  C066  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  1953                           
  1954                           ; BSR set to: 15
  1955                           ;ECAN.c: 335: TXB0D5 = DATA5;
  1956  000596  C067  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  1957                           
  1958                           ; BSR set to: 15
  1959                           ;ECAN.c: 336: TXB0D6 = DATA6;
  1960  00059A  C068  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  1961                           
  1962                           ; BSR set to: 15
  1963                           ;ECAN.c: 337: TXB0D7 = DATA7;
  1964  00059E  C069  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  1965                           
  1966                           ; BSR set to: 15
  1967                           ;ECAN.c: 339: TXB0CONbits.TXREQ = 1;
  1968  0005A2  010F               	movlb	15	; () banked
  1969  0005A4  8720               	bsf	32,3,b	;volatile
  1970                           
  1971                           ; BSR set to: 15
  1972  0005A6  0012               	return		;funcret
  1973  0005A8                     __end_of_ECAN_Transmit:
  1974                           	opt stack 0
  1975                           tblptru	equ	0xFF8
  1976                           tblptrh	equ	0xFF7
  1977                           tblptrl	equ	0xFF6
  1978                           tablat	equ	0xFF5
  1979                           intcon	equ	0xFF2
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           status	equ	0xFD8
  1983                           
  1984 ;; *************** function _ECAN_Receive *****************
  1985 ;; Defined at:
  1986 ;;		line 222 in file "ECAN.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  RXMsgFlag       1   14[COMRAM] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      unsigned char 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2004 ;;Total ram usage:        1 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text16
  2015  0003D8                     __ptext16:
  2016                           	opt stack 0
  2017  0003D8                     _ECAN_Receive:
  2018                           	opt stack 29
  2019                           
  2020                           ;ECAN.c: 224: unsigned char RXMsgFlag;
  2021                           ;ECAN.c: 226: RXMsgFlag = 0x00;
  2022                           
  2023                           ; BSR set to: 15
  2024                           ;incstack = 0
  2025  0003D8  0E00               	movlw	0
  2026  0003DA  6E4B               	movwf	ECAN_Receive@RXMsgFlag,c
  2027                           
  2028                           ;ECAN.c: 228: if (RXB0CONbits.RXFUL)
  2029  0003DC  AE60               	btfss	3936,7,c	;volatile
  2030  0003DE  D01C               	goto	l430
  2031                           
  2032                           ;ECAN.c: 229: {
  2033                           ;ECAN.c: 230: temp_EIDH = RXB0EIDH;
  2034  0003E0  CF63 F039          	movff	3939,_temp_EIDH	;volatile
  2035                           
  2036                           ;ECAN.c: 231: temp_EIDL = RXB0EIDL;
  2037  0003E4  CF64 F03A          	movff	3940,_temp_EIDL	;volatile
  2038                           
  2039                           ;ECAN.c: 232: temp_SIDH = RXB0SIDH;
  2040  0003E8  CF61 F03B          	movff	3937,_temp_SIDH	;volatile
  2041                           
  2042                           ;ECAN.c: 233: temp_SIDL = RXB0SIDL;
  2043  0003EC  CF62 F03C          	movff	3938,_temp_SIDL	;volatile
  2044                           
  2045                           ;ECAN.c: 234: temp_DLC = RXB0DLC;
  2046  0003F0  CF65 F038          	movff	3941,_temp_DLC	;volatile
  2047                           
  2048                           ;ECAN.c: 235: BITDATA = RXB0D0;
  2049  0003F4  CF66 F030          	movff	3942,_BITDATA	;volatile
  2050                           
  2051                           ;ECAN.c: 236: ACCELERATOR = RXB0D1;
  2052  0003F8  CF67 F02F          	movff	3943,_ACCELERATOR	;volatile
  2053                           
  2054                           ;ECAN.c: 237: temp_D2 = RXB0D2;
  2055  0003FC  CF68 F032          	movff	3944,_temp_D2	;volatile
  2056                           
  2057                           ;ECAN.c: 238: temp_D3 = RXB0D3;
  2058  000400  CF69 F033          	movff	3945,_temp_D3	;volatile
  2059                           
  2060                           ;ECAN.c: 239: temp_D4 = RXB0D4;
  2061  000404  CF6A F034          	movff	3946,_temp_D4	;volatile
  2062                           
  2063                           ;ECAN.c: 240: temp_D5 = RXB0D5;
  2064  000408  CF6B F035          	movff	3947,_temp_D5	;volatile
  2065                           
  2066                           ;ECAN.c: 241: temp_D6 = RXB0D6;
  2067  00040C  CF6C F036          	movff	3948,_temp_D6	;volatile
  2068                           
  2069                           ;ECAN.c: 242: temp_D7 = RXB0D7;
  2070  000410  CF6D F037          	movff	3949,_temp_D7	;volatile
  2071                           
  2072                           ;ECAN.c: 243: RXB0CONbits.RXFUL = 0;
  2073  000414  9E60               	bcf	3936,7,c	;volatile
  2074  000416  D03F               	goto	l1446
  2075  000418                     l430:
  2076                           
  2077                           ;ECAN.c: 246: else if (RXB1CONbits.RXFUL)
  2078  000418  010F               	movlb	15	; () banked
  2079  00041A  AF30               	btfss	48,7,b	;volatile
  2080  00041C  D01D               	goto	l432
  2081                           
  2082                           ; BSR set to: 15
  2083                           ;ECAN.c: 247: {
  2084                           ;ECAN.c: 248: temp_EIDH = RXB1EIDH;
  2085  00041E  CF33 F039          	movff	3891,_temp_EIDH	;volatile
  2086                           
  2087                           ;ECAN.c: 249: temp_EIDL = RXB1EIDL;
  2088  000422  CF34 F03A          	movff	3892,_temp_EIDL	;volatile
  2089                           
  2090                           ;ECAN.c: 250: temp_SIDH = RXB1SIDH;
  2091  000426  CF31 F03B          	movff	3889,_temp_SIDH	;volatile
  2092                           
  2093                           ;ECAN.c: 251: temp_SIDL = RXB1SIDL;
  2094  00042A  CF32 F03C          	movff	3890,_temp_SIDL	;volatile
  2095                           
  2096                           ;ECAN.c: 252: temp_DLC = RXB1DLC;
  2097  00042E  CF35 F038          	movff	3893,_temp_DLC	;volatile
  2098                           
  2099                           ;ECAN.c: 253: BITDATA = RXB1D0;
  2100  000432  CF36 F030          	movff	3894,_BITDATA	;volatile
  2101                           
  2102                           ;ECAN.c: 254: ACCELERATOR = RXB1D1;
  2103  000436  CF37 F02F          	movff	3895,_ACCELERATOR	;volatile
  2104                           
  2105                           ;ECAN.c: 255: temp_D2 = RXB1D2;
  2106  00043A  CF38 F032          	movff	3896,_temp_D2	;volatile
  2107                           
  2108                           ;ECAN.c: 256: temp_D3 = RXB1D3;
  2109  00043E  CF39 F033          	movff	3897,_temp_D3	;volatile
  2110                           
  2111                           ;ECAN.c: 257: temp_D4 = RXB1D4;
  2112  000442  CF3A F034          	movff	3898,_temp_D4	;volatile
  2113                           
  2114                           ;ECAN.c: 258: temp_D5 = RXB1D5;
  2115  000446  CF3B F035          	movff	3899,_temp_D5	;volatile
  2116                           
  2117                           ;ECAN.c: 259: temp_D6 = RXB1D6;
  2118  00044A  CF3C F036          	movff	3900,_temp_D6	;volatile
  2119                           
  2120                           ;ECAN.c: 260: temp_D7 = RXB1D7;
  2121  00044E  CF3D F037          	movff	3901,_temp_D7	;volatile
  2122                           
  2123                           ;ECAN.c: 261: RXB1CONbits.RXFUL = 0;
  2124  000452  010F               	movlb	15	; () banked
  2125  000454  9F30               	bcf	48,7,b	;volatile
  2126  000456  D01F               	goto	l1446
  2127  000458                     l432:
  2128                           
  2129                           ; BSR set to: 15
  2130                           ;ECAN.c: 264: else if (B0CONbits.RXFUL)
  2131  000458  010E               	movlb	14	; () banked
  2132  00045A  AF80               	btfss	128,7,b	;volatile
  2133  00045C  D01E               	goto	l1448
  2134                           
  2135                           ; BSR set to: 14
  2136                           ;ECAN.c: 265: {
  2137                           ;ECAN.c: 266: temp_EIDH = B0EIDH;
  2138  00045E  CE83 F039          	movff	3715,_temp_EIDH	;volatile
  2139                           
  2140                           ;ECAN.c: 267: temp_EIDL = B0EIDL;
  2141  000462  CE84 F03A          	movff	3716,_temp_EIDL	;volatile
  2142                           
  2143                           ;ECAN.c: 268: temp_SIDH = B0SIDH;
  2144  000466  CE81 F03B          	movff	3713,_temp_SIDH	;volatile
  2145                           
  2146                           ;ECAN.c: 269: temp_SIDL = B0SIDL;
  2147  00046A  CE82 F03C          	movff	3714,_temp_SIDL	;volatile
  2148                           
  2149                           ;ECAN.c: 270: temp_DLC = B0DLC;
  2150  00046E  CE85 F038          	movff	3717,_temp_DLC	;volatile
  2151                           
  2152                           ;ECAN.c: 271: BITDATA = B0D0;
  2153  000472  CE86 F030          	movff	3718,_BITDATA	;volatile
  2154                           
  2155                           ;ECAN.c: 272: ACCELERATOR = B0D1;
  2156  000476  CE87 F02F          	movff	3719,_ACCELERATOR	;volatile
  2157                           
  2158                           ;ECAN.c: 273: temp_D2 = B0D2;
  2159  00047A  CE88 F032          	movff	3720,_temp_D2	;volatile
  2160                           
  2161                           ;ECAN.c: 274: temp_D3 = B0D3;
  2162  00047E  CE89 F033          	movff	3721,_temp_D3	;volatile
  2163                           
  2164                           ;ECAN.c: 275: temp_D4 = B0D4;
  2165  000482  CE8A F034          	movff	3722,_temp_D4	;volatile
  2166                           
  2167                           ;ECAN.c: 276: temp_D5 = B0D5;
  2168  000486  CE8B F035          	movff	3723,_temp_D5	;volatile
  2169                           
  2170                           ;ECAN.c: 277: temp_D6 = B0D6;
  2171  00048A  CE8C F036          	movff	3724,_temp_D6	;volatile
  2172                           
  2173                           ;ECAN.c: 278: temp_D7 = B0D7;
  2174  00048E  CE8D F037          	movff	3725,_temp_D7	;volatile
  2175                           
  2176                           ;ECAN.c: 280: B0CONbits.RXFUL = 0;
  2177  000492  010E               	movlb	14	; () banked
  2178  000494  9F80               	bcf	128,7,b	;volatile
  2179  000496                     l1446:
  2180                           
  2181                           ; BSR set to: 14
  2182                           ;ECAN.c: 281: RXMsgFlag = 0x01;
  2183  000496  0E01               	movlw	1
  2184  000498  6E4B               	movwf	ECAN_Receive@RXMsgFlag,c
  2185  00049A                     l1448:
  2186                           
  2187                           ;ECAN.c: 282: }
  2188                           ;ECAN.c: 284: if (RXMsgFlag == 0x01)
  2189  00049A  044B               	decf	ECAN_Receive@RXMsgFlag,w,c
  2190  00049C  A4D8               	btfss	status,2,c
  2191  00049E  D005               	goto	l1460
  2192                           
  2193                           ;ECAN.c: 285: {
  2194                           ;ECAN.c: 286: RXMsgFlag = 0x00;
  2195  0004A0  0E00               	movlw	0
  2196  0004A2  6E4B               	movwf	ECAN_Receive@RXMsgFlag,c
  2197                           
  2198                           ;ECAN.c: 287: PIR5bits.RXB1IF = 0;
  2199  0004A4  9277               	bcf	3959,1,c	;volatile
  2200                           
  2201                           ;ECAN.c: 288: return 1;
  2202  0004A6  0E01               	movlw	1
  2203                           
  2204                           ;ECAN.c: 289: }
  2205  0004A8  0012               	return	
  2206  0004AA                     l1460:
  2207                           
  2208                           ;ECAN.c: 290: else
  2209                           ;ECAN.c: 291: {
  2210                           ;ECAN.c: 292: return 0;
  2211  0004AA  0E00               	movlw	0
  2212  0004AC  0012               	return	
  2213  0004AE                     __end_of_ECAN_Receive:
  2214                           	opt stack 0
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           intcon	equ	0xFF2
  2220                           postinc0	equ	0xFEE
  2221                           wreg	equ	0xFE8
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function _CANSetup *****************
  2225 ;; Defined at:
  2226 ;;		line 111 in file "ECAN.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;		None               void
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text17
  2255  0000AA                     __ptext17:
  2256                           	opt stack 0
  2257  0000AA                     _CANSetup:
  2258                           	opt stack 29
  2259                           
  2260                           ;ECAN.c: 114: CANCON = 0x80;
  2261                           
  2262                           ;incstack = 0
  2263  0000AA  0E80               	movlw	128
  2264  0000AC  6E6F               	movwf	3951,c	;volatile
  2265  0000AE                     l1386:
  2266  0000AE  386E               	swapf	3950,w,c	;volatile
  2267  0000B0  32E8               	rrcf	wreg,f,c
  2268  0000B2  0B07               	andlw	7
  2269  0000B4  0A04               	xorlw	4
  2270  0000B6  A4D8               	btfss	status,2,c
  2271  0000B8  D7FA               	goto	l1386
  2272                           
  2273                           ;ECAN.c: 118: ECANCON = 0x40;
  2274  0000BA  0E40               	movlw	64
  2275  0000BC  6E72               	movwf	3954,c	;volatile
  2276                           
  2277                           ;ECAN.c: 122: BRGCON1 = 0x81;
  2278  0000BE  0E81               	movlw	129
  2279  0000C0  010E               	movlb	14	; () banked
  2280  0000C2  6F43               	movwf	67,b	;volatile
  2281                           
  2282                           ;ECAN.c: 123: BRGCON2 = 0xB8;
  2283  0000C4  0EB8               	movlw	184
  2284  0000C6  010E               	movlb	14	; () banked
  2285  0000C8  6F44               	movwf	68,b	;volatile
  2286                           
  2287                           ;ECAN.c: 124: BRGCON3 = 0x05;
  2288  0000CA  0E05               	movlw	5
  2289  0000CC  010E               	movlb	14	; () banked
  2290  0000CE  6F45               	movwf	69,b	;volatile
  2291                           
  2292                           ;ECAN.c: 129: BSEL0 = 0xF8;
  2293  0000D0  0EF8               	movlw	248
  2294  0000D2  010E               	movlb	14	; () banked
  2295  0000D4  6F7D               	movwf	125,b	;volatile
  2296                           
  2297                           ;ECAN.c: 133: RXM0EIDH = 0x00;
  2298  0000D6  0E00               	movlw	0
  2299  0000D8  010E               	movlb	14	; () banked
  2300  0000DA  6FFA               	movwf	250,b	;volatile
  2301                           
  2302                           ;ECAN.c: 134: RXM0EIDL = 0x00;
  2303  0000DC  0E00               	movlw	0
  2304  0000DE  010E               	movlb	14	; () banked
  2305  0000E0  6FFB               	movwf	251,b	;volatile
  2306                           
  2307                           ; BSR set to: 14
  2308                           ;ECAN.c: 135: RXM0SIDH = 0xFF;
  2309  0000E2  010E               	movlb	14	; () banked
  2310  0000E4  69F8               	setf	248,b	;volatile
  2311                           
  2312                           ;ECAN.c: 136: RXM0SIDL = 0xE0;
  2313  0000E6  0EE0               	movlw	224
  2314  0000E8  010E               	movlb	14	; () banked
  2315  0000EA  6FF9               	movwf	249,b	;volatile
  2316                           
  2317                           ;ECAN.c: 139: RXM1EIDH = 0x00;
  2318  0000EC  0E00               	movlw	0
  2319  0000EE  010E               	movlb	14	; () banked
  2320  0000F0  6FFE               	movwf	254,b	;volatile
  2321                           
  2322                           ;ECAN.c: 140: RXM1EIDL = 0x00;
  2323  0000F2  0E00               	movlw	0
  2324  0000F4  010E               	movlb	14	; () banked
  2325  0000F6  6FFF               	movwf	255,b	;volatile
  2326                           
  2327                           ; BSR set to: 14
  2328                           ;ECAN.c: 141: RXM1SIDH = 0xFF;
  2329  0000F8  010E               	movlb	14	; () banked
  2330  0000FA  69FC               	setf	252,b	;volatile
  2331                           
  2332                           ;ECAN.c: 142: RXM1SIDL = 0xE0;
  2333  0000FC  0EE0               	movlw	224
  2334  0000FE  010E               	movlb	14	; () banked
  2335  000100  6FFD               	movwf	253,b	;volatile
  2336                           
  2337                           ;ECAN.c: 146: RXFCON0 = 0x07;
  2338  000102  0E07               	movlw	7
  2339  000104  010E               	movlb	14	; () banked
  2340  000106  6F46               	movwf	70,b	;volatile
  2341                           
  2342                           ;ECAN.c: 147: RXFCON1 = 0x00;
  2343  000108  0E00               	movlw	0
  2344  00010A  010E               	movlb	14	; () banked
  2345  00010C  6F47               	movwf	71,b	;volatile
  2346                           
  2347                           ;ECAN.c: 150: MSEL0 = 0xC0;
  2348  00010E  0EC0               	movlw	192
  2349  000110  010E               	movlb	14	; () banked
  2350  000112  6F79               	movwf	121,b	;volatile
  2351                           
  2352                           ; BSR set to: 14
  2353                           ;ECAN.c: 151: MSEL1 = 0xFF;
  2354  000114  010E               	movlb	14	; () banked
  2355  000116  697A               	setf	122,b	;volatile
  2356                           
  2357                           ; BSR set to: 14
  2358                           ;ECAN.c: 152: MSEL2 = 0xFF;
  2359  000118  010E               	movlb	14	; () banked
  2360  00011A  697B               	setf	123,b	;volatile
  2361                           
  2362                           ; BSR set to: 14
  2363                           ;ECAN.c: 153: MSEL3 = 0xFF;
  2364  00011C  010E               	movlb	14	; () banked
  2365  00011E  697C               	setf	124,b	;volatile
  2366                           
  2367                           ;ECAN.c: 157: RXFBCON0 = 0x10;
  2368  000120  0E10               	movlw	16
  2369  000122  010E               	movlb	14	; () banked
  2370  000124  6F71               	movwf	113,b	;volatile
  2371                           
  2372                           ;ECAN.c: 158: RXFBCON1 = 0xF2;
  2373  000126  0EF2               	movlw	242
  2374  000128  010E               	movlb	14	; () banked
  2375  00012A  6F72               	movwf	114,b	;volatile
  2376                           
  2377                           ; BSR set to: 14
  2378                           ;ECAN.c: 160: RXFBCON2 = 0xFF;
  2379  00012C  010E               	movlb	14	; () banked
  2380  00012E  6973               	setf	115,b	;volatile
  2381                           
  2382                           ; BSR set to: 14
  2383                           ;ECAN.c: 161: RXFBCON3 = 0xFF;
  2384  000130  010E               	movlb	14	; () banked
  2385  000132  6974               	setf	116,b	;volatile
  2386                           
  2387                           ; BSR set to: 14
  2388                           ;ECAN.c: 162: RXFBCON4 = 0xFF;
  2389  000134  010E               	movlb	14	; () banked
  2390  000136  6975               	setf	117,b	;volatile
  2391                           
  2392                           ; BSR set to: 14
  2393                           ;ECAN.c: 163: RXFBCON5 = 0xFF;
  2394  000138  010E               	movlb	14	; () banked
  2395  00013A  6976               	setf	118,b	;volatile
  2396                           
  2397                           ; BSR set to: 14
  2398                           ;ECAN.c: 164: RXFBCON6 = 0xFF;
  2399  00013C  010E               	movlb	14	; () banked
  2400  00013E  6977               	setf	119,b	;volatile
  2401                           
  2402                           ; BSR set to: 14
  2403                           ;ECAN.c: 165: RXFBCON7 = 0xFF;
  2404  000140  010E               	movlb	14	; () banked
  2405  000142  6978               	setf	120,b	;volatile
  2406                           
  2407                           ;ECAN.c: 171: RXF0EIDH = 0x00;
  2408  000144  0E00               	movlw	0
  2409  000146  010E               	movlb	14	; () banked
  2410  000148  6FE2               	movwf	226,b	;volatile
  2411                           
  2412                           ;ECAN.c: 172: RXF0EIDL = 0x00;
  2413  00014A  0E00               	movlw	0
  2414  00014C  010E               	movlb	14	; () banked
  2415  00014E  6FE3               	movwf	227,b	;volatile
  2416                           
  2417                           ;ECAN.c: 173: RXF0SIDH = 0x32;
  2418  000150  0E32               	movlw	50
  2419  000152  010E               	movlb	14	; () banked
  2420  000154  6FE0               	movwf	224,b	;volatile
  2421                           
  2422                           ;ECAN.c: 174: RXF0SIDL = 0xC0;
  2423  000156  0EC0               	movlw	192
  2424  000158  010E               	movlb	14	; () banked
  2425  00015A  6FE1               	movwf	225,b	;volatile
  2426                           
  2427                           ;ECAN.c: 175: RXF1EIDH = 0x00;
  2428  00015C  0E00               	movlw	0
  2429  00015E  010E               	movlb	14	; () banked
  2430  000160  6FE6               	movwf	230,b	;volatile
  2431                           
  2432                           ;ECAN.c: 176: RXF1EIDL = 0x00;
  2433  000162  0E00               	movlw	0
  2434  000164  010E               	movlb	14	; () banked
  2435  000166  6FE7               	movwf	231,b	;volatile
  2436                           
  2437                           ;ECAN.c: 177: RXF1SIDH = 0x33;
  2438  000168  0E33               	movlw	51
  2439  00016A  010E               	movlb	14	; () banked
  2440  00016C  6FE4               	movwf	228,b	;volatile
  2441                           
  2442                           ;ECAN.c: 178: RXF1SIDL = 0x40;
  2443  00016E  0E40               	movlw	64
  2444  000170  010E               	movlb	14	; () banked
  2445  000172  6FE5               	movwf	229,b	;volatile
  2446                           
  2447                           ;ECAN.c: 179: RXF2EIDH = 0x00;
  2448  000174  0E00               	movlw	0
  2449  000176  010E               	movlb	14	; () banked
  2450  000178  6FEA               	movwf	234,b	;volatile
  2451                           
  2452                           ;ECAN.c: 180: RXF2EIDL = 0x00;
  2453  00017A  0E00               	movlw	0
  2454  00017C  010E               	movlb	14	; () banked
  2455  00017E  6FEB               	movwf	235,b	;volatile
  2456                           
  2457                           ;ECAN.c: 181: RXF2SIDH = 0x33;
  2458  000180  0E33               	movlw	51
  2459  000182  010E               	movlb	14	; () banked
  2460  000184  6FE8               	movwf	232,b	;volatile
  2461                           
  2462                           ;ECAN.c: 182: RXF2SIDL = 0xC0;
  2463  000186  0EC0               	movlw	192
  2464  000188  010E               	movlb	14	; () banked
  2465  00018A  6FE9               	movwf	233,b	;volatile
  2466                           
  2467                           ;ECAN.c: 185: if (0 ==1)
  2468  00018C  D00E               	goto	l1420
  2469  00018E                     l1414:
  2470  00018E  386E               	swapf	3950,w,c	;volatile
  2471  000190  32E8               	rrcf	wreg,f,c
  2472  000192  0B07               	andlw	7
  2473  000194  0A40               	xorlw	64
  2474  000196  A4D8               	btfss	status,2,c
  2475  000198  D017               	goto	l1428
  2476  00019A  D7F9               	goto	l1414
  2477  00019C                     l1418:
  2478  00019C  386E               	swapf	3950,w,c	;volatile
  2479  00019E  32E8               	rrcf	wreg,f,c
  2480  0001A0  0B07               	andlw	7
  2481  0001A2  0A60               	xorlw	96
  2482  0001A4  A4D8               	btfss	status,2,c
  2483  0001A6  D010               	goto	l1428
  2484  0001A8  D7F9               	goto	l1418
  2485  0001AA                     l1420:
  2486                           
  2487                           ;ECAN.c: 196: CANCON = 0x00;
  2488  0001AA  0E00               	movlw	0
  2489  0001AC  6E6F               	movwf	3951,c	;volatile
  2490  0001AE                     l1422:
  2491  0001AE  386E               	swapf	3950,w,c	;volatile
  2492  0001B0  32E8               	rrcf	wreg,f,c
  2493  0001B2  0B07               	andlw	7
  2494  0001B4  0900               	iorlw	0
  2495  0001B6  A4D8               	btfss	status,2,c
  2496  0001B8  D007               	goto	l1428
  2497  0001BA  D7F9               	goto	l1422
  2498  0001BC                     l1426:
  2499  0001BC  386E               	swapf	3950,w,c	;volatile
  2500  0001BE  32E8               	rrcf	wreg,f,c
  2501  0001C0  0B07               	andlw	7
  2502  0001C2  0A40               	xorlw	64
  2503  0001C4  B4D8               	btfsc	status,2,c
  2504  0001C6  D7FA               	goto	l1426
  2505  0001C8                     l1428:
  2506                           
  2507                           ;ECAN.c: 204: }
  2508                           ;ECAN.c: 207: RXB0CON = 0x00;
  2509  0001C8  0E00               	movlw	0
  2510  0001CA  6E60               	movwf	3936,c	;volatile
  2511                           
  2512                           ;ECAN.c: 208: RXB1CON = 0x00;
  2513  0001CC  0E00               	movlw	0
  2514  0001CE  010F               	movlb	15	; () banked
  2515  0001D0  6F30               	movwf	48,b	;volatile
  2516                           
  2517                           ; BSR set to: 15
  2518  0001D2  0012               	return		;funcret
  2519  0001D4                     __end_of_CANSetup:
  2520                           	opt stack 0
  2521                           tblptru	equ	0xFF8
  2522                           tblptrh	equ	0xFF7
  2523                           tblptrl	equ	0xFF6
  2524                           tablat	equ	0xFF5
  2525                           intcon	equ	0xFF2
  2526                           postinc0	equ	0xFEE
  2527                           wreg	equ	0xFE8
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _ISR *****************
  2531 ;; Defined at:
  2532 ;;		line 71 in file "main.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;		None               void
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;Total ram usage:       14 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		Interrupt level 2
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	intcode
  2560  000008                     __pintcode:
  2561                           	opt stack 0
  2562  000008                     _ISR:
  2563                           	opt stack 27
  2564                           
  2565                           ; BSR set to: 15
  2566                           ;incstack = 0
  2567  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2568  00000A  CFFA F03D          	movff	pclath,??_ISR
  2569  00000E  CFFB F03E          	movff	pclatu,??_ISR+1
  2570  000012  CFE9 F03F          	movff	fsr0l,??_ISR+2
  2571  000016  CFEA F040          	movff	fsr0h,??_ISR+3
  2572  00001A  CFE1 F041          	movff	fsr1l,??_ISR+4
  2573  00001E  CFE2 F042          	movff	fsr1h,??_ISR+5
  2574  000022  CFD9 F043          	movff	fsr2l,??_ISR+6
  2575  000026  CFDA F044          	movff	fsr2h,??_ISR+7
  2576  00002A  CFF3 F045          	movff	prodl,??_ISR+8
  2577  00002E  CFF4 F046          	movff	prodh,??_ISR+9
  2578  000032  CFF6 F047          	movff	tblptrl,??_ISR+10
  2579  000036  CFF7 F048          	movff	tblptrh,??_ISR+11
  2580  00003A  CFF8 F049          	movff	tblptru,??_ISR+12
  2581  00003E  CFF5 F04A          	movff	tablat,??_ISR+13
  2582                           
  2583                           ;main.c: 73: interruptCounter++;
  2584  000042  0E01               	movlw	1
  2585  000044  2601               	addwf	_interruptCounter,f,c
  2586  000046  0E00               	movlw	0
  2587  000048  2202               	addwfc	_interruptCounter+1,f,c
  2588  00004A  2203               	addwfc	_interruptCounter+2,f,c
  2589  00004C  2204               	addwfc	_interruptCounter+3,f,c
  2590                           
  2591                           ;main.c: 75: if(IRXIF){
  2592  00004E  AE77               	btfss	3959,7,c	;volatile
  2593  000050  D003               	goto	i2l122
  2594                           
  2595                           ;main.c: 76: if(TXB0CONbits.TXERR){
  2596  000052  010F               	movlb	15	; () banked
  2597  000054  B920               	btfsc	32,4,b	;volatile
  2598                           
  2599                           ; BSR set to: 15
  2600                           ;main.c: 77: LATBbits.LATB1 = 1;
  2601  000056  828A               	bsf	3978,1,c	;volatile
  2602  000058                     i2l122:
  2603                           
  2604                           ;main.c: 79: }
  2605                           ;main.c: 80: }
  2606                           ;main.c: 85: if(TMR0IF == 1){
  2607  000058  A4F2               	btfss	intcon,2,c	;volatile
  2608  00005A  D007               	goto	i2l125
  2609                           
  2610                           ;main.c: 86: interruptCounter++;
  2611  00005C  0E01               	movlw	1
  2612  00005E  2601               	addwf	_interruptCounter,f,c
  2613  000060  0E00               	movlw	0
  2614  000062  2202               	addwfc	_interruptCounter+1,f,c
  2615  000064  2203               	addwfc	_interruptCounter+2,f,c
  2616  000066  2204               	addwfc	_interruptCounter+3,f,c
  2617                           
  2618                           ;main.c: 87: TMR0IF = 0;
  2619  000068  94F2               	bcf	intcon,2,c	;volatile
  2620  00006A                     i2l125:
  2621  00006A  C04A  FFF5         	movff	??_ISR+13,tablat
  2622  00006E  C049  FFF8         	movff	??_ISR+12,tblptru
  2623  000072  C048  FFF7         	movff	??_ISR+11,tblptrh
  2624  000076  C047  FFF6         	movff	??_ISR+10,tblptrl
  2625  00007A  C046  FFF4         	movff	??_ISR+9,prodh
  2626  00007E  C045  FFF3         	movff	??_ISR+8,prodl
  2627  000082  C044  FFDA         	movff	??_ISR+7,fsr2h
  2628  000086  C043  FFD9         	movff	??_ISR+6,fsr2l
  2629  00008A  C042  FFE2         	movff	??_ISR+5,fsr1h
  2630  00008E  C041  FFE1         	movff	??_ISR+4,fsr1l
  2631  000092  C040  FFEA         	movff	??_ISR+3,fsr0h
  2632  000096  C03F  FFE9         	movff	??_ISR+2,fsr0l
  2633  00009A  C03E  FFFB         	movff	??_ISR+1,pclatu
  2634  00009E  C03D  FFFA         	movff	??_ISR,pclath
  2635  0000A2  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2636  0000A4  0011               	retfie		f
  2637  0000A6                     __end_of_ISR:
  2638                           	opt stack 0
  2639  0000                     pclatu	equ	0xFFB
  2640                           pclath	equ	0xFFA
  2641                           tblptru	equ	0xFF8
  2642                           tblptrh	equ	0xFF7
  2643                           tblptrl	equ	0xFF6
  2644                           tablat	equ	0xFF5
  2645                           prodh	equ	0xFF4
  2646                           prodl	equ	0xFF3
  2647                           intcon	equ	0xFF2
  2648                           postinc0	equ	0xFEE
  2649                           fsr0h	equ	0xFEA
  2650                           fsr0l	equ	0xFE9
  2651                           wreg	equ	0xFE8
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           pclatu	equ	0xFFB
  2658                           pclath	equ	0xFFA
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           prodh	equ	0xFF4
  2664                           prodl	equ	0xFF3
  2665                           intcon	equ	0xFF2
  2666                           postinc0	equ	0xFEE
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           fsr2h	equ	0xFDA
  2673                           fsr2l	equ	0xFD9
  2674                           status	equ	0xFD8
  2675                           
  2676                           	psect	rparam
  2677  0000                     pclatu	equ	0xFFB
  2678                           pclath	equ	0xFFA
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           prodh	equ	0xFF4
  2684                           prodl	equ	0xFF3
  2685                           intcon	equ	0xFF2
  2686                           postinc0	equ	0xFEE
  2687                           fsr0h	equ	0xFEA
  2688                           fsr0l	equ	0xFE9
  2689                           wreg	equ	0xFE8
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           fsr2h	equ	0xFDA
  2693                           fsr2l	equ	0xFD9
  2694                           status	equ	0xFD8
  2695                           
  2696                           	psect	temp
  2697  000051                     btemp:
  2698                           	opt stack 0
  2699  000051                     	ds	1
  2700  0000                     int$flags	set	btemp
  2701                           pclatu	equ	0xFFB
  2702                           pclath	equ	0xFFA
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           fsr0h	equ	0xFEA
  2712                           fsr0l	equ	0xFE9
  2713                           wreg	equ	0xFE8
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         60
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      80
    BANK0           160     10      10
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_unZipCAN
    _readAnalog->_Delay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ECAN_Transmit
    _updateInputs->_readAnalog

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1112
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                         _InitDevice
                   _checkAccelerator
                     _checkBacklight
                         _checkBrake
                     _checkDirection
                       _checkH_blink
                     _checkSafetyPin
                       _checkV_blink
                             _danger
                    _setup_Interrupt
                           _unZipCAN
                       _updateInputs
 ---------------------------------------------------------------------------------
 (1) _updateInputs                                         0     0      0     108
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           2     0      2     108
                                              0 BANK0      2     0      2
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     0      2     108
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _unZipCAN                                             3     3      0       0
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _danger                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkV_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSafetyPin                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkH_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDirection                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBrake                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBacklight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkAccelerator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10     881
                                             14 COMRAM     1     1      0
                                              0 BANK0     10     0     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _InitDevice
   _checkAccelerator
   _checkBacklight
   _checkBrake
   _checkDirection
   _checkH_blink
   _checkSafetyPin
   _checkV_blink
   _danger
   _setup_Interrupt
   _unZipCAN
   _updateInputs
     _readAnalog
       _Delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A       A       5        6.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      50       1       85.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A       6        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 17 13:11:32 2015

            _MAP_BACKLIGHT 0009       __end_of_checkV_blink 061C            _MAP_ACCELERATOR 0007  
          ?_checkBacklight 003D                __CFG_BORV$3 000000     __end_of_checkSafetyPin 0694  
        ?_checkAccelerator 003D               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                        l113 04DE  
                      l430 0418                        l432 0458                        l524 06EE  
                      l645 05EA               __CFG_CPB$OFF 000000                        u200 062A  
                      u220 06A2                        u125 0272                        u150 06BA  
                      u230 068A                        u215 063A                        u135 029E  
                      u240 066E                        u160 064C                        u216 063C  
                      u145 02CA                        u180 0608                        u175 065C  
                      u176 065E               __CFG_CPD$OFF 000000                        u195 0618  
                      u196 061A                        _ISR 0008         ??_checkAccelerator 004B  
                      wreg 000FE8                       ?_ISR 003D              _MAP_HEARTBEAT 0011  
                     _B0D0 000E86                       _B0D1 000E87                       _B0D2 000E88  
                     _B0D3 000E89                       _B0D4 000E8A                       _B0D5 000E8B  
                     _B0D6 000E8C                       _B0D7 000E8D              _MAP_DIRECTION 000F  
                     l1420 01AA                       l1422 01AE                       l1414 018E  
                     l1426 01BC                       l1418 019C                       l1428 01C8  
                     l1460 04AA                       l1446 0496                       l1448 049A  
                     l1386 00AE                       l1738 0506                       l1588 06C4  
          ?_checkDirection 003D                       _LATA 000F89                       _LATB 000F8A  
                     _LATC 000F8B                       _main 04AE                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0051  
                     pclat 000FFA                       prodh 000FF4                       prodl 000FF3  
                     start 00A6              __CFG_IESO$OFF 000000           __end_of_CANSetup 01D4  
            __CFG_MCLRE$ON 000000               ___param_bank 000010                      ??_ISR 003D  
            _MAP_SAFETYPIN 0015            ?_checkSafetyPin 003D                      _B0DLC 000E85  
                    ?_main 003D                      _BSEL0 000E7D                      i2l122 0058  
                    i2l125 006A                      _MSEL0 000E79                      _MSEL1 000E7A  
                    _MSEL2 000E7B                      _MSEL3 000E7C                      _IRXIF 007BBF  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _Delay 06C4              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000                      _count 0050  
                    tablat 000FF5                      status 000FD8                 _InitDevice 02DE  
    __size_of_ECAN_Receive 00D6            __initialization 05A8               __end_of_main 0568  
                   ??_main 004E              __activetblptr 000000             __CFG_RETEN$OFF 000000  
                   ?_Delay 004B                     _B0EIDH 000E83                     _B0EIDL 000E84  
         ECAN_Transmit@DLC 0061                     _B0SIDH 000E81                     _B0SIDL 000E82  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _CANCON 000F6F                     _ADRESH 000FC4                     _ANCON0 000F5D  
                   _ANCON1 000F5C      __size_of_checkH_blink 0022               _ECAN_Receive 03D8  
           _TEMP_MAP_BRAKE 001F            __CFG_BBSIZ$BB2K 000000   __size_of_setup_Interrupt 000A  
                   _RXB0D0 000F66                     _RXB0D1 000F67                     _RXB0D2 000F68  
                   _RXB0D3 000F69                     _RXB0D4 000F6A                     _RXB1D0 000F36  
                   _RXB0D5 000F6B                     _RXB1D1 000F37                     _RXB0D6 000F6C  
                   _RXB1D2 000F38                     _RXB0D7 000F6D                     _RXB1D3 000F39  
                   _RXB1D4 000F3A                     _RXB1D5 000F3B                     _RXB1D6 000F3C  
                   _RXB1D7 000F3D                     _TMR0IF 007F92                     _TXB0D0 000F26  
                   _TXB0D1 000F27                     _TXB0D2 000F28                     _TXB0D3 000F29  
                   _TXB0D4 000F2A                     _TXB0D5 000F2B                     _TXB0D6 000F2C  
                   _TXB0D7 000F2D      __size_of_checkV_blink 0022             __CFG_XINST$OFF 000000  
           __CFG_STVREN$ON 000000                     _danger 06EE           _heartBeatCounter 002B  
                   clear_0 05AE               _checkH_blink 061C           __end_of_unZipCAN 02DE  
             __pdataCOMRAM 004E                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ?_CANSetup 003D               _checkV_blink 05FA  
               __accesstop 0060    __end_of__initialization 05CC   ECAN_Transmit@TRANSMIT_ID 0062  
     _TEMP_MAP_ACCELERATOR 001B              ___rparam_used 000001           ??_checkBacklight 004B  
              ?_InitDevice 003D              __end_of_Delay 06D6             __pcstackCOMRAM 003D  
   __size_of_ECAN_Transmit 0040                    ??_Delay 004D           ??_checkDirection 004B  
               ??_CANSetup 004B                 _checkBrake 06AC  __size_of_checkAccelerator 001C  
          __CFG_PLLCFG$OFF 000000                 __pnvCOMRAM 0050          ??_setup_Interrupt 004B  
         ??_checkSafetyPin 004B          ECAN_Transmit@SIDH 004B          ECAN_Transmit@SIDL 0060  
                  ?_danger 003D                  _B0CONbits 000E80                    _ECANCON 000F72  
                  _BITDATA 0030                    _BRGCON1 000E43                    _BRGCON2 000E44  
                  _BRGCON3 000E45           __CFG_CANMX$PORTB 000000        __size_of_InitDevice 00FA  
         _BATTERISTATUS_ID 004E                    _RXB0DLC 000F65                    _RXB1DLC 000F35  
                  _RXB0CON 000F60                    _RXB1CON 000F30                    _TXB0DLC 000F25  
                  _RXFCON0 000E46                    _RXFCON1 000E47              _ECAN_Transmit 0568  
          __CFG_PWRTEN$OFF 000000                    __Hparam 0000                    __Lparam 0000  
                ?_unZipCAN 003D                 _readAnalog 05D6            __size_of_danger 0006  
                  __pcinit 05A8                    __ramtop 0F00                    __ptext0 04AE  
                  __ptext1 06D6                    __ptext2 05D6                    __ptext3 06C4  
                  __ptext4 01D4                    __ptext5 06E4                    __ptext6 06EE  
                  __ptext7 05FA                    __ptext8 067C                    __ptext9 061C  
                _T0CONbits 000FD5               __size_of_ISR 009E          __CFG_MSSPMSK$MSK7 000000  
                  _temp_D2 0032                    _temp_D3 0033                    _temp_D4 0034  
                  _temp_D5 0035                    _temp_D6 0036                    _temp_D7 0037  
           ?_ECAN_Transmit 0060                ?_checkBrake 003D                  _MAP_BRAKE 000D  
     end_of_initialization 05CC          _MAP_BATTERYSTATUS 000B                 ??_unZipCAN 004B  
         _buttonWasPressed 0031                _ACCELERATOR 002F                    postinc0 000FEE  
         __CFG_FOSC$INTIO2 000000          __CFG_SOSCSEL$HIGH 000000           _checkAccelerator 0660  
        __size_of_CANSetup 012A               ??_InitDevice 004B              ?_updateInputs 003D  
              ?_readAnalog 0060        __size_of_checkBrake 0018             __end_of_danger 06F4  
            __pidataCOMRAM 06F4               _MAP_VELOCITY 0017        start_initialization 05A8  
          ??_ECAN_Transmit 004B                __end_of_ISR 00A6         __end_of_InitDevice 03D8  
          _setup_Interrupt 06E4                _CANSTATbits 000F6E             ??_updateInputs 004D  
                 ??_danger 004B                __pbssCOMRAM 0001              __pcstackBANK0 0060  
      __size_of_readAnalog 0024         ECAN_Transmit@DATA1 0063         ECAN_Transmit@DATA2 0064  
       ECAN_Transmit@DATA3 0065         ECAN_Transmit@DATA4 0066         ECAN_Transmit@DATA5 0067  
       ECAN_Transmit@DATA6 0068         ECAN_Transmit@DATA7 0069                  __pintcode 0008  
        __size_of_unZipCAN 010A    __size_of_checkBacklight 0022             _heartbeatCount 002D  
  __end_of_setup_Interrupt 06EE             __size_of_Delay 0012                   _CANSetup 00AA  
             ??_checkBrake 004B              ?_ECAN_Receive 003D                   _LATAbits 000F89  
                 _LATBbits 000F8A    __size_of_checkDirection 0018           _TEMP_MAP_H_BLINK 0025  
                _temp_EIDH 0039                  _temp_EIDL 003A                  _temp_SIDH 003B  
                _temp_SIDL 003C                   _PIR5bits 000F77                   _RXB0EIDH 000F63  
                 _RXB0EIDL 000F64                   _RXB1EIDH 000F33                   _RXB1EIDL 000F34  
                 _RCONbits 000FD0                   _MOTOR_ID 004F                   _RXB0SIDH 000F61  
                 _RXB0SIDL 000F62                   _RXB1SIDH 000F31                   _RXF0EIDH 000EE2  
                 _RXB1SIDL 000F32                   _RXF0EIDL 000EE3                   _RXF1EIDH 000EE6  
                 _RXF1EIDL 000EE7                   _RXF2EIDH 000EEA                   _RXF2EIDL 000EEB  
                 _RXF0SIDH 000EE0                   _RXF0SIDL 000EE1                   _TXB0EIDH 000F23  
                 _RXF1SIDH 000EE4                   _TXB0EIDL 000F24                   _RXF1SIDL 000EE5  
                 _RXF2SIDH 000EE8                   _RXF2SIDL 000EE9                   _RXM0EIDH 000EFA  
                 _RXM0EIDL 000EFB                   _TXB0SIDH 000F21                   _RXM1EIDH 000EFE  
                 _TXB0SIDL 000F22                   _RXM1EIDL 000EFF           _TEMP_MAP_V_BLINK 0029  
                 _RXFBCON0 000E71                   _RXFBCON1 000E72                   _RXFBCON2 000E73  
                 _RXFBCON3 000E74                   _RXFBCON4 000E75                   _RXFBCON5 000E76  
                 _RXFBCON6 000E77                   _RXFBCON7 000E78                   _RXM0SIDH 000EF8  
                 _RXM0SIDL 000EF9                   _RXM1SIDH 000EFC                   _RXM1SIDL 000EFD  
 __end_of_checkAccelerator 067C         __end_of_checkBrake 06C4                 _ADCON0bits 000FC2  
               _ADCON2bits 000FC0      ECAN_Receive@RXMsgFlag 004B              ?_checkH_blink 003D  
  __size_of_checkSafetyPin 0018       __end_of_updateInputs 06E4              ?_checkV_blink 003D  
           ??_ECAN_Receive 004B                _MAP_H_BLINK 0013                _MAP_V_BLINK 0019  
                 __Hrparam 0000                   __Lrparam 0000               ??_readAnalog 004D  
       __CFG_BOREN$SBORDIS 000000         _TEMP_MAP_BACKLIGHT 001D             ??_checkH_blink 004B  
         _interruptCounter 0001           ?_setup_Interrupt 003D             ??_checkV_blink 004B  
                 __ptext10 0694                   __ptext11 06AC                   __ptext12 063E  
                 __ptext13 0660                   __ptext14 02DE                   __ptext15 0568  
                 __ptext16 03D8                   __ptext17 00AA         __end_of_readAnalog 05FA  
            __size_of_main 00BA         _TEMP_MAP_HEARTBEAT 0023         _TEMP_MAP_DIRECTION 0021  
               _FIRST_SEND 0005                   _temp_DLC 0038                   _unZipCAN 01D4  
                 int$flags 0051             _checkBacklight 063E        __CFG_INTOSCSEL$HIGH 000000  
               Delay@count 004B                _RXB0CONbits 000F60                _RXB1CONbits 000F30  
       __CFG_WDTEN$SWDTDIS 000000                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       _TEMP_MAP_SAFETYPIN 0027      __end_of_ECAN_Transmit 05A8                   intlevel2 0000  
           _checkDirection 0694                _TXB0CONbits 000F20                 _OSCCONbits 000FD3  
   __end_of_checkBacklight 0660         __CFG_WDTPS$1048576 000000       __end_of_ECAN_Receive 04AE  
    __size_of_updateInputs 000E             _checkSafetyPin 067C     __end_of_checkDirection 06AC  
      __CFG_BORPWR$ZPBORMV 000000       __end_of_checkH_blink 063E               _updateInputs 06D6  
