

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 07 16:58:39 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  000BDE                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _CAN_ERRORCODE
    46  000BDE  0004               	dw	4
    47                           
    48                           ;initializer for _HEARTBEAT_ERRORCODE
    49  000BE0  0003               	dw	3
    50                           
    51                           ;initializer for _BATTERISTATUS_ID
    52  000BE2  02                 	db	2
    53                           
    54                           ;initializer for _MOTOR_ID
    55  000BE3  01                 	db	1
    56                           
    57                           	psect	nvCOMRAM
    58  00004E                     __pnvCOMRAM:
    59                           	opt stack 0
    60  00004E                     _count:
    61                           	opt stack 0
    62  00004E                     	ds	1
    63                           
    64                           	psect	nvBANK0
    65  00008A                     __pnvBANK0:
    66                           	opt stack 0
    67  00008A                     _deadArea_gas:
    68                           	opt stack 0
    69  00008A                     	ds	2
    70  0000                     _B0CONbits	set	3712
    71  0000                     _B0D0	set	3718
    72  0000                     _B0D1	set	3719
    73  0000                     _B0D2	set	3720
    74  0000                     _B0D3	set	3721
    75  0000                     _B0D4	set	3722
    76  0000                     _B0D5	set	3723
    77  0000                     _B0D6	set	3724
    78  0000                     _B0D7	set	3725
    79  0000                     _B0DLC	set	3717
    80  0000                     _B0EIDH	set	3715
    81  0000                     _B0EIDL	set	3716
    82  0000                     _B0SIDH	set	3713
    83  0000                     _B0SIDL	set	3714
    84  0000                     _BRGCON1	set	3651
    85  0000                     _BRGCON2	set	3652
    86  0000                     _BRGCON3	set	3653
    87  0000                     _BSEL0	set	3709
    88  0000                     _MSEL0	set	3705
    89  0000                     _MSEL1	set	3706
    90  0000                     _MSEL2	set	3707
    91  0000                     _MSEL3	set	3708
    92  0000                     _RXF0EIDH	set	3810
    93  0000                     _RXF0EIDL	set	3811
    94  0000                     _RXF0SIDH	set	3808
    95  0000                     _RXF0SIDL	set	3809
    96  0000                     _RXF1EIDH	set	3814
    97  0000                     _RXF1EIDL	set	3815
    98  0000                     _RXF1SIDH	set	3812
    99  0000                     _RXF1SIDL	set	3813
   100  0000                     _RXF2EIDH	set	3818
   101  0000                     _RXF2EIDL	set	3819
   102  0000                     _RXF2SIDH	set	3816
   103  0000                     _RXF2SIDL	set	3817
   104  0000                     _RXFBCON0	set	3697
   105  0000                     _RXFBCON1	set	3698
   106  0000                     _RXFBCON2	set	3699
   107  0000                     _RXFBCON3	set	3700
   108  0000                     _RXFBCON4	set	3701
   109  0000                     _RXFBCON5	set	3702
   110  0000                     _RXFBCON6	set	3703
   111  0000                     _RXFBCON7	set	3704
   112  0000                     _RXFCON0	set	3654
   113  0000                     _RXFCON1	set	3655
   114  0000                     _RXM0EIDH	set	3834
   115  0000                     _RXM0EIDL	set	3835
   116  0000                     _RXM0SIDH	set	3832
   117  0000                     _RXM0SIDL	set	3833
   118  0000                     _RXM1EIDH	set	3838
   119  0000                     _RXM1EIDL	set	3839
   120  0000                     _RXM1SIDH	set	3836
   121  0000                     _RXM1SIDL	set	3837
   122  0000                     _ANCON0	set	3933
   123  0000                     _ANCON1	set	3932
   124  0000                     _RXB1CON	set	3888
   125  0000                     _RXB1CONbits	set	3888
   126  0000                     _RXB1D0	set	3894
   127  0000                     _RXB1D1	set	3895
   128  0000                     _RXB1D2	set	3896
   129  0000                     _RXB1D3	set	3897
   130  0000                     _RXB1D4	set	3898
   131  0000                     _RXB1D5	set	3899
   132  0000                     _RXB1D6	set	3900
   133  0000                     _RXB1D7	set	3901
   134  0000                     _RXB1DLC	set	3893
   135  0000                     _RXB1EIDH	set	3891
   136  0000                     _RXB1EIDL	set	3892
   137  0000                     _RXB1SIDH	set	3889
   138  0000                     _RXB1SIDL	set	3890
   139  0000                     _TXB0CONbits	set	3872
   140  0000                     _TXB0D0	set	3878
   141  0000                     _TXB0D1	set	3879
   142  0000                     _TXB0D2	set	3880
   143  0000                     _TXB0D3	set	3881
   144  0000                     _TXB0D4	set	3882
   145  0000                     _TXB0D5	set	3883
   146  0000                     _TXB0D6	set	3884
   147  0000                     _TXB0D7	set	3885
   148  0000                     _TXB0DLC	set	3877
   149  0000                     _TXB0EIDH	set	3875
   150  0000                     _TXB0EIDL	set	3876
   151  0000                     _TXB0SIDH	set	3873
   152  0000                     _TXB0SIDL	set	3874
   153  0000                     _ADCON0	set	4034
   154  0000                     _ADCON0bits	set	4034
   155  0000                     _ADCON1	set	4033
   156  0000                     _ADCON2	set	4032
   157  0000                     _ADCON2bits	set	4032
   158  0000                     _ADRESH	set	4036
   159  0000                     _ADRESL	set	4035
   160  0000                     _CANCON	set	3951
   161  0000                     _CANSTATbits	set	3950
   162  0000                     _ECANCON	set	3954
   163  0000                     _INTCONbits	set	4082
   164  0000                     _LATA	set	3977
   165  0000                     _LATAbits	set	3977
   166  0000                     _LATB	set	3978
   167  0000                     _LATBbits	set	3978
   168  0000                     _LATC	set	3979
   169  0000                     _OSCCONbits	set	4051
   170  0000                     _OSCTUNEbits	set	3995
   171  0000                     _PIE1bits	set	3997
   172  0000                     _PIR5bits	set	3959
   173  0000                     _RCONbits	set	4048
   174  0000                     _RXB0CON	set	3936
   175  0000                     _RXB0CONbits	set	3936
   176  0000                     _RXB0D0	set	3942
   177  0000                     _RXB0D1	set	3943
   178  0000                     _RXB0D2	set	3944
   179  0000                     _RXB0D3	set	3945
   180  0000                     _RXB0D4	set	3946
   181  0000                     _RXB0D5	set	3947
   182  0000                     _RXB0D6	set	3948
   183  0000                     _RXB0D7	set	3949
   184  0000                     _RXB0DLC	set	3941
   185  0000                     _RXB0EIDH	set	3939
   186  0000                     _RXB0EIDL	set	3940
   187  0000                     _RXB0SIDH	set	3937
   188  0000                     _RXB0SIDL	set	3938
   189  0000                     _T0CONbits	set	4053
   190  0000                     _T1CONbits	set	4045
   191  0000                     _T1GCONbits	set	4010
   192  0000                     _TRISA	set	3986
   193  0000                     _TRISB	set	3987
   194  0000                     _TRISC	set	3988
   195  0000                     _IRXIF	set	31679
   196  0000                     _TMR0IF	set	32658
   197  0000                     _TMR1IF	set	31984
   198                           
   199                           ; #config settings
   200  0000                     
   201                           	psect	cinit
   202  0009DE                     __pcinit:
   203                           	opt stack 0
   204  0009DE                     start_initialization:
   205                           	opt stack 0
   206  0009DE                     __initialization:
   207                           	opt stack 0
   208                           
   209                           ; Clear objects allocated to BANK0 (26 bytes)
   210  0009DE  EE00  F060         	lfsr	0,__pbssBANK0
   211  0009E2  0E1A               	movlw	26
   212  0009E4                     clear_0:
   213  0009E4  6AEE               	clrf	postinc0,c
   214  0009E6  06E8               	decf	wreg,f,c
   215  0009E8  E1FD               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to COMRAM (48 bytes)
   218  0009EA  EE00  F001         	lfsr	0,__pbssCOMRAM
   219  0009EE  0E30               	movlw	48
   220  0009F0                     clear_1:
   221  0009F0  6AEE               	clrf	postinc0,c
   222  0009F2  06E8               	decf	wreg,f,c
   223  0009F4  E1FD               	bnz	clear_1
   224                           
   225                           ; Initialize objects allocated to COMRAM (6 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227  0009F6  0EDE               	movlw	low __pidataCOMRAM
   228  0009F8  6EF6               	movwf	tblptrl,c
   229  0009FA  0E0B               	movlw	high __pidataCOMRAM
   230  0009FC  6EF7               	movwf	tblptrh,c
   231  0009FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232  000A00  6EF8               	movwf	tblptru,c
   233  000A02  EE00  F048         	lfsr	0,__pdataCOMRAM
   234  000A06  EE10 F006          	lfsr	1,6
   235  000A0A                     copy_data0:
   236  000A0A  0009               	tblrd		*+
   237  000A0C  CFF5 FFEE          	movff	tablat,postinc0
   238  000A10  50E5               	movf	postdec1,w,c
   239  000A12  50E1               	movf	fsr1l,w,c
   240  000A14  E1FA               	bnz	copy_data0
   241  000A16                     end_of_initialization:
   242                           	opt stack 0
   243  000A16                     __end_of__initialization:
   244                           	opt stack 0
   245  000A16  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246  000A18  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247  000A1A  0100               	movlb	0
   248  000A1C  EF2D  F003         	goto	_main	;jump to C main() function
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           postdec1	equ	0xFE5
   256                           fsr1l	equ	0xFE1
   257                           
   258                           	psect	bssCOMRAM
   259  000001                     __pbssCOMRAM:
   260                           	opt stack 0
   261  000001                     _blinkCounter:
   262                           	opt stack 0
   263  000001                     	ds	4
   264  000005                     _FIRST_SEND:
   265                           	opt stack 0
   266  000005                     	ds	2
   267  000007                     _MAP_BACKLIGHT:
   268                           	opt stack 0
   269  000007                     	ds	2
   270  000009                     _MAP_BATTERYSTATUS:
   271                           	opt stack 0
   272  000009                     	ds	2
   273  00000B                     _MAP_BRAKE:
   274                           	opt stack 0
   275  00000B                     	ds	2
   276  00000D                     _MAP_DIRECTION:
   277                           	opt stack 0
   278  00000D                     	ds	2
   279  00000F                     _MAP_H_BLINK:
   280                           	opt stack 0
   281  00000F                     	ds	2
   282  000011                     _MAP_STOP:
   283                           	opt stack 0
   284  000011                     	ds	2
   285  000013                     _MAP_V_BLINK:
   286                           	opt stack 0
   287  000013                     	ds	2
   288  000015                     _TEMP_MAP_BACKLIGHT:
   289                           	opt stack 0
   290  000015                     	ds	2
   291  000017                     _TEMP_MAP_BRAKE:
   292                           	opt stack 0
   293  000017                     	ds	2
   294  000019                     _TEMP_MAP_DIRECTION:
   295                           	opt stack 0
   296  000019                     	ds	2
   297  00001B                     _TEMP_MAP_H_BLINK:
   298                           	opt stack 0
   299  00001B                     	ds	2
   300  00001D                     _TEMP_MAP_SAFETYPIN:
   301                           	opt stack 0
   302  00001D                     	ds	2
   303  00001F                     _TEMP_MAP_STOP:
   304                           	opt stack 0
   305  00001F                     	ds	2
   306  000021                     _TEMP_MAP_V_BLINK:
   307                           	opt stack 0
   308  000021                     	ds	2
   309  000023                     _BITDATA:
   310                           	opt stack 0
   311  000023                     	ds	1
   312  000024                     _TEMP_ACCELERATOR:
   313                           	opt stack 0
   314  000024                     	ds	1
   315  000025                     _buttonWasPressed:
   316                           	opt stack 0
   317  000025                     	ds	1
   318  000026                     _temp_D2:
   319                           	opt stack 0
   320  000026                     	ds	1
   321  000027                     _temp_D3:
   322                           	opt stack 0
   323  000027                     	ds	1
   324  000028                     _temp_D4:
   325                           	opt stack 0
   326  000028                     	ds	1
   327  000029                     _temp_D5:
   328                           	opt stack 0
   329  000029                     	ds	1
   330  00002A                     _temp_D6:
   331                           	opt stack 0
   332  00002A                     	ds	1
   333  00002B                     _temp_D7:
   334                           	opt stack 0
   335  00002B                     	ds	1
   336  00002C                     _temp_DLC:
   337                           	opt stack 0
   338  00002C                     	ds	1
   339  00002D                     _temp_EIDH:
   340                           	opt stack 0
   341  00002D                     	ds	1
   342  00002E                     _temp_EIDL:
   343                           	opt stack 0
   344  00002E                     	ds	1
   345  00002F                     _temp_SIDH:
   346                           	opt stack 0
   347  00002F                     	ds	1
   348  000030                     _temp_SIDL:
   349                           	opt stack 0
   350  000030                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	dataCOMRAM
   361  000048                     __pdataCOMRAM:
   362                           	opt stack 0
   363  000048                     _CAN_ERRORCODE:
   364                           	opt stack 0
   365  000048                     	ds	2
   366  00004A                     _HEARTBEAT_ERRORCODE:
   367                           	opt stack 0
   368  00004A                     	ds	2
   369  00004C                     _BATTERISTATUS_ID:
   370                           	opt stack 0
   371  00004C                     	ds	1
   372  00004D                     _MOTOR_ID:
   373                           	opt stack 0
   374  00004D                     	ds	1
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bssBANK0
   385  000060                     __pbssBANK0:
   386                           	opt stack 0
   387  000060                     _heartBeatCounter:
   388                           	opt stack 0
   389  000060                     	ds	4
   390  000064                     _interruptCounter:
   391                           	opt stack 0
   392  000064                     	ds	4
   393  000068                     _CAN_ERRORBIT:
   394                           	opt stack 0
   395  000068                     	ds	2
   396  00006A                     _MAP_ACCELERATOR:
   397                           	opt stack 0
   398  00006A                     	ds	2
   399  00006C                     _MAP_HEARTBEAT:
   400                           	opt stack 0
   401  00006C                     	ds	2
   402  00006E                     _MAP_SAFETYPIN:
   403                           	opt stack 0
   404  00006E                     	ds	2
   405  000070                     _MAP_VELOCITY:
   406                           	opt stack 0
   407  000070                     	ds	2
   408  000072                     _OFFSET_ACCELERATOR:
   409                           	opt stack 0
   410  000072                     	ds	2
   411  000074                     _TEMP_MAP_ACCELERATOR:
   412                           	opt stack 0
   413  000074                     	ds	2
   414  000076                     _TEMP_MAP_HEARTBEAT:
   415                           	opt stack 0
   416  000076                     	ds	2
   417  000078                     _heartbeatCount:
   418                           	opt stack 0
   419  000078                     	ds	2
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	cstackBANK0
   430  00007A                     __pcstackBANK0:
   431                           	opt stack 0
   432  00007A                     ??_unZipCAN:
   433  00007A                     ?___awdiv:
   434                           	opt stack 0
   435  00007A                     ECAN_Receive@RXMsgFlag:
   436                           	opt stack 0
   437  00007A                     ECAN_Transmit@SIDL:
   438                           	opt stack 0
   439  00007A                     Delay@count:
   440                           	opt stack 0
   441  00007A                     ___awdiv@dividend:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x0
   445  00007A                     	ds	1
   446  00007B                     ECAN_Transmit@DLC:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x1
   450  00007B                     	ds	1
   451  00007C                     ?_readAnalog:
   452                           	opt stack 0
   453  00007C                     ECAN_Transmit@TRANSMIT_ID:
   454                           	opt stack 0
   455  00007C                     ___awdiv@divisor:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x2
   459  00007C                     	ds	1
   460  00007D                     ECAN_Transmit@DATA1:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x3
   464  00007D                     	ds	1
   465  00007E                     ECAN_Transmit@DATA2:
   466                           	opt stack 0
   467  00007E                     ___awdiv@counter:
   468                           	opt stack 0
   469  00007E                     readAnalog@low:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x4
   473  00007E                     	ds	1
   474  00007F                     ECAN_Transmit@DATA3:
   475                           	opt stack 0
   476  00007F                     ___awdiv@sign:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x5
   480  00007F                     	ds	1
   481  000080                     ECAN_Transmit@DATA4:
   482                           	opt stack 0
   483  000080                     readAnalog@high:
   484                           	opt stack 0
   485  000080                     ___awdiv@quotient:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x6
   489  000080                     	ds	1
   490  000081                     ECAN_Transmit@DATA5:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x7
   494  000081                     	ds	1
   495  000082                     ??_checkAccelerator:
   496  000082                     ECAN_Transmit@DATA6:
   497                           	opt stack 0
   498  000082                     readAnalog@totBattery:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x8
   502  000082                     	ds	1
   503  000083                     ECAN_Transmit@DATA7:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x9
   507  000083                     	ds	1
   508  000084                     ECAN_Transmit@SIDH:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0xA
   512  000084                     	ds	1
   513  000085                     checkAccelerator@HALF_ACCELERATOR:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0xB
   517  000085                     	ds	2
   518  000087                     checkAccelerator@startval:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xD
   522  000087                     	ds	1
   523  000088                     checkAccelerator@gas:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xE
   527  000088                     	ds	2
   528  00008A                     tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           
   537                           ; 0 bytes @ 0x10
   538                           
   539                           	psect	cstackCOMRAM
   540  000031                     __pcstackCOMRAM:
   541                           	opt stack 0
   542  000031                     i2Delay@count:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x0
   546  000031                     	ds	2
   547  000033                     danger@errorCode:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x2
   551  000033                     	ds	2
   552  000035                     ??_danger:
   553                           
   554                           ; 0 bytes @ 0x4
   555  000035                     	ds	1
   556  000036                     danger@i:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x5
   560  000036                     	ds	2
   561  000038                     danger@i_1322:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x7
   565  000038                     	ds	2
   566  00003A                     ??_ISR:
   567                           
   568                           ; 0 bytes @ 0x9
   569  00003A                     	ds	14
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           postinc0	equ	0xFEE
   575                           wreg	equ	0xFE8
   576                           postdec1	equ	0xFE5
   577                           fsr1l	equ	0xFE1
   578                           
   579 ;;
   580 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   581 ;;
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 9 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  2  132[None  ] int 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels required when called:    6
   604 ;; This function calls:
   605 ;;		_CANSetup
   606 ;;		_Delay
   607 ;;		_ECAN_Receive
   608 ;;		_ECAN_Transmit
   609 ;;		_InitDevice
   610 ;;		_checkAccelerator
   611 ;;		_checkBacklight
   612 ;;		_checkBrake
   613 ;;		_checkDirection
   614 ;;		_checkH_blink
   615 ;;		_checkSafetyPin
   616 ;;		_checkStop
   617 ;;		_checkV_blink
   618 ;;		_setup_Interrupt
   619 ;;		_unZipCAN
   620 ;;		_updateInputs
   621 ;; This function is called by:
   622 ;;		Startup code after reset
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text0
   627  00065A                     __ptext0:
   628                           	opt stack 0
   629  00065A                     _main:
   630                           	opt stack 25
   631                           
   632                           ;main.c: 12: InitDevice();
   633                           
   634                           ;incstack = 0
   635  00065A  EC78  F001         	call	_InitDevice	;wreg free
   636                           
   637                           ;main.c: 13: CANSetup();
   638  00065E  EC18  F002         	call	_CANSetup	;wreg free
   639                           
   640                           ;main.c: 14: setup_Interrupt();
   641  000662  EC68  F005         	call	_setup_Interrupt	;wreg free
   642                           
   643                           ;main.c: 16: heartBeatCounter = 0;
   644  000666  0E00               	movlw	0
   645  000668  0100               	movlb	0	; () banked
   646  00066A  6F60               	movwf	_heartBeatCounter& (0+255),b
   647  00066C  0E00               	movlw	0
   648  00066E  6F61               	movwf	(_heartBeatCounter+1)& (0+255),b
   649  000670  0E00               	movlw	0
   650  000672  6F62               	movwf	(_heartBeatCounter+2)& (0+255),b
   651  000674  0E00               	movlw	0
   652  000676  6F63               	movwf	(_heartBeatCounter+3)& (0+255),b
   653                           
   654                           ; BSR set to: 0
   655                           ;main.c: 17: FIRST_SEND = 1;
   656  000678  0E00               	movlw	0
   657  00067A  6E06               	movwf	_FIRST_SEND+1,c
   658  00067C  0E01               	movlw	1
   659  00067E  6E05               	movwf	_FIRST_SEND,c
   660                           
   661                           ; BSR set to: 0
   662                           ;main.c: 18: interruptCounter = 0;
   663  000680  0E00               	movlw	0
   664  000682  0100               	movlb	0	; () banked
   665  000684  6F64               	movwf	_interruptCounter& (0+255),b
   666  000686  0E00               	movlw	0
   667  000688  6F65               	movwf	(_interruptCounter+1)& (0+255),b
   668  00068A  0E00               	movlw	0
   669  00068C  6F66               	movwf	(_interruptCounter+2)& (0+255),b
   670  00068E  0E00               	movlw	0
   671  000690  6F67               	movwf	(_interruptCounter+3)& (0+255),b
   672                           
   673                           ; BSR set to: 0
   674                           ;main.c: 20: LATAbits.LATA6 = 1;
   675  000692  8C89               	bsf	3977,6,c	;volatile
   676                           
   677                           ; BSR set to: 0
   678                           ;main.c: 21: LATAbits.LATA7 = 0;
   679  000694  9E89               	bcf	3977,7,c	;volatile
   680  000696                     l2635:
   681                           
   682                           ;main.c: 26: if(ECAN_Receive()){
   683  000696  EC9C  F003         	call	_ECAN_Receive	;wreg free
   684  00069A  0900               	iorlw	0
   685  00069C  B4D8               	btfsc	status,2,c
   686  00069E  D016               	goto	l2647
   687                           
   688                           ;main.c: 27: FIRST_SEND = 0;
   689  0006A0  0E00               	movlw	0
   690  0006A2  6E06               	movwf	_FIRST_SEND+1,c
   691  0006A4  0E00               	movlw	0
   692  0006A6  6E05               	movwf	_FIRST_SEND,c
   693                           
   694                           ;main.c: 28: LATBbits.LATB1 = 1;
   695  0006A8  828A               	bsf	3978,1,c	;volatile
   696                           
   697                           ;main.c: 29: unZipCAN();
   698  0006AA  ECBA  F000         	call	_unZipCAN	;wreg free
   699                           
   700                           ;main.c: 30: if(TEMP_MAP_HEARTBEAT == 1){
   701  0006AE  0100               	movlb	0	; () banked
   702  0006B0  0576               	decf	_TEMP_MAP_HEARTBEAT& (0+255),w,b
   703  0006B2  0100               	movlb	0	; () banked
   704  0006B4  1177               	iorwf	(_TEMP_MAP_HEARTBEAT+1)& (0+255),w,b
   705  0006B6  A4D8               	btfss	status,2,c
   706  0006B8  D009               	goto	l2647
   707                           
   708                           ; BSR set to: 0
   709                           ;main.c: 31: heartBeatCounter = 0;
   710  0006BA  0E00               	movlw	0
   711  0006BC  0100               	movlb	0	; () banked
   712  0006BE  6F60               	movwf	_heartBeatCounter& (0+255),b
   713  0006C0  0E00               	movlw	0
   714  0006C2  6F61               	movwf	(_heartBeatCounter+1)& (0+255),b
   715  0006C4  0E00               	movlw	0
   716  0006C6  6F62               	movwf	(_heartBeatCounter+2)& (0+255),b
   717  0006C8  0E00               	movlw	0
   718  0006CA  6F63               	movwf	(_heartBeatCounter+3)& (0+255),b
   719  0006CC                     l2647:
   720                           
   721                           ;main.c: 32: }
   722                           ;main.c: 34: }
   723                           ;main.c: 41: checkBrake();
   724  0006CC  EC91  F005         	call	_checkBrake	;wreg free
   725                           
   726                           ;main.c: 42: checkBacklight();
   727  0006D0  ECA2  F005         	call	_checkBacklight	;wreg free
   728                           
   729                           ;main.c: 43: checkV_blink();
   730  0006D4  EC4F  F005         	call	_checkV_blink	;wreg free
   731                           
   732                           ;main.c: 44: checkH_blink();
   733  0006D8  EC31  F005         	call	_checkH_blink	;wreg free
   734                           
   735                           ;main.c: 45: checkDirection();
   736  0006DC  ECCD  F005         	call	_checkDirection	;wreg free
   737                           
   738                           ;main.c: 46: checkSafetyPin();
   739  0006E0  ECB3  F005         	call	_checkSafetyPin	;wreg free
   740                           
   741                           ;main.c: 47: checkStop();
   742  0006E4  EC7F  F005         	call	_checkStop	;wreg free
   743                           
   744                           ;main.c: 48: checkAccelerator();
   745  0006E8  ECB2  F002         	call	_checkAccelerator	;wreg free
   746                           
   747                           ;main.c: 52: updateInputs();
   748  0006EC  ECE2  F005         	call	_updateInputs	;wreg free
   749                           
   750                           ;main.c: 54: ECAN_Transmit(0x32,0xC0, 0x08,
   751                           ;main.c: 55: 0,
   752                           ;main.c: 56: MAP_VELOCITY,
   753                           ;main.c: 57: 0x01,
   754                           ;main.c: 58: MAP_BATTERYSTATUS & 0x00FF,
   755                           ;main.c: 59: (MAP_BATTERYSTATUS & 0xFF00) >> 8,
   756                           ;main.c: 60: temp_D5,
   757                           ;main.c: 61: temp_D6,
   758                           ;main.c: 62: temp_D7);
   759  0006F0  0EC0               	movlw	192
   760  0006F2  0100               	movlb	0	; () banked
   761  0006F4  6F7A               	movwf	ECAN_Transmit@SIDL& (0+255),b
   762  0006F6  0E08               	movlw	8
   763  0006F8  0100               	movlb	0	; () banked
   764  0006FA  6F7B               	movwf	ECAN_Transmit@DLC& (0+255),b
   765  0006FC  0E00               	movlw	0
   766  0006FE  0100               	movlb	0	; () banked
   767  000700  6F7C               	movwf	ECAN_Transmit@TRANSMIT_ID& (0+255),b
   768  000702  C070  F07D         	movff	_MAP_VELOCITY,ECAN_Transmit@DATA1
   769  000706  0E01               	movlw	1
   770  000708  0100               	movlb	0	; () banked
   771  00070A  6F7E               	movwf	ECAN_Transmit@DATA2& (0+255),b
   772  00070C  C009  F07F         	movff	_MAP_BATTERYSTATUS,ECAN_Transmit@DATA3
   773  000710  500A               	movf	_MAP_BATTERYSTATUS+1,w,c
   774  000712  0100               	movlb	0	; () banked
   775  000714  6F80               	movwf	ECAN_Transmit@DATA4& (0+255),b
   776  000716  C029  F081         	movff	_temp_D5,ECAN_Transmit@DATA5
   777  00071A  C02A  F082         	movff	_temp_D6,ECAN_Transmit@DATA6
   778  00071E  C02B  F083         	movff	_temp_D7,ECAN_Transmit@DATA7
   779  000722  0E32               	movlw	50
   780  000724  EC10  F005         	call	_ECAN_Transmit
   781                           
   782                           ;main.c: 65: Delay((unsigned int)(64/4)*80 * 5);
   783  000728  0E19               	movlw	25
   784  00072A  0100               	movlb	0	; () banked
   785  00072C  6F7B               	movwf	(Delay@count+1)& (0+255),b
   786  00072E  0E00               	movlw	0
   787  000730  6F7A               	movwf	Delay@count& (0+255),b
   788  000732  ECC1  F005         	call	_Delay	;wreg free
   789  000736  D7AF               	goto	l2635
   790  000738                     __end_of_main:
   791                           	opt stack 0
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           postdec1	equ	0xFE5
   799                           fsr1l	equ	0xFE1
   800                           status	equ	0xFD8
   801                           
   802 ;; *************** function _updateInputs *****************
   803 ;; Defined at:
   804 ;;		line 135 in file "peripherals.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;		None               void
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    5
   825 ;; This function calls:
   826 ;;		_readAnalog
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text1
   833  000BC4                     __ptext1:
   834                           	opt stack 0
   835  000BC4                     _updateInputs:
   836                           	opt stack 25
   837                           
   838                           ;peripherals.c: 138: MAP_BATTERYSTATUS = readAnalog();
   839                           
   840                           ;incstack = 0
   841  000BC4  ECC0  F004         	call	_readAnalog	;wreg free
   842  000BC8  C07C  F009         	movff	?_readAnalog,_MAP_BATTERYSTATUS
   843  000BCC  C07D  F00A         	movff	?_readAnalog+1,_MAP_BATTERYSTATUS+1
   844  000BD0  0012               	return		;funcret
   845  000BD2                     __end_of_updateInputs:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           tblptrh	equ	0xFF7
   849                           tblptrl	equ	0xFF6
   850                           tablat	equ	0xFF5
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           postdec1	equ	0xFE5
   854                           fsr1l	equ	0xFE1
   855                           status	equ	0xFD8
   856                           
   857 ;; *************** function _readAnalog *****************
   858 ;; Defined at:
   859 ;;		line 144 in file "peripherals.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  totBattery      2    8[BANK0 ] int 
   864 ;;  high            2    6[BANK0 ] int 
   865 ;;  low             2    4[BANK0 ] int 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  2    2[BANK0 ] int 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;Total ram usage:        8 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    4
   882 ;; This function calls:
   883 ;;		_Delay
   884 ;; This function is called by:
   885 ;;		_updateInputs
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text2
   890  000980                     __ptext2:
   891                           	opt stack 0
   892  000980                     _readAnalog:
   893                           	opt stack 25
   894                           
   895                           ;peripherals.c: 147: ADCON0 = 0x00;
   896                           
   897                           ;incstack = 0
   898  000980  0E00               	movlw	0
   899  000982  6EC2               	movwf	4034,c	;volatile
   900                           
   901                           ;peripherals.c: 149: ADCON0bits.ADON = 1;
   902  000984  80C2               	bsf	4034,0,c	;volatile
   903                           
   904                           ;peripherals.c: 151: Delay((unsigned int)(64/4)*80 * 100);
   905  000986  0EF4               	movlw	244
   906  000988  0100               	movlb	0	; () banked
   907  00098A  6F7B               	movwf	(Delay@count+1)& (0+255),b
   908  00098C  0E00               	movlw	0
   909  00098E  6F7A               	movwf	Delay@count& (0+255),b
   910  000990  ECC1  F005         	call	_Delay	;wreg free
   911                           
   912                           ;peripherals.c: 153: ADCON0bits.GO_DONE = 1;
   913  000994  82C2               	bsf	4034,1,c	;volatile
   914  000996                     l749:
   915  000996  B2C2               	btfsc	4034,1,c	;volatile
   916  000998  D7FE               	goto	l749
   917                           
   918                           ;peripherals.c: 156: ADCON0bits.ADON = 0;
   919  00099A  90C2               	bcf	4034,0,c	;volatile
   920                           
   921                           ;peripherals.c: 158: int low = ADRESL;
   922  00099C  CFC3 F07E          	movff	4035,readAnalog@low	;volatile
   923  0009A0  0100               	movlb	0	; () banked
   924  0009A2  6B7F               	clrf	(readAnalog@low+1)& (0+255),b
   925                           
   926                           ; BSR set to: 0
   927                           ;peripherals.c: 159: int high = (ADRESH << 8);
   928  0009A4  50C4               	movf	4036,w,c	;volatile
   929  0009A6  0100               	movlb	0	; () banked
   930  0009A8  6F81               	movwf	(readAnalog@high+1)& (0+255),b
   931  0009AA  6B80               	clrf	readAnalog@high& (0+255),b
   932                           
   933                           ; BSR set to: 0
   934                           ;peripherals.c: 160: int totBattery = (high | low);
   935  0009AC  0100               	movlb	0	; () banked
   936  0009AE  517E               	movf	readAnalog@low& (0+255),w,b
   937  0009B0  0100               	movlb	0	; () banked
   938  0009B2  1180               	iorwf	readAnalog@high& (0+255),w,b
   939  0009B4  0100               	movlb	0	; () banked
   940  0009B6  6F82               	movwf	readAnalog@totBattery& (0+255),b
   941  0009B8  0100               	movlb	0	; () banked
   942  0009BA  517F               	movf	(readAnalog@low+1)& (0+255),w,b
   943  0009BC  0100               	movlb	0	; () banked
   944  0009BE  1181               	iorwf	(readAnalog@high+1)& (0+255),w,b
   945  0009C0  0100               	movlb	0	; () banked
   946  0009C2  6F83               	movwf	(readAnalog@totBattery+1)& (0+255),b
   947                           
   948                           ; BSR set to: 0
   949                           ;peripherals.c: 161: if(totBattery < 0){
   950  0009C4  0100               	movlb	0	; () banked
   951  0009C6  AF83               	btfss	(readAnalog@totBattery+1)& (0+255),7,b
   952  0009C8  D005               	goto	l2349
   953                           
   954                           ; BSR set to: 0
   955                           ;peripherals.c: 162: totBattery = 0;
   956  0009CA  0E00               	movlw	0
   957  0009CC  0100               	movlb	0	; () banked
   958  0009CE  6F83               	movwf	(readAnalog@totBattery+1)& (0+255),b
   959  0009D0  0E00               	movlw	0
   960  0009D2  6F82               	movwf	readAnalog@totBattery& (0+255),b
   961  0009D4                     l2349:
   962                           
   963                           ; BSR set to: 0
   964                           ;peripherals.c: 163: }
   965                           ;peripherals.c: 166: return totBattery;
   966  0009D4  C082  F07C         	movff	readAnalog@totBattery,?_readAnalog
   967  0009D8  C083  F07D         	movff	readAnalog@totBattery+1,?_readAnalog+1
   968  0009DC  0012               	return	
   969  0009DE                     __end_of_readAnalog:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           status	equ	0xFD8
   980                           
   981 ;; *************** function _Delay *****************
   982 ;; Defined at:
   983 ;;		line 10 in file "Other.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  count           2    0[BANK0 ] unsigned int 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;		None               void
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1000 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1001 ;;Total ram usage:        2 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    3
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;;		_readAnalog
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text3
  1013  000B82                     __ptext3:
  1014                           	opt stack 0
  1015  000B82                     _Delay:
  1016                           	opt stack 25
  1017  000B82                     l2327:
  1018  000B82  0100               	movlb	0	; () banked
  1019  000B84  077A               	decf	Delay@count& (0+255),f,b
  1020  000B86  A0D8               	btfss	status,0,c
  1021  000B88  077B               	decf	(Delay@count+1)& (0+255),f,b
  1022  000B8A  0100               	movlb	0	; () banked
  1023  000B8C  297A               	incf	Delay@count& (0+255),w,b
  1024  000B8E  E1F9               	bnz	l2327
  1025  000B90  0100               	movlb	0	; () banked
  1026  000B92  297B               	incf	(Delay@count+1)& (0+255),w,b
  1027  000B94  B4D8               	btfsc	status,2,c
  1028  000B96  0012               	return	
  1029  000B98  D7F4               	goto	l2327
  1030  000B9A                     __end_of_Delay:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1l	equ	0xFE1
  1040                           status	equ	0xFD8
  1041                           
  1042 ;; *************** function _unZipCAN *****************
  1043 ;; Defined at:
  1044 ;;		line 362 in file "ECAN.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    3
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text4
  1073  000174                     __ptext4:
  1074                           	opt stack 0
  1075  000174                     _unZipCAN:
  1076                           	opt stack 27
  1077                           
  1078                           ;ECAN.c: 364: TEMP_MAP_HEARTBEAT = (BITDATA & (1 << 0));
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;incstack = 0
  1082  000174  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1083  000178  0E01               	movlw	1
  1084  00017A  0100               	movlb	0	; () banked
  1085  00017C  177A               	andwf	??_unZipCAN& (0+255),f,b
  1086  00017E  0100               	movlb	0	; () banked
  1087  000180  517A               	movf	??_unZipCAN& (0+255),w,b
  1088  000182  0100               	movlb	0	; () banked
  1089  000184  6F76               	movwf	_TEMP_MAP_HEARTBEAT& (0+255),b
  1090  000186  6B77               	clrf	(_TEMP_MAP_HEARTBEAT+1)& (0+255),b
  1091                           
  1092                           ;ECAN.c: 367: TEMP_MAP_BRAKE = BITDATA & (1 << 1);
  1093  000188  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1094  00018C  0E02               	movlw	2
  1095  00018E  0100               	movlb	0	; () banked
  1096  000190  177A               	andwf	??_unZipCAN& (0+255),f,b
  1097  000192  0100               	movlb	0	; () banked
  1098  000194  517A               	movf	??_unZipCAN& (0+255),w,b
  1099  000196  6E17               	movwf	_TEMP_MAP_BRAKE,c
  1100  000198  6A18               	clrf	_TEMP_MAP_BRAKE+1,c
  1101                           
  1102                           ;ECAN.c: 368: TEMP_MAP_BRAKE = (TEMP_MAP_BRAKE >> 1);
  1103  00019A  3418               	rlcf	_TEMP_MAP_BRAKE+1,w,c
  1104  00019C  3018               	rrcf	_TEMP_MAP_BRAKE+1,w,c
  1105  00019E  0100               	movlb	0	; () banked
  1106  0001A0  6F7A               	movwf	??_unZipCAN& (0+255),b
  1107  0001A2  3017               	rrcf	_TEMP_MAP_BRAKE,w,c
  1108  0001A4  6E17               	movwf	_TEMP_MAP_BRAKE,c
  1109  0001A6  C07A  F018         	movff	??_unZipCAN,_TEMP_MAP_BRAKE+1
  1110                           
  1111                           ;ECAN.c: 370: TEMP_MAP_BACKLIGHT = BITDATA & (1 << 2);
  1112  0001AA  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1113  0001AE  0E04               	movlw	4
  1114  0001B0  0100               	movlb	0	; () banked
  1115  0001B2  177A               	andwf	??_unZipCAN& (0+255),f,b
  1116  0001B4  0100               	movlb	0	; () banked
  1117  0001B6  517A               	movf	??_unZipCAN& (0+255),w,b
  1118  0001B8  6E15               	movwf	_TEMP_MAP_BACKLIGHT,c
  1119  0001BA  6A16               	clrf	_TEMP_MAP_BACKLIGHT+1,c
  1120                           
  1121                           ;ECAN.c: 371: TEMP_MAP_BACKLIGHT = (TEMP_MAP_BACKLIGHT >> 2);
  1122  0001BC  C015  F07A         	movff	_TEMP_MAP_BACKLIGHT,??_unZipCAN
  1123  0001C0  C016  F07B         	movff	_TEMP_MAP_BACKLIGHT+1,??_unZipCAN+1
  1124  0001C4  0100               	movlb	0	; () banked
  1125  0001C6  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1126  0001C8  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1127  0001CA  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1128  0001CC  0100               	movlb	0	; () banked
  1129  0001CE  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1130  0001D0  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1131  0001D2  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1132  0001D4  C07A  F015         	movff	??_unZipCAN,_TEMP_MAP_BACKLIGHT
  1133  0001D8  C07B  F016         	movff	??_unZipCAN+1,_TEMP_MAP_BACKLIGHT+1
  1134                           
  1135                           ;ECAN.c: 373: TEMP_MAP_V_BLINK = BITDATA & (1 << 3);
  1136  0001DC  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1137  0001E0  0E08               	movlw	8
  1138  0001E2  0100               	movlb	0	; () banked
  1139  0001E4  177A               	andwf	??_unZipCAN& (0+255),f,b
  1140  0001E6  0100               	movlb	0	; () banked
  1141  0001E8  517A               	movf	??_unZipCAN& (0+255),w,b
  1142  0001EA  6E21               	movwf	_TEMP_MAP_V_BLINK,c
  1143  0001EC  6A22               	clrf	_TEMP_MAP_V_BLINK+1,c
  1144                           
  1145                           ;ECAN.c: 374: TEMP_MAP_V_BLINK = (TEMP_MAP_V_BLINK >> 3);
  1146  0001EE  C021  F07A         	movff	_TEMP_MAP_V_BLINK,??_unZipCAN
  1147  0001F2  C022  F07B         	movff	_TEMP_MAP_V_BLINK+1,??_unZipCAN+1
  1148  0001F6  0100               	movlb	0	; () banked
  1149  0001F8  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1150  0001FA  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1151  0001FC  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1152  0001FE  0100               	movlb	0	; () banked
  1153  000200  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1154  000202  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1155  000204  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1156  000206  0100               	movlb	0	; () banked
  1157  000208  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1158  00020A  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1159  00020C  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1160  00020E  C07A  F021         	movff	??_unZipCAN,_TEMP_MAP_V_BLINK
  1161  000212  C07B  F022         	movff	??_unZipCAN+1,_TEMP_MAP_V_BLINK+1
  1162                           
  1163                           ;ECAN.c: 376: TEMP_MAP_H_BLINK = BITDATA & (1 << 4);
  1164  000216  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1165  00021A  0E10               	movlw	16
  1166  00021C  0100               	movlb	0	; () banked
  1167  00021E  177A               	andwf	??_unZipCAN& (0+255),f,b
  1168  000220  0100               	movlb	0	; () banked
  1169  000222  517A               	movf	??_unZipCAN& (0+255),w,b
  1170  000224  6E1B               	movwf	_TEMP_MAP_H_BLINK,c
  1171  000226  6A1C               	clrf	_TEMP_MAP_H_BLINK+1,c
  1172                           
  1173                           ;ECAN.c: 377: TEMP_MAP_H_BLINK = (TEMP_MAP_H_BLINK >> 4);
  1174  000228  C01B  F07A         	movff	_TEMP_MAP_H_BLINK,??_unZipCAN
  1175  00022C  C01C  F07B         	movff	_TEMP_MAP_H_BLINK+1,??_unZipCAN+1
  1176  000230  0E04               	movlw	4
  1177  000232  0100               	movlb	0	; () banked
  1178  000234  6F7C               	movwf	(??_unZipCAN+2)& (0+255),b
  1179  000236                     u1405:
  1180  000236  0100               	movlb	0	; () banked
  1181  000238  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1182  00023A  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1183  00023C  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1184  00023E  0100               	movlb	0	; () banked
  1185  000240  2F7C               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1186  000242  D7F9               	goto	u1405
  1187  000244  C07A  F01B         	movff	??_unZipCAN,_TEMP_MAP_H_BLINK
  1188  000248  C07B  F01C         	movff	??_unZipCAN+1,_TEMP_MAP_H_BLINK+1
  1189                           
  1190                           ;ECAN.c: 379: TEMP_MAP_DIRECTION = BITDATA & (1 << 5);
  1191  00024C  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1192  000250  0E20               	movlw	32
  1193  000252  0100               	movlb	0	; () banked
  1194  000254  177A               	andwf	??_unZipCAN& (0+255),f,b
  1195  000256  0100               	movlb	0	; () banked
  1196  000258  517A               	movf	??_unZipCAN& (0+255),w,b
  1197  00025A  6E19               	movwf	_TEMP_MAP_DIRECTION,c
  1198  00025C  6A1A               	clrf	_TEMP_MAP_DIRECTION+1,c
  1199                           
  1200                           ;ECAN.c: 380: TEMP_MAP_DIRECTION = (TEMP_MAP_DIRECTION >> 5);
  1201  00025E  C019  F07A         	movff	_TEMP_MAP_DIRECTION,??_unZipCAN
  1202  000262  C01A  F07B         	movff	_TEMP_MAP_DIRECTION+1,??_unZipCAN+1
  1203  000266  0E05               	movlw	5
  1204  000268  0100               	movlb	0	; () banked
  1205  00026A  6F7C               	movwf	(??_unZipCAN+2)& (0+255),b
  1206  00026C                     u1415:
  1207  00026C  0100               	movlb	0	; () banked
  1208  00026E  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1209  000270  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1210  000272  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1211  000274  0100               	movlb	0	; () banked
  1212  000276  2F7C               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1213  000278  D7F9               	goto	u1415
  1214  00027A  C07A  F019         	movff	??_unZipCAN,_TEMP_MAP_DIRECTION
  1215  00027E  C07B  F01A         	movff	??_unZipCAN+1,_TEMP_MAP_DIRECTION+1
  1216                           
  1217                           ;ECAN.c: 382: TEMP_MAP_SAFETYPIN = BITDATA & (1 << 6);
  1218  000282  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1219  000286  0E40               	movlw	64
  1220  000288  0100               	movlb	0	; () banked
  1221  00028A  177A               	andwf	??_unZipCAN& (0+255),f,b
  1222  00028C  0100               	movlb	0	; () banked
  1223  00028E  517A               	movf	??_unZipCAN& (0+255),w,b
  1224  000290  6E1D               	movwf	_TEMP_MAP_SAFETYPIN,c
  1225  000292  6A1E               	clrf	_TEMP_MAP_SAFETYPIN+1,c
  1226                           
  1227                           ;ECAN.c: 383: TEMP_MAP_SAFETYPIN = (TEMP_MAP_SAFETYPIN >> 6);
  1228  000294  C01D  F07A         	movff	_TEMP_MAP_SAFETYPIN,??_unZipCAN
  1229  000298  C01E  F07B         	movff	_TEMP_MAP_SAFETYPIN+1,??_unZipCAN+1
  1230  00029C  0E06               	movlw	6
  1231  00029E  0100               	movlb	0	; () banked
  1232  0002A0  6F7C               	movwf	(??_unZipCAN+2)& (0+255),b
  1233  0002A2                     u1425:
  1234  0002A2  0100               	movlb	0	; () banked
  1235  0002A4  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1236  0002A6  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1237  0002A8  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1238  0002AA  0100               	movlb	0	; () banked
  1239  0002AC  2F7C               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1240  0002AE  D7F9               	goto	u1425
  1241  0002B0  C07A  F01D         	movff	??_unZipCAN,_TEMP_MAP_SAFETYPIN
  1242  0002B4  C07B  F01E         	movff	??_unZipCAN+1,_TEMP_MAP_SAFETYPIN+1
  1243                           
  1244                           ;ECAN.c: 385: TEMP_MAP_STOP = BITDATA & (1 << 7);
  1245  0002B8  C023  F07A         	movff	_BITDATA,??_unZipCAN
  1246  0002BC  0E80               	movlw	128
  1247  0002BE  0100               	movlb	0	; () banked
  1248  0002C0  177A               	andwf	??_unZipCAN& (0+255),f,b
  1249  0002C2  0100               	movlb	0	; () banked
  1250  0002C4  517A               	movf	??_unZipCAN& (0+255),w,b
  1251  0002C6  6E1F               	movwf	_TEMP_MAP_STOP,c
  1252  0002C8  6A20               	clrf	_TEMP_MAP_STOP+1,c
  1253                           
  1254                           ;ECAN.c: 386: TEMP_MAP_STOP = (TEMP_MAP_STOP >> 7);
  1255  0002CA  C01F  F07A         	movff	_TEMP_MAP_STOP,??_unZipCAN
  1256  0002CE  C020  F07B         	movff	_TEMP_MAP_STOP+1,??_unZipCAN+1
  1257  0002D2  0E07               	movlw	7
  1258  0002D4  0100               	movlb	0	; () banked
  1259  0002D6  6F7C               	movwf	(??_unZipCAN+2)& (0+255),b
  1260  0002D8                     u1435:
  1261  0002D8  0100               	movlb	0	; () banked
  1262  0002DA  357B               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1263  0002DC  337B               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1264  0002DE  337A               	rrcf	??_unZipCAN& (0+255),f,b
  1265  0002E0  0100               	movlb	0	; () banked
  1266  0002E2  2F7C               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1267  0002E4  D7F9               	goto	u1435
  1268  0002E6  C07A  F01F         	movff	??_unZipCAN,_TEMP_MAP_STOP
  1269  0002EA  C07B  F020         	movff	??_unZipCAN+1,_TEMP_MAP_STOP+1
  1270                           
  1271                           ; BSR set to: 0
  1272  0002EE  0012               	return		;funcret
  1273  0002F0                     __end_of_unZipCAN:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1l	equ	0xFE1
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _setup_Interrupt *****************
  1286 ;; Defined at:
  1287 ;;		line 118 in file "init.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;		None               void
  1294 ;; Registers used:
  1295 ;;		wreg, status,2
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    3
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text5
  1316  000AD0                     __ptext5:
  1317                           	opt stack 0
  1318  000AD0                     _setup_Interrupt:
  1319                           	opt stack 27
  1320                           
  1321                           ;init.c: 120: RCONbits.IPEN = 1;
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;incstack = 0
  1325  000AD0  8ED0               	bsf	4048,7,c	;volatile
  1326                           
  1327                           ;init.c: 121: INTCONbits.GIEH = 1;
  1328  000AD2  8EF2               	bsf	intcon,7,c	;volatile
  1329                           
  1330                           ;init.c: 122: INTCONbits.GIEL = 1;
  1331  000AD4  8CF2               	bsf	intcon,6,c	;volatile
  1332                           
  1333                           ;init.c: 126: INTCONbits.TMR0IE = 1;
  1334  000AD6  8AF2               	bsf	intcon,5,c	;volatile
  1335                           
  1336                           ;init.c: 127: heartBeatCounter = 0;
  1337  000AD8  0E00               	movlw	0
  1338  000ADA  0100               	movlb	0	; () banked
  1339  000ADC  6F60               	movwf	_heartBeatCounter& (0+255),b
  1340  000ADE  0E00               	movlw	0
  1341  000AE0  6F61               	movwf	(_heartBeatCounter+1)& (0+255),b
  1342  000AE2  0E00               	movlw	0
  1343  000AE4  6F62               	movwf	(_heartBeatCounter+2)& (0+255),b
  1344  000AE6  0E00               	movlw	0
  1345  000AE8  6F63               	movwf	(_heartBeatCounter+3)& (0+255),b
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;init.c: 130: PIE1bits.TMR1IE = 1;
  1349  000AEA  809D               	bsf	3997,0,c	;volatile
  1350                           
  1351                           ;init.c: 131: blinkCounter = 0;
  1352  000AEC  0E00               	movlw	0
  1353  000AEE  6E01               	movwf	_blinkCounter,c
  1354  000AF0  0E00               	movlw	0
  1355  000AF2  6E02               	movwf	_blinkCounter+1,c
  1356  000AF4  0E00               	movlw	0
  1357  000AF6  6E03               	movwf	_blinkCounter+2,c
  1358  000AF8  0E00               	movlw	0
  1359  000AFA  6E04               	movwf	_blinkCounter+3,c
  1360                           
  1361                           ; BSR set to: 0
  1362  000AFC  0012               	return		;funcret
  1363  000AFE                     __end_of_setup_Interrupt:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           intcon	equ	0xFF2
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _checkV_blink *****************
  1377 ;; Defined at:
  1378 ;;		line 24 in file "peripherals.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    3
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text6
  1407  000A9E                     __ptext6:
  1408                           	opt stack 0
  1409  000A9E                     _checkV_blink:
  1410                           	opt stack 27
  1411                           
  1412                           ;peripherals.c: 25: if(TEMP_MAP_V_BLINK != MAP_V_BLINK){
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;incstack = 0
  1416  000A9E  5013               	movf	_MAP_V_BLINK,w,c
  1417  000AA0  1821               	xorwf	_TEMP_MAP_V_BLINK,w,c
  1418  000AA2  E104               	bnz	u1480
  1419  000AA4  5014               	movf	_MAP_V_BLINK+1,w,c
  1420  000AA6  1822               	xorwf	_TEMP_MAP_V_BLINK+1,w,c
  1421  000AA8  B4D8               	btfsc	status,2,c
  1422  000AAA  0012               	return	
  1423  000AAC                     u1480:
  1424                           
  1425                           ;peripherals.c: 26: MAP_V_BLINK = TEMP_MAP_V_BLINK;
  1426  000AAC  C021  F013         	movff	_TEMP_MAP_V_BLINK,_MAP_V_BLINK
  1427  000AB0  C022  F014         	movff	_TEMP_MAP_V_BLINK+1,_MAP_V_BLINK+1
  1428                           
  1429                           ;peripherals.c: 28: blinkCounter = 0;
  1430  000AB4  0E00               	movlw	0
  1431  000AB6  6E01               	movwf	_blinkCounter,c
  1432  000AB8  0E00               	movlw	0
  1433  000ABA  6E02               	movwf	_blinkCounter+1,c
  1434  000ABC  0E00               	movlw	0
  1435  000ABE  6E03               	movwf	_blinkCounter+2,c
  1436  000AC0  0E00               	movlw	0
  1437  000AC2  6E04               	movwf	_blinkCounter+3,c
  1438                           
  1439                           ;peripherals.c: 29: LATBbits.LATB5 = MAP_V_BLINK;
  1440  000AC4  B013               	btfsc	_MAP_V_BLINK,0,c
  1441  000AC6  D002               	bra	u1495
  1442  000AC8  9A8A               	bcf	3978,5,c	;volatile
  1443  000ACA  D001               	bra	u1496
  1444  000ACC                     u1495:
  1445  000ACC  8A8A               	bsf	3978,5,c	;volatile
  1446  000ACE                     u1496:
  1447  000ACE  0012               	return	
  1448  000AD0                     __end_of_checkV_blink:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           intcon	equ	0xFF2
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           postdec1	equ	0xFE5
  1458                           fsr1l	equ	0xFE1
  1459                           status	equ	0xFD8
  1460                           
  1461 ;; *************** function _checkStop *****************
  1462 ;; Defined at:
  1463 ;;		line 53 in file "peripherals.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;		None               void
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text7
  1492  000AFE                     __ptext7:
  1493                           	opt stack 0
  1494  000AFE                     _checkStop:
  1495                           	opt stack 27
  1496                           
  1497                           ;peripherals.c: 54: if(TEMP_MAP_STOP != MAP_STOP){
  1498                           
  1499                           ;incstack = 0
  1500  000AFE  5011               	movf	_MAP_STOP,w,c
  1501  000B00  181F               	xorwf	_TEMP_MAP_STOP,w,c
  1502  000B02  E104               	bnz	u1550
  1503  000B04  5012               	movf	_MAP_STOP+1,w,c
  1504  000B06  1820               	xorwf	_TEMP_MAP_STOP+1,w,c
  1505  000B08  B4D8               	btfsc	status,2,c
  1506  000B0A  0012               	return	
  1507  000B0C                     u1550:
  1508                           
  1509                           ;peripherals.c: 55: MAP_STOP = TEMP_MAP_STOP;
  1510  000B0C  C01F  F011         	movff	_TEMP_MAP_STOP,_MAP_STOP
  1511  000B10  C020  F012         	movff	_TEMP_MAP_STOP+1,_MAP_STOP+1
  1512                           
  1513                           ;peripherals.c: 56: if(MAP_STOP == 1){
  1514  000B14  0411               	decf	_MAP_STOP,w,c
  1515  000B16  1012               	iorwf	_MAP_STOP+1,w,c
  1516  000B18  A4D8               	btfss	status,2,c
  1517  000B1A  0012               	return	
  1518                           
  1519                           ;peripherals.c: 57: LATBbits.LATB0 = 0;
  1520  000B1C  908A               	bcf	3978,0,c	;volatile
  1521                           
  1522                           ;peripherals.c: 58: LATBbits.LATB4 = 1;
  1523  000B1E  888A               	bsf	3978,4,c	;volatile
  1524  000B20  0012               	return	
  1525  000B22                     __end_of_checkStop:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           intcon	equ	0xFF2
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1l	equ	0xFE1
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _checkSafetyPin *****************
  1539 ;; Defined at:
  1540 ;;		line 47 in file "peripherals.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;		None               void
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    3
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text8
  1569  000B66                     __ptext8:
  1570                           	opt stack 0
  1571  000B66                     _checkSafetyPin:
  1572                           	opt stack 27
  1573                           
  1574                           ;peripherals.c: 48: if(TEMP_MAP_SAFETYPIN != MAP_SAFETYPIN){
  1575                           
  1576                           ;incstack = 0
  1577  000B66  0100               	movlb	0	; () banked
  1578  000B68  516E               	movf	_MAP_SAFETYPIN& (0+255),w,b
  1579  000B6A  181D               	xorwf	_TEMP_MAP_SAFETYPIN,w,c
  1580  000B6C  E105               	bnz	u1540
  1581  000B6E  0100               	movlb	0	; () banked
  1582  000B70  516F               	movf	(_MAP_SAFETYPIN+1)& (0+255),w,b
  1583  000B72  181E               	xorwf	_TEMP_MAP_SAFETYPIN+1,w,c
  1584  000B74  B4D8               	btfsc	status,2,c
  1585  000B76  0012               	return	
  1586  000B78                     u1540:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;peripherals.c: 49: MAP_SAFETYPIN = TEMP_MAP_SAFETYPIN;
  1590  000B78  C01D  F06E         	movff	_TEMP_MAP_SAFETYPIN,_MAP_SAFETYPIN
  1591  000B7C  C01E  F06F         	movff	_TEMP_MAP_SAFETYPIN+1,_MAP_SAFETYPIN+1
  1592  000B80  0012               	return	
  1593  000B82                     __end_of_checkSafetyPin:
  1594                           	opt stack 0
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           intcon	equ	0xFF2
  1600                           postinc0	equ	0xFEE
  1601                           wreg	equ	0xFE8
  1602                           postdec1	equ	0xFE5
  1603                           fsr1l	equ	0xFE1
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _checkH_blink *****************
  1607 ;; Defined at:
  1608 ;;		line 32 in file "peripherals.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    3
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text9
  1637  000A62                     __ptext9:
  1638                           	opt stack 0
  1639  000A62                     _checkH_blink:
  1640                           	opt stack 27
  1641                           
  1642                           ;peripherals.c: 33: if(TEMP_MAP_H_BLINK != MAP_H_BLINK){
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;incstack = 0
  1646  000A62  500F               	movf	_MAP_H_BLINK,w,c
  1647  000A64  181B               	xorwf	_TEMP_MAP_H_BLINK,w,c
  1648  000A66  E104               	bnz	u1500
  1649  000A68  5010               	movf	_MAP_H_BLINK+1,w,c
  1650  000A6A  181C               	xorwf	_TEMP_MAP_H_BLINK+1,w,c
  1651  000A6C  B4D8               	btfsc	status,2,c
  1652  000A6E  0012               	return	
  1653  000A70                     u1500:
  1654                           
  1655                           ;peripherals.c: 34: MAP_H_BLINK = TEMP_MAP_H_BLINK;
  1656  000A70  C01B  F00F         	movff	_TEMP_MAP_H_BLINK,_MAP_H_BLINK
  1657  000A74  C01C  F010         	movff	_TEMP_MAP_H_BLINK+1,_MAP_H_BLINK+1
  1658                           
  1659                           ;peripherals.c: 35: LATBbits.LATB6 = MAP_H_BLINK;
  1660  000A78  B00F               	btfsc	_MAP_H_BLINK,0,c
  1661  000A7A  D002               	bra	u1515
  1662  000A7C  9C8A               	bcf	3978,6,c	;volatile
  1663  000A7E  D001               	bra	u1516
  1664  000A80                     u1515:
  1665  000A80  8C8A               	bsf	3978,6,c	;volatile
  1666  000A82                     u1516:
  1667                           
  1668                           ;peripherals.c: 37: blinkCounter = 0;
  1669  000A82  0E00               	movlw	0
  1670  000A84  6E01               	movwf	_blinkCounter,c
  1671  000A86  0E00               	movlw	0
  1672  000A88  6E02               	movwf	_blinkCounter+1,c
  1673  000A8A  0E00               	movlw	0
  1674  000A8C  6E03               	movwf	_blinkCounter+2,c
  1675  000A8E  0E00               	movlw	0
  1676  000A90  6E04               	movwf	_blinkCounter+3,c
  1677                           
  1678                           ;peripherals.c: 38: LATBbits.LATB6 = MAP_H_BLINK;
  1679  000A92  B00F               	btfsc	_MAP_H_BLINK,0,c
  1680  000A94  D002               	bra	u1525
  1681  000A96  9C8A               	bcf	3978,6,c	;volatile
  1682  000A98  D001               	bra	u1526
  1683  000A9A                     u1525:
  1684  000A9A  8C8A               	bsf	3978,6,c	;volatile
  1685  000A9C                     u1526:
  1686  000A9C  0012               	return	
  1687  000A9E                     __end_of_checkH_blink:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           intcon	equ	0xFF2
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1l	equ	0xFE1
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _checkDirection *****************
  1701 ;; Defined at:
  1702 ;;		line 41 in file "peripherals.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;		None               void
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text10
  1731  000B9A                     __ptext10:
  1732                           	opt stack 0
  1733  000B9A                     _checkDirection:
  1734                           	opt stack 27
  1735                           
  1736                           ;peripherals.c: 42: if(TEMP_MAP_DIRECTION != MAP_DIRECTION){
  1737                           
  1738                           ;incstack = 0
  1739  000B9A  500D               	movf	_MAP_DIRECTION,w,c
  1740  000B9C  1819               	xorwf	_TEMP_MAP_DIRECTION,w,c
  1741  000B9E  E104               	bnz	u1530
  1742  000BA0  500E               	movf	_MAP_DIRECTION+1,w,c
  1743  000BA2  181A               	xorwf	_TEMP_MAP_DIRECTION+1,w,c
  1744  000BA4  B4D8               	btfsc	status,2,c
  1745  000BA6  0012               	return	
  1746  000BA8                     u1530:
  1747                           
  1748                           ;peripherals.c: 43: MAP_DIRECTION = TEMP_MAP_DIRECTION;
  1749  000BA8  C019  F00D         	movff	_TEMP_MAP_DIRECTION,_MAP_DIRECTION
  1750  000BAC  C01A  F00E         	movff	_TEMP_MAP_DIRECTION+1,_MAP_DIRECTION+1
  1751  000BB0  0012               	return	
  1752  000BB2                     __end_of_checkDirection:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           intcon	equ	0xFF2
  1759                           postinc0	equ	0xFEE
  1760                           wreg	equ	0xFE8
  1761                           postdec1	equ	0xFE5
  1762                           fsr1l	equ	0xFE1
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _checkBrake *****************
  1766 ;; Defined at:
  1767 ;;		line 10 in file "peripherals.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    3
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text11
  1796  000B22                     __ptext11:
  1797                           	opt stack 0
  1798  000B22                     _checkBrake:
  1799                           	opt stack 27
  1800                           
  1801                           ;peripherals.c: 11: if(TEMP_MAP_BRAKE != MAP_BRAKE){
  1802                           
  1803                           ;incstack = 0
  1804  000B22  500B               	movf	_MAP_BRAKE,w,c
  1805  000B24  1817               	xorwf	_TEMP_MAP_BRAKE,w,c
  1806  000B26  E104               	bnz	u1440
  1807  000B28  500C               	movf	_MAP_BRAKE+1,w,c
  1808  000B2A  1818               	xorwf	_TEMP_MAP_BRAKE+1,w,c
  1809  000B2C  B4D8               	btfsc	status,2,c
  1810  000B2E  0012               	return	
  1811  000B30                     u1440:
  1812                           
  1813                           ;peripherals.c: 12: MAP_BRAKE = TEMP_MAP_BRAKE;
  1814  000B30  C017  F00B         	movff	_TEMP_MAP_BRAKE,_MAP_BRAKE
  1815  000B34  C018  F00C         	movff	_TEMP_MAP_BRAKE+1,_MAP_BRAKE+1
  1816                           
  1817                           ;peripherals.c: 13: if(MAP_BRAKE == 1){
  1818  000B38  040B               	decf	_MAP_BRAKE,w,c
  1819  000B3A  100C               	iorwf	_MAP_BRAKE+1,w,c
  1820  000B3C  A4D8               	btfss	status,2,c
  1821  000B3E  0012               	return	
  1822                           
  1823                           ;peripherals.c: 14: LATBbits.LATB0 = 0;
  1824  000B40  908A               	bcf	3978,0,c	;volatile
  1825  000B42  0012               	return	
  1826  000B44                     __end_of_checkBrake:
  1827                           	opt stack 0
  1828                           tblptru	equ	0xFF8
  1829                           tblptrh	equ	0xFF7
  1830                           tblptrl	equ	0xFF6
  1831                           tablat	equ	0xFF5
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           postdec1	equ	0xFE5
  1836                           fsr1l	equ	0xFE1
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _checkBacklight *****************
  1840 ;; Defined at:
  1841 ;;		line 18 in file "peripherals.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;		None               void
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    3
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text12
  1870  000B44                     __ptext12:
  1871                           	opt stack 0
  1872  000B44                     _checkBacklight:
  1873                           	opt stack 27
  1874                           
  1875                           ;peripherals.c: 19: if(TEMP_MAP_BACKLIGHT != MAP_BACKLIGHT){
  1876                           
  1877                           ;incstack = 0
  1878  000B44  5007               	movf	_MAP_BACKLIGHT,w,c
  1879  000B46  1815               	xorwf	_TEMP_MAP_BACKLIGHT,w,c
  1880  000B48  E104               	bnz	u1460
  1881  000B4A  5008               	movf	_MAP_BACKLIGHT+1,w,c
  1882  000B4C  1816               	xorwf	_TEMP_MAP_BACKLIGHT+1,w,c
  1883  000B4E  B4D8               	btfsc	status,2,c
  1884  000B50  0012               	return	
  1885  000B52                     u1460:
  1886                           
  1887                           ;peripherals.c: 20: MAP_BACKLIGHT = TEMP_MAP_BACKLIGHT;
  1888  000B52  C015  F007         	movff	_TEMP_MAP_BACKLIGHT,_MAP_BACKLIGHT
  1889  000B56  C016  F008         	movff	_TEMP_MAP_BACKLIGHT+1,_MAP_BACKLIGHT+1
  1890                           
  1891                           ;peripherals.c: 21: LATBbits.LATB7 = MAP_BACKLIGHT;
  1892  000B5A  B007               	btfsc	_MAP_BACKLIGHT,0,c
  1893  000B5C  D002               	bra	u1475
  1894  000B5E  9E8A               	bcf	3978,7,c	;volatile
  1895  000B60  D001               	bra	u1476
  1896  000B62                     u1475:
  1897  000B62  8E8A               	bsf	3978,7,c	;volatile
  1898  000B64                     u1476:
  1899  000B64  0012               	return	
  1900  000B66                     __end_of_checkBacklight:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           intcon	equ	0xFF2
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postdec1	equ	0xFE5
  1910                           fsr1l	equ	0xFE1
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function _checkAccelerator *****************
  1914 ;; Defined at:
  1915 ;;		line 74 in file "peripherals.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  gas             2   14[BANK0 ] int 
  1920 ;;  HALF_ACCELER    2   11[BANK0 ] int 
  1921 ;;  startval        1   13[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;Total ram usage:        8 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    4
  1938 ;; This function calls:
  1939 ;;		___awdiv
  1940 ;;		_startMotor
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text13
  1947  000564                     __ptext13:
  1948                           	opt stack 0
  1949  000564                     _checkAccelerator:
  1950                           	opt stack 26
  1951                           
  1952                           ;peripherals.c: 93: if(TEMP_ACCELERATOR != MAP_ACCELERATOR){
  1953                           
  1954                           ;incstack = 0
  1955  000564  5024               	movf	_TEMP_ACCELERATOR,w,c
  1956  000566  0100               	movlb	0	; () banked
  1957  000568  6F82               	movwf	??_checkAccelerator& (0+255),b
  1958  00056A  6B83               	clrf	(??_checkAccelerator+1)& (0+255),b
  1959  00056C  0100               	movlb	0	; () banked
  1960  00056E  516A               	movf	_MAP_ACCELERATOR& (0+255),w,b
  1961  000570  0100               	movlb	0	; () banked
  1962  000572  1982               	xorwf	??_checkAccelerator& (0+255),w,b
  1963  000574  E106               	bnz	u1570
  1964  000576  0100               	movlb	0	; () banked
  1965  000578  516B               	movf	(_MAP_ACCELERATOR+1)& (0+255),w,b
  1966  00057A  0100               	movlb	0	; () banked
  1967  00057C  1983               	xorwf	(??_checkAccelerator+1)& (0+255),w,b
  1968  00057E  B4D8               	btfsc	status,2,c
  1969  000580  0012               	return	
  1970  000582                     u1570:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;peripherals.c: 94: MAP_ACCELERATOR = TEMP_ACCELERATOR;
  1974  000582  C024  F06A         	movff	_TEMP_ACCELERATOR,_MAP_ACCELERATOR
  1975  000586  0100               	movlb	0	; () banked
  1976  000588  6B6B               	clrf	(_MAP_ACCELERATOR+1)& (0+255),b
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;peripherals.c: 96: int HALF_ACCELERATOR = TEMP_ACCELERATOR/2;
  1980  00058A  C024  F07A         	movff	_TEMP_ACCELERATOR,___awdiv@dividend
  1981  00058E  0100               	movlb	0	; () banked
  1982  000590  6B7B               	clrf	(___awdiv@dividend+1)& (0+255),b
  1983  000592  0E00               	movlw	0
  1984  000594  0100               	movlb	0	; () banked
  1985  000596  6F7D               	movwf	(___awdiv@divisor+1)& (0+255),b
  1986  000598  0E02               	movlw	2
  1987  00059A  6F7C               	movwf	___awdiv@divisor& (0+255),b
  1988  00059C  EC0B  F004         	call	___awdiv	;wreg free
  1989  0005A0  C07A  F085         	movff	?___awdiv,checkAccelerator@HALF_ACCELERATOR
  1990  0005A4  C07B  F086         	movff	?___awdiv+1,checkAccelerator@HALF_ACCELERATOR+1
  1991                           
  1992                           ;peripherals.c: 97: int gas;
  1993                           ;peripherals.c: 98: char startval = 0b10001000;
  1994  0005A8  0E88               	movlw	136
  1995  0005AA  0100               	movlb	0	; () banked
  1996  0005AC  6F87               	movwf	checkAccelerator@startval& (0+255),b
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;peripherals.c: 100: if(MAP_DIRECTION == 1){
  2000  0005AE  040D               	decf	_MAP_DIRECTION,w,c
  2001  0005B0  100E               	iorwf	_MAP_DIRECTION+1,w,c
  2002  0005B2  A4D8               	btfss	status,2,c
  2003  0005B4  D017               	goto	l2577
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;peripherals.c: 102: gas = startval + HALF_ACCELERATOR;
  2007  0005B6  0100               	movlb	0	; () banked
  2008  0005B8  5187               	movf	checkAccelerator@startval& (0+255),w,b
  2009  0005BA  0100               	movlb	0	; () banked
  2010  0005BC  2585               	addwf	checkAccelerator@HALF_ACCELERATOR& (0+255),w,b
  2011  0005BE  0100               	movlb	0	; () banked
  2012  0005C0  6F88               	movwf	checkAccelerator@gas& (0+255),b
  2013  0005C2  0E00               	movlw	0
  2014  0005C4  0100               	movlb	0	; () banked
  2015  0005C6  2186               	addwfc	(checkAccelerator@HALF_ACCELERATOR+1)& (0+255),w,b
  2016  0005C8  0100               	movlb	0	; () banked
  2017  0005CA  6F89               	movwf	(checkAccelerator@gas+1)& (0+255),b
  2018                           
  2019                           ;peripherals.c: 104: if(gas > 0xFF)
  2020  0005CC  0100               	movlb	0	; () banked
  2021  0005CE  BF89               	btfsc	(checkAccelerator@gas+1)& (0+255),7,b
  2022  0005D0  D029               	goto	l2583
  2023  0005D2  0100               	movlb	0	; () banked
  2024  0005D4  0589               	decf	(checkAccelerator@gas+1)& (0+255),w,b
  2025  0005D6  A0D8               	btfss	status,0,c
  2026  0005D8  D025               	goto	l2583
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;peripherals.c: 105: gas = 0xFF;
  2030  0005DA  0E00               	movlw	0
  2031  0005DC  0100               	movlb	0	; () banked
  2032  0005DE  6F89               	movwf	(checkAccelerator@gas+1)& (0+255),b
  2033  0005E0  6988               	setf	checkAccelerator@gas& (0+255),b
  2034  0005E2  D020               	goto	l2583
  2035  0005E4                     l2577:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;peripherals.c: 109: else if(MAP_DIRECTION == 0){
  2039  0005E4  500D               	movf	_MAP_DIRECTION,w,c
  2040  0005E6  100E               	iorwf	_MAP_DIRECTION+1,w,c
  2041  0005E8  A4D8               	btfss	status,2,c
  2042  0005EA  D01E               	goto	l2585
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;peripherals.c: 111: gas = startval - HALF_ACCELERATOR;
  2046  0005EC  C085  F082         	movff	checkAccelerator@HALF_ACCELERATOR,??_checkAccelerator
  2047  0005F0  C086  F083         	movff	checkAccelerator@HALF_ACCELERATOR+1,??_checkAccelerator+1
  2048  0005F4  0100               	movlb	0	; () banked
  2049  0005F6  1F82               	comf	??_checkAccelerator& (0+255),f,b
  2050  0005F8  1F83               	comf	(??_checkAccelerator+1)& (0+255),f,b
  2051  0005FA  4B82               	infsnz	??_checkAccelerator& (0+255),f,b
  2052  0005FC  2B83               	incf	(??_checkAccelerator+1)& (0+255),f,b
  2053  0005FE  0100               	movlb	0	; () banked
  2054  000600  5187               	movf	checkAccelerator@startval& (0+255),w,b
  2055  000602  0100               	movlb	0	; () banked
  2056  000604  2582               	addwf	??_checkAccelerator& (0+255),w,b
  2057  000606  0100               	movlb	0	; () banked
  2058  000608  6F88               	movwf	checkAccelerator@gas& (0+255),b
  2059  00060A  0E00               	movlw	0
  2060  00060C  0100               	movlb	0	; () banked
  2061  00060E  2183               	addwfc	(??_checkAccelerator+1)& (0+255),w,b
  2062  000610  0100               	movlb	0	; () banked
  2063  000612  6F89               	movwf	(checkAccelerator@gas+1)& (0+255),b
  2064                           
  2065                           ;peripherals.c: 113: if(gas < 0)
  2066  000614  0100               	movlb	0	; () banked
  2067  000616  AF89               	btfss	(checkAccelerator@gas+1)& (0+255),7,b
  2068  000618  D005               	goto	l2583
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;peripherals.c: 114: gas = 0;
  2072  00061A  0E00               	movlw	0
  2073  00061C  0100               	movlb	0	; () banked
  2074  00061E  6F89               	movwf	(checkAccelerator@gas+1)& (0+255),b
  2075  000620  0E00               	movlw	0
  2076  000622  6F88               	movwf	checkAccelerator@gas& (0+255),b
  2077  000624                     l2583:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;peripherals.c: 116: LATC = gas;
  2081  000624  C088  FF8B         	movff	checkAccelerator@gas,3979	;volatile
  2082  000628                     l2585:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;peripherals.c: 117: }
  2086                           ;peripherals.c: 119: if(TEMP_ACCELERATOR < deadArea_gas){
  2087  000628  5024               	movf	_TEMP_ACCELERATOR,w,c
  2088  00062A  0100               	movlb	0	; () banked
  2089  00062C  6F82               	movwf	??_checkAccelerator& (0+255),b
  2090  00062E  6B83               	clrf	(??_checkAccelerator+1)& (0+255),b
  2091  000630  0100               	movlb	0	; () banked
  2092  000632  518A               	movf	_deadArea_gas& (0+255),w,b
  2093  000634  0100               	movlb	0	; () banked
  2094  000636  5D82               	subwf	??_checkAccelerator& (0+255),w,b
  2095  000638  0100               	movlb	0	; () banked
  2096  00063A  5183               	movf	(??_checkAccelerator+1)& (0+255),w,b
  2097  00063C  0A80               	xorlw	128
  2098  00063E  0100               	movlb	0	; () banked
  2099  000640  6F84               	movwf	(??_checkAccelerator+2)& (0+255),b
  2100  000642  0100               	movlb	0	; () banked
  2101  000644  518B               	movf	(_deadArea_gas+1)& (0+255),w,b
  2102  000646  0A80               	xorlw	128
  2103  000648  0100               	movlb	0	; () banked
  2104  00064A  5984               	subwfb	(??_checkAccelerator+2)& (0+255),w,b
  2105  00064C  B0D8               	btfsc	status,0,c
  2106  00064E  D002               	goto	l2589
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;peripherals.c: 120: LATBbits.LATB0 = 0;
  2110  000650  908A               	bcf	3978,0,c	;volatile
  2111                           
  2112                           ;peripherals.c: 121: }
  2113  000652  0012               	return	
  2114  000654                     l2589:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;peripherals.c: 122: else{
  2118                           ;peripherals.c: 123: startMotor();
  2119  000654  ECE9  F005         	call	_startMotor	;wreg free
  2120  000658  0012               	return	
  2121  00065A                     __end_of_checkAccelerator:
  2122                           	opt stack 0
  2123                           tblptru	equ	0xFF8
  2124                           tblptrh	equ	0xFF7
  2125                           tblptrl	equ	0xFF6
  2126                           tablat	equ	0xFF5
  2127                           intcon	equ	0xFF2
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           postdec1	equ	0xFE5
  2131                           fsr1l	equ	0xFE1
  2132                           status	equ	0xFD8
  2133                           
  2134 ;; *************** function _startMotor *****************
  2135 ;; Defined at:
  2136 ;;		line 128 in file "peripherals.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;		None
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;		None
  2141 ;; Return value:  Size  Location     Type
  2142 ;;		None               void
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;Total ram usage:        0 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    3
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_checkAccelerator
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text14
  2165  000BD2                     __ptext14:
  2166                           	opt stack 0
  2167  000BD2                     _startMotor:
  2168                           	opt stack 26
  2169                           
  2170                           ;peripherals.c: 129: if(TEMP_MAP_BRAKE == 0){
  2171                           
  2172                           ;incstack = 0
  2173  000BD2  5017               	movf	_TEMP_MAP_BRAKE,w,c
  2174  000BD4  1018               	iorwf	_TEMP_MAP_BRAKE+1,w,c
  2175  000BD6  A4D8               	btfss	status,2,c
  2176  000BD8  0012               	return	
  2177                           
  2178                           ;peripherals.c: 130: LATBbits.LATB0 = 1;
  2179  000BDA  808A               	bsf	3978,0,c	;volatile
  2180  000BDC  0012               	return	
  2181  000BDE                     __end_of_startMotor:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           intcon	equ	0xFF2
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           postdec1	equ	0xFE5
  2191                           fsr1l	equ	0xFE1
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function ___awdiv *****************
  2195 ;; Defined at:
  2196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  dividend        2    0[BANK0 ] int 
  2199 ;;  divisor         2    2[BANK0 ] int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  quotient        2    6[BANK0 ] int 
  2202 ;;  sign            1    5[BANK0 ] unsigned char 
  2203 ;;  counter         1    4[BANK0 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2    0[BANK0 ] int 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;Total ram usage:        8 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    3
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_checkAccelerator
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text15
  2228  000816                     __ptext15:
  2229                           	opt stack 0
  2230  000816                     ___awdiv:
  2231                           	opt stack 26
  2232                           
  2233                           ;incstack = 0
  2234  000816  0E00               	movlw	0
  2235  000818  0100               	movlb	0	; () banked
  2236  00081A  6F7F               	movwf	___awdiv@sign& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239  00081C  0100               	movlb	0	; () banked
  2240  00081E  AF7D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2241  000820  D008               	goto	l2361
  2242                           
  2243                           ; BSR set to: 0
  2244  000822  0100               	movlb	0	; () banked
  2245  000824  6D7C               	negf	___awdiv@divisor& (0+255),b
  2246  000826  1F7D               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2247  000828  B0D8               	btfsc	status,0,c
  2248  00082A  2B7D               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2249                           
  2250                           ; BSR set to: 0
  2251  00082C  0E01               	movlw	1
  2252  00082E  0100               	movlb	0	; () banked
  2253  000830  6F7F               	movwf	___awdiv@sign& (0+255),b
  2254  000832                     l2361:
  2255                           
  2256                           ; BSR set to: 0
  2257  000832  0100               	movlb	0	; () banked
  2258  000834  AF7B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2259  000836  D008               	goto	l2367
  2260                           
  2261                           ; BSR set to: 0
  2262  000838  0100               	movlb	0	; () banked
  2263  00083A  6D7A               	negf	___awdiv@dividend& (0+255),b
  2264  00083C  1F7B               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2265  00083E  B0D8               	btfsc	status,0,c
  2266  000840  2B7B               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2267                           
  2268                           ; BSR set to: 0
  2269  000842  0E01               	movlw	1
  2270  000844  0100               	movlb	0	; () banked
  2271  000846  1B7F               	xorwf	___awdiv@sign& (0+255),f,b
  2272  000848                     l2367:
  2273                           
  2274                           ; BSR set to: 0
  2275  000848  0E00               	movlw	0
  2276  00084A  0100               	movlb	0	; () banked
  2277  00084C  6F81               	movwf	(___awdiv@quotient+1)& (0+255),b
  2278  00084E  0E00               	movlw	0
  2279  000850  6F80               	movwf	___awdiv@quotient& (0+255),b
  2280                           
  2281                           ; BSR set to: 0
  2282  000852  0100               	movlb	0	; () banked
  2283  000854  517C               	movf	___awdiv@divisor& (0+255),w,b
  2284  000856  0100               	movlb	0	; () banked
  2285  000858  117D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2286  00085A  B4D8               	btfsc	status,2,c
  2287  00085C  D02C               	goto	l2389
  2288                           
  2289                           ; BSR set to: 0
  2290  00085E  0E01               	movlw	1
  2291  000860  0100               	movlb	0	; () banked
  2292  000862  6F7E               	movwf	___awdiv@counter& (0+255),b
  2293  000864  D006               	goto	l2375
  2294  000866                     l2373:
  2295                           
  2296                           ; BSR set to: 0
  2297  000866  0100               	movlb	0	; () banked
  2298  000868  90D8               	bcf	status,0,c
  2299  00086A  377C               	rlcf	___awdiv@divisor& (0+255),f,b
  2300  00086C  377D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2301  00086E  0100               	movlb	0	; () banked
  2302  000870  2B7E               	incf	___awdiv@counter& (0+255),f,b
  2303  000872                     l2375:
  2304                           
  2305                           ; BSR set to: 0
  2306  000872  0100               	movlb	0	; () banked
  2307  000874  AF7D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2308  000876  D7F7               	goto	l2373
  2309  000878                     l2377:
  2310                           
  2311                           ; BSR set to: 0
  2312  000878  0100               	movlb	0	; () banked
  2313  00087A  90D8               	bcf	status,0,c
  2314  00087C  3780               	rlcf	___awdiv@quotient& (0+255),f,b
  2315  00087E  3781               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2316                           
  2317                           ; BSR set to: 0
  2318  000880  0100               	movlb	0	; () banked
  2319  000882  517C               	movf	___awdiv@divisor& (0+255),w,b
  2320  000884  0100               	movlb	0	; () banked
  2321  000886  5D7A               	subwf	___awdiv@dividend& (0+255),w,b
  2322  000888  0100               	movlb	0	; () banked
  2323  00088A  517D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2324  00088C  0100               	movlb	0	; () banked
  2325  00088E  597B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2326  000890  A0D8               	btfss	status,0,c
  2327  000892  D00A               	goto	l2385
  2328                           
  2329                           ; BSR set to: 0
  2330  000894  0100               	movlb	0	; () banked
  2331  000896  517C               	movf	___awdiv@divisor& (0+255),w,b
  2332  000898  0100               	movlb	0	; () banked
  2333  00089A  5F7A               	subwf	___awdiv@dividend& (0+255),f,b
  2334  00089C  0100               	movlb	0	; () banked
  2335  00089E  517D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2336  0008A0  0100               	movlb	0	; () banked
  2337  0008A2  5B7B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2338                           
  2339                           ; BSR set to: 0
  2340  0008A4  0100               	movlb	0	; () banked
  2341  0008A6  8180               	bsf	___awdiv@quotient& (0+255),0,b
  2342  0008A8                     l2385:
  2343                           
  2344                           ; BSR set to: 0
  2345  0008A8  0100               	movlb	0	; () banked
  2346  0008AA  90D8               	bcf	status,0,c
  2347  0008AC  337D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2348  0008AE  337C               	rrcf	___awdiv@divisor& (0+255),f,b
  2349                           
  2350                           ; BSR set to: 0
  2351  0008B0  0100               	movlb	0	; () banked
  2352  0008B2  2F7E               	decfsz	___awdiv@counter& (0+255),f,b
  2353  0008B4  D7E1               	goto	l2377
  2354  0008B6                     l2389:
  2355                           
  2356                           ; BSR set to: 0
  2357  0008B6  0100               	movlb	0	; () banked
  2358  0008B8  517F               	movf	___awdiv@sign& (0+255),w,b
  2359  0008BA  0100               	movlb	0	; () banked
  2360  0008BC  B4D8               	btfsc	status,2,c
  2361  0008BE  D005               	goto	l2393
  2362                           
  2363                           ; BSR set to: 0
  2364  0008C0  0100               	movlb	0	; () banked
  2365  0008C2  6D80               	negf	___awdiv@quotient& (0+255),b
  2366  0008C4  1F81               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2367  0008C6  B0D8               	btfsc	status,0,c
  2368  0008C8  2B81               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2369  0008CA                     l2393:
  2370                           
  2371                           ; BSR set to: 0
  2372  0008CA  C080  F07A         	movff	___awdiv@quotient,?___awdiv
  2373  0008CE  C081  F07B         	movff	___awdiv@quotient+1,?___awdiv+1
  2374  0008D2  0012               	return	
  2375  0008D4                     __end_of___awdiv:
  2376                           	opt stack 0
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           intcon	equ	0xFF2
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           postdec1	equ	0xFE5
  2385                           fsr1l	equ	0xFE1
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _InitDevice *****************
  2389 ;; Defined at:
  2390 ;;		line 11 in file "init.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;		None               void
  2397 ;; Registers used:
  2398 ;;		wreg, status,2
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    3
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text16
  2419  0002F0                     __ptext16:
  2420                           	opt stack 0
  2421  0002F0                     _InitDevice:
  2422                           	opt stack 27
  2423                           
  2424                           ;init.c: 12: count = 0x01;
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;incstack = 0
  2428  0002F0  0E01               	movlw	1
  2429  0002F2  6E4E               	movwf	_count,c
  2430                           
  2431                           ;init.c: 15: OSCCONbits.IRCF = 7;
  2432  0002F4  88D3               	bsf	4051,4,c	;volatile
  2433  0002F6  8AD3               	bsf	4051,5,c	;volatile
  2434  0002F8  8CD3               	bsf	4051,6,c	;volatile
  2435                           
  2436                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  2437  0002FA  8C9B               	bsf	3995,6,c	;volatile
  2438                           
  2439                           ;init.c: 21: heartbeatCount = 0;
  2440  0002FC  0E00               	movlw	0
  2441  0002FE  0100               	movlb	0	; () banked
  2442  000300  6F79               	movwf	(_heartbeatCount+1)& (0+255),b
  2443  000302  0E00               	movlw	0
  2444  000304  6F78               	movwf	_heartbeatCount& (0+255),b
  2445                           
  2446                           ;init.c: 22: buttonWasPressed = 0;
  2447  000306  0E00               	movlw	0
  2448  000308  6E25               	movwf	_buttonWasPressed,c
  2449                           
  2450                           ;init.c: 27: TRISA = 0b00111111;
  2451  00030A  0E3F               	movlw	63
  2452  00030C  6E92               	movwf	3986,c	;volatile
  2453                           
  2454                           ;init.c: 28: ANCON0 = 0x01;
  2455  00030E  0E01               	movlw	1
  2456  000310  010F               	movlb	15	; () banked
  2457  000312  6F5D               	movwf	93,b	;volatile
  2458                           
  2459                           ;init.c: 29: ANCON1 = 0x00;
  2460  000314  0E00               	movlw	0
  2461  000316  010F               	movlb	15	; () banked
  2462  000318  6F5C               	movwf	92,b	;volatile
  2463                           
  2464                           ;init.c: 32: ADCON0 = 0x00;
  2465  00031A  0E00               	movlw	0
  2466  00031C  6EC2               	movwf	4034,c	;volatile
  2467                           
  2468                           ;init.c: 33: ADCON1 = 0x00;
  2469  00031E  0E00               	movlw	0
  2470  000320  6EC1               	movwf	4033,c	;volatile
  2471                           
  2472                           ;init.c: 34: ADCON2 = 0b10000000;
  2473  000322  0E80               	movlw	128
  2474  000324  6EC0               	movwf	4032,c	;volatile
  2475                           
  2476                           ; BSR set to: 15
  2477                           ;init.c: 38: ADCON2bits.ADFM=1;
  2478  000326  8EC0               	bsf	4032,7,c	;volatile
  2479                           
  2480                           ;init.c: 39: ADCON2bits.ACQT=1;
  2481  000328  50C0               	movf	4032,w,c	;volatile
  2482  00032A  0BC7               	andlw	-57
  2483  00032C  0908               	iorlw	8
  2484  00032E  6EC0               	movwf	4032,c	;volatile
  2485                           
  2486                           ;init.c: 40: ADCON2bits.ADCS=2;
  2487  000330  50C0               	movf	4032,w,c	;volatile
  2488  000332  0BF8               	andlw	-8
  2489  000334  0902               	iorlw	2
  2490  000336  6EC0               	movwf	4032,c	;volatile
  2491                           
  2492                           ;init.c: 44: LATA = 0x00;
  2493  000338  0E00               	movlw	0
  2494  00033A  6E89               	movwf	3977,c	;volatile
  2495                           
  2496                           ;init.c: 46: TRISB = 0b00001100;
  2497  00033C  0E0C               	movlw	12
  2498  00033E  6E93               	movwf	3987,c	;volatile
  2499                           
  2500                           ;init.c: 47: LATB = 0x00;
  2501  000340  0E00               	movlw	0
  2502  000342  6E8A               	movwf	3978,c	;volatile
  2503                           
  2504                           ;init.c: 49: TRISC = 0x00;
  2505  000344  0E00               	movlw	0
  2506  000346  6E94               	movwf	3988,c	;volatile
  2507                           
  2508                           ;init.c: 50: LATC = 0b10001000;
  2509  000348  0E88               	movlw	136
  2510  00034A  6E8B               	movwf	3979,c	;volatile
  2511                           
  2512                           ;init.c: 56: MAP_BRAKE = 0;
  2513  00034C  0E00               	movlw	0
  2514  00034E  6E0C               	movwf	_MAP_BRAKE+1,c
  2515  000350  0E00               	movlw	0
  2516  000352  6E0B               	movwf	_MAP_BRAKE,c
  2517                           
  2518                           ;init.c: 57: MAP_BACKLIGHT = 0;
  2519  000354  0E00               	movlw	0
  2520  000356  6E08               	movwf	_MAP_BACKLIGHT+1,c
  2521  000358  0E00               	movlw	0
  2522  00035A  6E07               	movwf	_MAP_BACKLIGHT,c
  2523                           
  2524                           ;init.c: 58: MAP_V_BLINK = 0;
  2525  00035C  0E00               	movlw	0
  2526  00035E  6E14               	movwf	_MAP_V_BLINK+1,c
  2527  000360  0E00               	movlw	0
  2528  000362  6E13               	movwf	_MAP_V_BLINK,c
  2529                           
  2530                           ;init.c: 59: MAP_H_BLINK = 0;
  2531  000364  0E00               	movlw	0
  2532  000366  6E10               	movwf	_MAP_H_BLINK+1,c
  2533  000368  0E00               	movlw	0
  2534  00036A  6E0F               	movwf	_MAP_H_BLINK,c
  2535                           
  2536                           ;init.c: 60: MAP_DIRECTION = 0;
  2537  00036C  0E00               	movlw	0
  2538  00036E  6E0E               	movwf	_MAP_DIRECTION+1,c
  2539  000370  0E00               	movlw	0
  2540  000372  6E0D               	movwf	_MAP_DIRECTION,c
  2541                           
  2542                           ;init.c: 61: MAP_SAFETYPIN = 0;
  2543  000374  0E00               	movlw	0
  2544  000376  0100               	movlb	0	; () banked
  2545  000378  6F6F               	movwf	(_MAP_SAFETYPIN+1)& (0+255),b
  2546  00037A  0E00               	movlw	0
  2547  00037C  6F6E               	movwf	_MAP_SAFETYPIN& (0+255),b
  2548                           
  2549                           ;init.c: 62: MAP_STOP = 0;
  2550  00037E  0E00               	movlw	0
  2551  000380  6E12               	movwf	_MAP_STOP+1,c
  2552  000382  0E00               	movlw	0
  2553  000384  6E11               	movwf	_MAP_STOP,c
  2554                           
  2555                           ;init.c: 63: MAP_ACCELERATOR = 0;
  2556  000386  0E00               	movlw	0
  2557  000388  0100               	movlb	0	; () banked
  2558  00038A  6F6B               	movwf	(_MAP_ACCELERATOR+1)& (0+255),b
  2559  00038C  0E00               	movlw	0
  2560  00038E  6F6A               	movwf	_MAP_ACCELERATOR& (0+255),b
  2561                           
  2562                           ;init.c: 65: TEMP_MAP_HEARTBEAT = 0;
  2563  000390  0E00               	movlw	0
  2564  000392  0100               	movlb	0	; () banked
  2565  000394  6F77               	movwf	(_TEMP_MAP_HEARTBEAT+1)& (0+255),b
  2566  000396  0E00               	movlw	0
  2567  000398  6F76               	movwf	_TEMP_MAP_HEARTBEAT& (0+255),b
  2568                           
  2569                           ;init.c: 66: TEMP_MAP_BRAKE = 0;
  2570  00039A  0E00               	movlw	0
  2571  00039C  6E18               	movwf	_TEMP_MAP_BRAKE+1,c
  2572  00039E  0E00               	movlw	0
  2573  0003A0  6E17               	movwf	_TEMP_MAP_BRAKE,c
  2574                           
  2575                           ;init.c: 67: TEMP_MAP_BACKLIGHT = 0;
  2576  0003A2  0E00               	movlw	0
  2577  0003A4  6E16               	movwf	_TEMP_MAP_BACKLIGHT+1,c
  2578  0003A6  0E00               	movlw	0
  2579  0003A8  6E15               	movwf	_TEMP_MAP_BACKLIGHT,c
  2580                           
  2581                           ;init.c: 68: TEMP_MAP_V_BLINK = 0;
  2582  0003AA  0E00               	movlw	0
  2583  0003AC  6E22               	movwf	_TEMP_MAP_V_BLINK+1,c
  2584  0003AE  0E00               	movlw	0
  2585  0003B0  6E21               	movwf	_TEMP_MAP_V_BLINK,c
  2586                           
  2587                           ;init.c: 69: TEMP_MAP_H_BLINK = 0;
  2588  0003B2  0E00               	movlw	0
  2589  0003B4  6E1C               	movwf	_TEMP_MAP_H_BLINK+1,c
  2590  0003B6  0E00               	movlw	0
  2591  0003B8  6E1B               	movwf	_TEMP_MAP_H_BLINK,c
  2592                           
  2593                           ;init.c: 70: TEMP_MAP_DIRECTION = 0;
  2594  0003BA  0E00               	movlw	0
  2595  0003BC  6E1A               	movwf	_TEMP_MAP_DIRECTION+1,c
  2596  0003BE  0E00               	movlw	0
  2597  0003C0  6E19               	movwf	_TEMP_MAP_DIRECTION,c
  2598                           
  2599                           ;init.c: 71: TEMP_MAP_SAFETYPIN = 0;
  2600  0003C2  0E00               	movlw	0
  2601  0003C4  6E1E               	movwf	_TEMP_MAP_SAFETYPIN+1,c
  2602  0003C6  0E00               	movlw	0
  2603  0003C8  6E1D               	movwf	_TEMP_MAP_SAFETYPIN,c
  2604                           
  2605                           ;init.c: 72: TEMP_MAP_STOP = 0;
  2606  0003CA  0E00               	movlw	0
  2607  0003CC  6E20               	movwf	_TEMP_MAP_STOP+1,c
  2608  0003CE  0E00               	movlw	0
  2609  0003D0  6E1F               	movwf	_TEMP_MAP_STOP,c
  2610                           
  2611                           ;init.c: 73: TEMP_MAP_ACCELERATOR = 0;
  2612  0003D2  0E00               	movlw	0
  2613  0003D4  0100               	movlb	0	; () banked
  2614  0003D6  6F75               	movwf	(_TEMP_MAP_ACCELERATOR+1)& (0+255),b
  2615  0003D8  0E00               	movlw	0
  2616  0003DA  6F74               	movwf	_TEMP_MAP_ACCELERATOR& (0+255),b
  2617                           
  2618                           ;init.c: 75: MAP_BATTERYSTATUS = 0;
  2619  0003DC  0E00               	movlw	0
  2620  0003DE  6E0A               	movwf	_MAP_BATTERYSTATUS+1,c
  2621  0003E0  0E00               	movlw	0
  2622  0003E2  6E09               	movwf	_MAP_BATTERYSTATUS,c
  2623                           
  2624                           ;init.c: 76: MAP_VELOCITY = 0;
  2625  0003E4  0E00               	movlw	0
  2626  0003E6  0100               	movlb	0	; () banked
  2627  0003E8  6F71               	movwf	(_MAP_VELOCITY+1)& (0+255),b
  2628  0003EA  0E00               	movlw	0
  2629  0003EC  6F70               	movwf	_MAP_VELOCITY& (0+255),b
  2630                           
  2631                           ;init.c: 77: MAP_HEARTBEAT = 0;
  2632  0003EE  0E00               	movlw	0
  2633  0003F0  0100               	movlb	0	; () banked
  2634  0003F2  6F6D               	movwf	(_MAP_HEARTBEAT+1)& (0+255),b
  2635  0003F4  0E00               	movlw	0
  2636  0003F6  6F6C               	movwf	_MAP_HEARTBEAT& (0+255),b
  2637                           
  2638                           ;init.c: 79: deadArea_gas = 5;
  2639  0003F8  0E00               	movlw	0
  2640  0003FA  0100               	movlb	0	; () banked
  2641  0003FC  6F8B               	movwf	(_deadArea_gas+1)& (0+255),b
  2642  0003FE  0E05               	movlw	5
  2643  000400  6F8A               	movwf	_deadArea_gas& (0+255),b
  2644                           
  2645                           ;init.c: 82: OFFSET_ACCELERATOR = 0b00000000;
  2646  000402  0E00               	movlw	0
  2647  000404  0100               	movlb	0	; () banked
  2648  000406  6F73               	movwf	(_OFFSET_ACCELERATOR+1)& (0+255),b
  2649  000408  0E00               	movlw	0
  2650  00040A  6F72               	movwf	_OFFSET_ACCELERATOR& (0+255),b
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;init.c: 88: T0CONbits.TMR0ON = 1;
  2654  00040C  8ED5               	bsf	4053,7,c	;volatile
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;init.c: 89: T0CONbits.T08BIT = 0;
  2658  00040E  9CD5               	bcf	4053,6,c	;volatile
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;init.c: 90: T0CONbits.T0CS = 0;
  2662  000410  9AD5               	bcf	4053,5,c	;volatile
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;init.c: 92: T0CONbits.PSA = 0;
  2666  000412  96D5               	bcf	4053,3,c	;volatile
  2667                           
  2668                           ;init.c: 93: T0CONbits.T0PS = 3;
  2669  000414  50D5               	movf	4053,w,c	;volatile
  2670  000416  0BF8               	andlw	-8
  2671  000418  0903               	iorlw	3
  2672  00041A  6ED5               	movwf	4053,c	;volatile
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;init.c: 102: T1CONbits.TMR1CS0 = 0;
  2676  00041C  9CCD               	bcf	4045,6,c	;volatile
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;init.c: 103: T1CONbits.TMR1CS1 = 0;
  2680  00041E  9ECD               	bcf	4045,7,c	;volatile
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;init.c: 104: T1CONbits.SOSCEN = 1;
  2684  000420  86CD               	bsf	4045,3,c	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;init.c: 106: T1CONbits.T1CKPS0 = 1;
  2688  000422  88CD               	bsf	4045,4,c	;volatile
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;init.c: 107: T1CONbits.T1CKPS1 = 1;
  2692  000424  8ACD               	bsf	4045,5,c	;volatile
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;init.c: 109: T1CONbits.nT1SYNC = 1;
  2696  000426  84CD               	bsf	4045,2,c	;volatile
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;init.c: 110: T1CONbits.RD16 = 1;
  2700  000428  82CD               	bsf	4045,1,c	;volatile
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;init.c: 111: T1CONbits.TMR1ON = 1;
  2704  00042A  80CD               	bsf	4045,0,c	;volatile
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;init.c: 115: T1GCONbits.TMR1GE = 0;
  2708  00042C  9EAA               	bcf	4010,7,c	;volatile
  2709                           
  2710                           ; BSR set to: 0
  2711  00042E  0012               	return		;funcret
  2712  000430                     __end_of_InitDevice:
  2713                           	opt stack 0
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           intcon	equ	0xFF2
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1l	equ	0xFE1
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _ECAN_Transmit *****************
  2726 ;; Defined at:
  2727 ;;		line 306 in file "ECAN.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  SIDH            1    wreg     unsigned char 
  2730 ;;  SIDL            1    0[BANK0 ] unsigned char 
  2731 ;;  DLC             1    1[BANK0 ] unsigned char 
  2732 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  2733 ;;  DATA1           1    3[BANK0 ] unsigned char 
  2734 ;;  DATA2           1    4[BANK0 ] unsigned char 
  2735 ;;  DATA3           1    5[BANK0 ] unsigned char 
  2736 ;;  DATA4           1    6[BANK0 ] unsigned char 
  2737 ;;  DATA5           1    7[BANK0 ] unsigned char 
  2738 ;;  DATA6           1    8[BANK0 ] unsigned char 
  2739 ;;  DATA7           1    9[BANK0 ] unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  SIDH            1   10[BANK0 ] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		wreg, status,2
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2751 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2754 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2755 ;;Total ram usage:       11 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    3
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text17
  2766  000A20                     __ptext17:
  2767                           	opt stack 0
  2768  000A20                     _ECAN_Transmit:
  2769                           	opt stack 27
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;incstack = 0
  2773                           ;ECAN_Transmit@SIDH stored from wreg
  2774  000A20  0100               	movlb	0	; () banked
  2775  000A22  6F84               	movwf	ECAN_Transmit@SIDH& (0+255),b
  2776                           
  2777                           ;ECAN.c: 318: TXB0EIDH = 0x00;
  2778  000A24  0E00               	movlw	0
  2779  000A26  010F               	movlb	15	; () banked
  2780  000A28  6F23               	movwf	35,b	;volatile
  2781                           
  2782                           ;ECAN.c: 319: TXB0EIDL = 0x00;
  2783  000A2A  0E00               	movlw	0
  2784  000A2C  010F               	movlb	15	; () banked
  2785  000A2E  6F24               	movwf	36,b	;volatile
  2786                           
  2787                           ; BSR set to: 15
  2788                           ;ECAN.c: 322: TXB0SIDH = SIDH;
  2789  000A30  C084  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  2790                           
  2791                           ; BSR set to: 15
  2792                           ;ECAN.c: 323: TXB0SIDL = SIDL;
  2793  000A34  C07A  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  2794                           
  2795                           ; BSR set to: 15
  2796                           ;ECAN.c: 324: TXB0DLC = DLC;
  2797  000A38  C07B  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  2798                           
  2799                           ; BSR set to: 15
  2800                           ;ECAN.c: 333: TXB0D0 = TRANSMIT_ID;
  2801  000A3C  C07C  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;ECAN.c: 334: TXB0D1 = DATA1;
  2805  000A40  C07D  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  2806                           
  2807                           ; BSR set to: 15
  2808                           ;ECAN.c: 335: TXB0D2 = DATA2;
  2809  000A44  C07E  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  2810                           
  2811                           ; BSR set to: 15
  2812                           ;ECAN.c: 336: TXB0D3 = DATA3;
  2813  000A48  C07F  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  2814                           
  2815                           ; BSR set to: 15
  2816                           ;ECAN.c: 337: TXB0D4 = DATA4;
  2817  000A4C  C080  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  2818                           
  2819                           ; BSR set to: 15
  2820                           ;ECAN.c: 338: TXB0D5 = DATA5;
  2821  000A50  C081  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;ECAN.c: 339: TXB0D6 = DATA6;
  2825  000A54  C082  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;ECAN.c: 340: TXB0D7 = DATA7;
  2829  000A58  C083  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  2830                           
  2831                           ; BSR set to: 15
  2832                           ;ECAN.c: 342: TXB0CONbits.TXREQ = 1;
  2833  000A5C  010F               	movlb	15	; () banked
  2834  000A5E  8720               	bsf	32,3,b	;volatile
  2835                           
  2836                           ; BSR set to: 15
  2837  000A60  0012               	return		;funcret
  2838  000A62                     __end_of_ECAN_Transmit:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           intcon	equ	0xFF2
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           postdec1	equ	0xFE5
  2848                           fsr1l	equ	0xFE1
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _ECAN_Receive *****************
  2852 ;; Defined at:
  2853 ;;		line 225 in file "ECAN.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      unsigned char 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        1 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    3
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text18
  2882  000738                     __ptext18:
  2883                           	opt stack 0
  2884  000738                     _ECAN_Receive:
  2885                           	opt stack 27
  2886                           
  2887                           ;ECAN.c: 227: unsigned char RXMsgFlag;
  2888                           ;ECAN.c: 229: RXMsgFlag = 0x00;
  2889                           
  2890                           ; BSR set to: 15
  2891                           ;incstack = 0
  2892  000738  0E00               	movlw	0
  2893  00073A  0100               	movlb	0	; () banked
  2894  00073C  6F7A               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;ECAN.c: 231: if (RXB0CONbits.RXFUL)
  2898  00073E  AE60               	btfss	3936,7,c	;volatile
  2899  000740  D01C               	goto	l474
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;ECAN.c: 232: {
  2903                           ;ECAN.c: 233: temp_EIDH = RXB0EIDH;
  2904  000742  CF63 F02D          	movff	3939,_temp_EIDH	;volatile
  2905                           
  2906                           ;ECAN.c: 234: temp_EIDL = RXB0EIDL;
  2907  000746  CF64 F02E          	movff	3940,_temp_EIDL	;volatile
  2908                           
  2909                           ;ECAN.c: 235: temp_SIDH = RXB0SIDH;
  2910  00074A  CF61 F02F          	movff	3937,_temp_SIDH	;volatile
  2911                           
  2912                           ;ECAN.c: 236: temp_SIDL = RXB0SIDL;
  2913  00074E  CF62 F030          	movff	3938,_temp_SIDL	;volatile
  2914                           
  2915                           ;ECAN.c: 237: temp_DLC = RXB0DLC;
  2916  000752  CF65 F02C          	movff	3941,_temp_DLC	;volatile
  2917                           
  2918                           ;ECAN.c: 238: BITDATA = RXB0D0;
  2919  000756  CF66 F023          	movff	3942,_BITDATA	;volatile
  2920                           
  2921                           ;ECAN.c: 239: TEMP_ACCELERATOR = RXB0D1;
  2922  00075A  CF67 F024          	movff	3943,_TEMP_ACCELERATOR	;volatile
  2923                           
  2924                           ;ECAN.c: 240: temp_D2 = RXB0D2;
  2925  00075E  CF68 F026          	movff	3944,_temp_D2	;volatile
  2926                           
  2927                           ;ECAN.c: 241: temp_D3 = RXB0D3;
  2928  000762  CF69 F027          	movff	3945,_temp_D3	;volatile
  2929                           
  2930                           ;ECAN.c: 242: temp_D4 = RXB0D4;
  2931  000766  CF6A F028          	movff	3946,_temp_D4	;volatile
  2932                           
  2933                           ;ECAN.c: 243: temp_D5 = RXB0D5;
  2934  00076A  CF6B F029          	movff	3947,_temp_D5	;volatile
  2935                           
  2936                           ;ECAN.c: 244: temp_D6 = RXB0D6;
  2937  00076E  CF6C F02A          	movff	3948,_temp_D6	;volatile
  2938                           
  2939                           ;ECAN.c: 245: temp_D7 = RXB0D7;
  2940  000772  CF6D F02B          	movff	3949,_temp_D7	;volatile
  2941                           
  2942                           ;ECAN.c: 246: RXB0CONbits.RXFUL = 0;
  2943  000776  9E60               	bcf	3936,7,c	;volatile
  2944  000778  D03F               	goto	l2497
  2945  00077A                     l474:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;ECAN.c: 249: else if (RXB1CONbits.RXFUL)
  2949  00077A  010F               	movlb	15	; () banked
  2950  00077C  AF30               	btfss	48,7,b	;volatile
  2951  00077E  D01D               	goto	l476
  2952                           
  2953                           ; BSR set to: 15
  2954                           ;ECAN.c: 250: {
  2955                           ;ECAN.c: 251: temp_EIDH = RXB1EIDH;
  2956  000780  CF33 F02D          	movff	3891,_temp_EIDH	;volatile
  2957                           
  2958                           ;ECAN.c: 252: temp_EIDL = RXB1EIDL;
  2959  000784  CF34 F02E          	movff	3892,_temp_EIDL	;volatile
  2960                           
  2961                           ;ECAN.c: 253: temp_SIDH = RXB1SIDH;
  2962  000788  CF31 F02F          	movff	3889,_temp_SIDH	;volatile
  2963                           
  2964                           ;ECAN.c: 254: temp_SIDL = RXB1SIDL;
  2965  00078C  CF32 F030          	movff	3890,_temp_SIDL	;volatile
  2966                           
  2967                           ;ECAN.c: 255: temp_DLC = RXB1DLC;
  2968  000790  CF35 F02C          	movff	3893,_temp_DLC	;volatile
  2969                           
  2970                           ;ECAN.c: 256: BITDATA = RXB1D0;
  2971  000794  CF36 F023          	movff	3894,_BITDATA	;volatile
  2972                           
  2973                           ;ECAN.c: 257: TEMP_ACCELERATOR = RXB1D1;
  2974  000798  CF37 F024          	movff	3895,_TEMP_ACCELERATOR	;volatile
  2975                           
  2976                           ;ECAN.c: 258: temp_D2 = RXB1D2;
  2977  00079C  CF38 F026          	movff	3896,_temp_D2	;volatile
  2978                           
  2979                           ;ECAN.c: 259: temp_D3 = RXB1D3;
  2980  0007A0  CF39 F027          	movff	3897,_temp_D3	;volatile
  2981                           
  2982                           ;ECAN.c: 260: temp_D4 = RXB1D4;
  2983  0007A4  CF3A F028          	movff	3898,_temp_D4	;volatile
  2984                           
  2985                           ;ECAN.c: 261: temp_D5 = RXB1D5;
  2986  0007A8  CF3B F029          	movff	3899,_temp_D5	;volatile
  2987                           
  2988                           ;ECAN.c: 262: temp_D6 = RXB1D6;
  2989  0007AC  CF3C F02A          	movff	3900,_temp_D6	;volatile
  2990                           
  2991                           ;ECAN.c: 263: temp_D7 = RXB1D7;
  2992  0007B0  CF3D F02B          	movff	3901,_temp_D7	;volatile
  2993                           
  2994                           ;ECAN.c: 264: RXB1CONbits.RXFUL = 0;
  2995  0007B4  010F               	movlb	15	; () banked
  2996  0007B6  9F30               	bcf	48,7,b	;volatile
  2997  0007B8  D01F               	goto	l2497
  2998  0007BA                     l476:
  2999                           
  3000                           ; BSR set to: 15
  3001                           ;ECAN.c: 267: else if (B0CONbits.RXFUL)
  3002  0007BA  010E               	movlb	14	; () banked
  3003  0007BC  AF80               	btfss	128,7,b	;volatile
  3004  0007BE  D01F               	goto	l2499
  3005                           
  3006                           ; BSR set to: 14
  3007                           ;ECAN.c: 268: {
  3008                           ;ECAN.c: 269: temp_EIDH = B0EIDH;
  3009  0007C0  CE83 F02D          	movff	3715,_temp_EIDH	;volatile
  3010                           
  3011                           ;ECAN.c: 270: temp_EIDL = B0EIDL;
  3012  0007C4  CE84 F02E          	movff	3716,_temp_EIDL	;volatile
  3013                           
  3014                           ;ECAN.c: 271: temp_SIDH = B0SIDH;
  3015  0007C8  CE81 F02F          	movff	3713,_temp_SIDH	;volatile
  3016                           
  3017                           ;ECAN.c: 272: temp_SIDL = B0SIDL;
  3018  0007CC  CE82 F030          	movff	3714,_temp_SIDL	;volatile
  3019                           
  3020                           ;ECAN.c: 273: temp_DLC = B0DLC;
  3021  0007D0  CE85 F02C          	movff	3717,_temp_DLC	;volatile
  3022                           
  3023                           ;ECAN.c: 274: BITDATA = B0D0;
  3024  0007D4  CE86 F023          	movff	3718,_BITDATA	;volatile
  3025                           
  3026                           ;ECAN.c: 275: TEMP_ACCELERATOR = B0D1;
  3027  0007D8  CE87 F024          	movff	3719,_TEMP_ACCELERATOR	;volatile
  3028                           
  3029                           ;ECAN.c: 276: temp_D2 = B0D2;
  3030  0007DC  CE88 F026          	movff	3720,_temp_D2	;volatile
  3031                           
  3032                           ;ECAN.c: 277: temp_D3 = B0D3;
  3033  0007E0  CE89 F027          	movff	3721,_temp_D3	;volatile
  3034                           
  3035                           ;ECAN.c: 278: temp_D4 = B0D4;
  3036  0007E4  CE8A F028          	movff	3722,_temp_D4	;volatile
  3037                           
  3038                           ;ECAN.c: 279: temp_D5 = B0D5;
  3039  0007E8  CE8B F029          	movff	3723,_temp_D5	;volatile
  3040                           
  3041                           ;ECAN.c: 280: temp_D6 = B0D6;
  3042  0007EC  CE8C F02A          	movff	3724,_temp_D6	;volatile
  3043                           
  3044                           ;ECAN.c: 281: temp_D7 = B0D7;
  3045  0007F0  CE8D F02B          	movff	3725,_temp_D7	;volatile
  3046                           
  3047                           ;ECAN.c: 283: B0CONbits.RXFUL = 0;
  3048  0007F4  010E               	movlb	14	; () banked
  3049  0007F6  9F80               	bcf	128,7,b	;volatile
  3050  0007F8                     l2497:
  3051                           
  3052                           ; BSR set to: 14
  3053                           ;ECAN.c: 284: RXMsgFlag = 0x01;
  3054  0007F8  0E01               	movlw	1
  3055  0007FA  0100               	movlb	0	; () banked
  3056  0007FC  6F7A               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  3057  0007FE                     l2499:
  3058                           
  3059                           ;ECAN.c: 285: }
  3060                           ;ECAN.c: 287: if (RXMsgFlag == 0x01)
  3061  0007FE  0100               	movlb	0	; () banked
  3062  000800  057A               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  3063  000802  A4D8               	btfss	status,2,c
  3064  000804  D006               	goto	l2511
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;ECAN.c: 288: {
  3068                           ;ECAN.c: 289: RXMsgFlag = 0x00;
  3069  000806  0E00               	movlw	0
  3070  000808  0100               	movlb	0	; () banked
  3071  00080A  6F7A               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;ECAN.c: 290: PIR5bits.RXB1IF = 0;
  3075  00080C  9277               	bcf	3959,1,c	;volatile
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;ECAN.c: 291: return 1;
  3079  00080E  0E01               	movlw	1
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;ECAN.c: 292: }
  3083                           
  3084                           ; BSR set to: 0
  3085  000810  0012               	return	
  3086  000812                     l2511:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;ECAN.c: 293: else
  3090                           ;ECAN.c: 294: {
  3091                           ;ECAN.c: 295: return 0;
  3092  000812  0E00               	movlw	0
  3093                           
  3094                           ; BSR set to: 0
  3095  000814  0012               	return	
  3096  000816                     __end_of_ECAN_Receive:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           postdec1	equ	0xFE5
  3106                           fsr1l	equ	0xFE1
  3107                           status	equ	0xFD8
  3108                           
  3109 ;; *************** function _CANSetup *****************
  3110 ;; Defined at:
  3111 ;;		line 111 in file "ECAN.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    3
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text19
  3140  000430                     __ptext19:
  3141                           	opt stack 0
  3142  000430                     _CANSetup:
  3143                           	opt stack 27
  3144                           
  3145                           ;ECAN.c: 114: CANCON = 0x80;
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;incstack = 0
  3149  000430  0E80               	movlw	128
  3150  000432  6E6F               	movwf	3951,c	;volatile
  3151  000434                     l2433:
  3152  000434  386E               	swapf	3950,w,c	;volatile
  3153  000436  32E8               	rrcf	wreg,f,c
  3154  000438  0B07               	andlw	7
  3155  00043A  0A04               	xorlw	4
  3156  00043C  A4D8               	btfss	status,2,c
  3157  00043E  D7FA               	goto	l2433
  3158                           
  3159                           ;ECAN.c: 118: ECANCON = 0x40;
  3160  000440  0E40               	movlw	64
  3161  000442  6E72               	movwf	3954,c	;volatile
  3162                           
  3163                           ;ECAN.c: 122: BRGCON1 = 0x81;
  3164  000444  0E81               	movlw	129
  3165  000446  010E               	movlb	14	; () banked
  3166  000448  6F43               	movwf	67,b	;volatile
  3167                           
  3168                           ;ECAN.c: 123: BRGCON2 = 0xB8;
  3169  00044A  0EB8               	movlw	184
  3170  00044C  010E               	movlb	14	; () banked
  3171  00044E  6F44               	movwf	68,b	;volatile
  3172                           
  3173                           ;ECAN.c: 124: BRGCON3 = 0x05;
  3174  000450  0E05               	movlw	5
  3175  000452  010E               	movlb	14	; () banked
  3176  000454  6F45               	movwf	69,b	;volatile
  3177                           
  3178                           ;ECAN.c: 129: BSEL0 = 0xF8;
  3179  000456  0EF8               	movlw	248
  3180  000458  010E               	movlb	14	; () banked
  3181  00045A  6F7D               	movwf	125,b	;volatile
  3182                           
  3183                           ;ECAN.c: 133: RXM0EIDH = 0x00;
  3184  00045C  0E00               	movlw	0
  3185  00045E  010E               	movlb	14	; () banked
  3186  000460  6FFA               	movwf	250,b	;volatile
  3187                           
  3188                           ;ECAN.c: 134: RXM0EIDL = 0x00;
  3189  000462  0E00               	movlw	0
  3190  000464  010E               	movlb	14	; () banked
  3191  000466  6FFB               	movwf	251,b	;volatile
  3192                           
  3193                           ; BSR set to: 14
  3194                           ;ECAN.c: 135: RXM0SIDH = 0xFF;
  3195  000468  010E               	movlb	14	; () banked
  3196  00046A  69F8               	setf	248,b	;volatile
  3197                           
  3198                           ;ECAN.c: 136: RXM0SIDL = 0xE0;
  3199  00046C  0EE0               	movlw	224
  3200  00046E  010E               	movlb	14	; () banked
  3201  000470  6FF9               	movwf	249,b	;volatile
  3202                           
  3203                           ;ECAN.c: 139: RXM1EIDH = 0x00;
  3204  000472  0E00               	movlw	0
  3205  000474  010E               	movlb	14	; () banked
  3206  000476  6FFE               	movwf	254,b	;volatile
  3207                           
  3208                           ;ECAN.c: 140: RXM1EIDL = 0x00;
  3209  000478  0E00               	movlw	0
  3210  00047A  010E               	movlb	14	; () banked
  3211  00047C  6FFF               	movwf	255,b	;volatile
  3212                           
  3213                           ; BSR set to: 14
  3214                           ;ECAN.c: 141: RXM1SIDH = 0xFF;
  3215  00047E  010E               	movlb	14	; () banked
  3216  000480  69FC               	setf	252,b	;volatile
  3217                           
  3218                           ;ECAN.c: 142: RXM1SIDL = 0xE0;
  3219  000482  0EE0               	movlw	224
  3220  000484  010E               	movlb	14	; () banked
  3221  000486  6FFD               	movwf	253,b	;volatile
  3222                           
  3223                           ;ECAN.c: 146: RXFCON0 = 0x07;
  3224  000488  0E07               	movlw	7
  3225  00048A  010E               	movlb	14	; () banked
  3226  00048C  6F46               	movwf	70,b	;volatile
  3227                           
  3228                           ;ECAN.c: 147: RXFCON1 = 0x00;
  3229  00048E  0E00               	movlw	0
  3230  000490  010E               	movlb	14	; () banked
  3231  000492  6F47               	movwf	71,b	;volatile
  3232                           
  3233                           ;ECAN.c: 150: MSEL0 = 0xC0;
  3234  000494  0EC0               	movlw	192
  3235  000496  010E               	movlb	14	; () banked
  3236  000498  6F79               	movwf	121,b	;volatile
  3237                           
  3238                           ; BSR set to: 14
  3239                           ;ECAN.c: 151: MSEL1 = 0xFF;
  3240  00049A  010E               	movlb	14	; () banked
  3241  00049C  697A               	setf	122,b	;volatile
  3242                           
  3243                           ; BSR set to: 14
  3244                           ;ECAN.c: 152: MSEL2 = 0xFF;
  3245  00049E  010E               	movlb	14	; () banked
  3246  0004A0  697B               	setf	123,b	;volatile
  3247                           
  3248                           ; BSR set to: 14
  3249                           ;ECAN.c: 153: MSEL3 = 0xFF;
  3250  0004A2  010E               	movlb	14	; () banked
  3251  0004A4  697C               	setf	124,b	;volatile
  3252                           
  3253                           ;ECAN.c: 157: RXFBCON0 = 0x10;
  3254  0004A6  0E10               	movlw	16
  3255  0004A8  010E               	movlb	14	; () banked
  3256  0004AA  6F71               	movwf	113,b	;volatile
  3257                           
  3258                           ;ECAN.c: 158: RXFBCON1 = 0xF2;
  3259  0004AC  0EF2               	movlw	242
  3260  0004AE  010E               	movlb	14	; () banked
  3261  0004B0  6F72               	movwf	114,b	;volatile
  3262                           
  3263                           ; BSR set to: 14
  3264                           ;ECAN.c: 160: RXFBCON2 = 0xFF;
  3265  0004B2  010E               	movlb	14	; () banked
  3266  0004B4  6973               	setf	115,b	;volatile
  3267                           
  3268                           ; BSR set to: 14
  3269                           ;ECAN.c: 161: RXFBCON3 = 0xFF;
  3270  0004B6  010E               	movlb	14	; () banked
  3271  0004B8  6974               	setf	116,b	;volatile
  3272                           
  3273                           ; BSR set to: 14
  3274                           ;ECAN.c: 162: RXFBCON4 = 0xFF;
  3275  0004BA  010E               	movlb	14	; () banked
  3276  0004BC  6975               	setf	117,b	;volatile
  3277                           
  3278                           ; BSR set to: 14
  3279                           ;ECAN.c: 163: RXFBCON5 = 0xFF;
  3280  0004BE  010E               	movlb	14	; () banked
  3281  0004C0  6976               	setf	118,b	;volatile
  3282                           
  3283                           ; BSR set to: 14
  3284                           ;ECAN.c: 164: RXFBCON6 = 0xFF;
  3285  0004C2  010E               	movlb	14	; () banked
  3286  0004C4  6977               	setf	119,b	;volatile
  3287                           
  3288                           ; BSR set to: 14
  3289                           ;ECAN.c: 165: RXFBCON7 = 0xFF;
  3290  0004C6  010E               	movlb	14	; () banked
  3291  0004C8  6978               	setf	120,b	;volatile
  3292                           
  3293                           ;ECAN.c: 171: RXF0EIDH = 0x00;
  3294  0004CA  0E00               	movlw	0
  3295  0004CC  010E               	movlb	14	; () banked
  3296  0004CE  6FE2               	movwf	226,b	;volatile
  3297                           
  3298                           ;ECAN.c: 172: RXF0EIDL = 0x00;
  3299  0004D0  0E00               	movlw	0
  3300  0004D2  010E               	movlb	14	; () banked
  3301  0004D4  6FE3               	movwf	227,b	;volatile
  3302                           
  3303                           ;ECAN.c: 173: RXF0SIDH = 0x32;
  3304  0004D6  0E32               	movlw	50
  3305  0004D8  010E               	movlb	14	; () banked
  3306  0004DA  6FE0               	movwf	224,b	;volatile
  3307                           
  3308                           ;ECAN.c: 174: RXF0SIDL = 0xC0;
  3309  0004DC  0EC0               	movlw	192
  3310  0004DE  010E               	movlb	14	; () banked
  3311  0004E0  6FE1               	movwf	225,b	;volatile
  3312                           
  3313                           ;ECAN.c: 175: RXF1EIDH = 0x00;
  3314  0004E2  0E00               	movlw	0
  3315  0004E4  010E               	movlb	14	; () banked
  3316  0004E6  6FE6               	movwf	230,b	;volatile
  3317                           
  3318                           ;ECAN.c: 176: RXF1EIDL = 0x00;
  3319  0004E8  0E00               	movlw	0
  3320  0004EA  010E               	movlb	14	; () banked
  3321  0004EC  6FE7               	movwf	231,b	;volatile
  3322                           
  3323                           ;ECAN.c: 177: RXF1SIDH = 0x33;
  3324  0004EE  0E33               	movlw	51
  3325  0004F0  010E               	movlb	14	; () banked
  3326  0004F2  6FE4               	movwf	228,b	;volatile
  3327                           
  3328                           ;ECAN.c: 178: RXF1SIDL = 0x40;
  3329  0004F4  0E40               	movlw	64
  3330  0004F6  010E               	movlb	14	; () banked
  3331  0004F8  6FE5               	movwf	229,b	;volatile
  3332                           
  3333                           ;ECAN.c: 179: RXF2EIDH = 0x00;
  3334  0004FA  0E00               	movlw	0
  3335  0004FC  010E               	movlb	14	; () banked
  3336  0004FE  6FEA               	movwf	234,b	;volatile
  3337                           
  3338                           ;ECAN.c: 180: RXF2EIDL = 0x00;
  3339  000500  0E00               	movlw	0
  3340  000502  010E               	movlb	14	; () banked
  3341  000504  6FEB               	movwf	235,b	;volatile
  3342                           
  3343                           ;ECAN.c: 181: RXF2SIDH = 0x33;
  3344  000506  0E33               	movlw	51
  3345  000508  010E               	movlb	14	; () banked
  3346  00050A  6FE8               	movwf	232,b	;volatile
  3347                           
  3348                           ;ECAN.c: 182: RXF2SIDL = 0xC0;
  3349  00050C  0EC0               	movlw	192
  3350  00050E  010E               	movlb	14	; () banked
  3351  000510  6FE9               	movwf	233,b	;volatile
  3352                           
  3353                           ;ECAN.c: 185: if (0 ==1)
  3354  000512  D00E               	goto	l2467
  3355  000514                     l2461:
  3356  000514  386E               	swapf	3950,w,c	;volatile
  3357  000516  32E8               	rrcf	wreg,f,c
  3358  000518  0B07               	andlw	7
  3359  00051A  0A40               	xorlw	64
  3360  00051C  A4D8               	btfss	status,2,c
  3361  00051E  D017               	goto	l2475
  3362  000520  D7F9               	goto	l2461
  3363  000522                     l2465:
  3364  000522  386E               	swapf	3950,w,c	;volatile
  3365  000524  32E8               	rrcf	wreg,f,c
  3366  000526  0B07               	andlw	7
  3367  000528  0A60               	xorlw	96
  3368  00052A  A4D8               	btfss	status,2,c
  3369  00052C  D010               	goto	l2475
  3370  00052E  D7F9               	goto	l2465
  3371  000530                     l2467:
  3372                           
  3373                           ;ECAN.c: 196: CANCON = 0x00;
  3374  000530  0E00               	movlw	0
  3375  000532  6E6F               	movwf	3951,c	;volatile
  3376  000534                     l2469:
  3377  000534  386E               	swapf	3950,w,c	;volatile
  3378  000536  32E8               	rrcf	wreg,f,c
  3379  000538  0B07               	andlw	7
  3380  00053A  0900               	iorlw	0
  3381  00053C  A4D8               	btfss	status,2,c
  3382  00053E  D007               	goto	l2475
  3383  000540  D7F9               	goto	l2469
  3384  000542                     l2473:
  3385  000542  386E               	swapf	3950,w,c	;volatile
  3386  000544  32E8               	rrcf	wreg,f,c
  3387  000546  0B07               	andlw	7
  3388  000548  0A40               	xorlw	64
  3389  00054A  B4D8               	btfsc	status,2,c
  3390  00054C  D7FA               	goto	l2473
  3391  00054E                     l2475:
  3392                           
  3393                           ;ECAN.c: 204: }
  3394                           ;ECAN.c: 207: RXB0CON = 0x00;
  3395  00054E  0E00               	movlw	0
  3396  000550  6E60               	movwf	3936,c	;volatile
  3397                           
  3398                           ;ECAN.c: 208: RXB1CON = 0x00;
  3399  000552  0E00               	movlw	0
  3400  000554  010F               	movlb	15	; () banked
  3401  000556  6F30               	movwf	48,b	;volatile
  3402                           
  3403                           ;ECAN.c: 211: CAN_ERRORBIT = 0;
  3404  000558  0E00               	movlw	0
  3405  00055A  0100               	movlb	0	; () banked
  3406  00055C  6F69               	movwf	(_CAN_ERRORBIT+1)& (0+255),b
  3407  00055E  0E00               	movlw	0
  3408  000560  6F68               	movwf	_CAN_ERRORBIT& (0+255),b
  3409                           
  3410                           ; BSR set to: 0
  3411  000562  0012               	return		;funcret
  3412  000564                     __end_of_CANSetup:
  3413                           	opt stack 0
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           intcon	equ	0xFF2
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1l	equ	0xFE1
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _ISR *****************
  3426 ;; Defined at:
  3427 ;;		line 72 in file "main.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;Total ram usage:       14 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    2
  3448 ;; This function calls:
  3449 ;;		_danger
  3450 ;; This function is called by:
  3451 ;;		Interrupt level 2
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	intcode
  3456  000008                     __pintcode:
  3457                           	opt stack 0
  3458  000008                     _ISR:
  3459                           	opt stack 25
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;incstack = 0
  3463  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3464  00000A  CFFA F03A          	movff	pclath,??_ISR
  3465  00000E  CFFB F03B          	movff	pclatu,??_ISR+1
  3466  000012  CFE9 F03C          	movff	fsr0l,??_ISR+2
  3467  000016  CFEA F03D          	movff	fsr0h,??_ISR+3
  3468  00001A  CFE1 F03E          	movff	fsr1l,??_ISR+4
  3469  00001E  CFE2 F03F          	movff	fsr1h,??_ISR+5
  3470  000022  CFD9 F040          	movff	fsr2l,??_ISR+6
  3471  000026  CFDA F041          	movff	fsr2h,??_ISR+7
  3472  00002A  CFF3 F042          	movff	prodl,??_ISR+8
  3473  00002E  CFF4 F043          	movff	prodh,??_ISR+9
  3474  000032  CFF6 F044          	movff	tblptrl,??_ISR+10
  3475  000036  CFF7 F045          	movff	tblptrh,??_ISR+11
  3476  00003A  CFF8 F046          	movff	tblptru,??_ISR+12
  3477  00003E  CFF5 F047          	movff	tablat,??_ISR+13
  3478                           
  3479                           ;main.c: 76: if(IRXIF){
  3480  000042  AE77               	btfss	3959,7,c	;volatile
  3481  000044  D009               	goto	i2l2287
  3482                           
  3483                           ;main.c: 77: if(TXB0CONbits.TXERR){
  3484  000046  010F               	movlb	15	; () banked
  3485  000048  A920               	btfss	32,4,b	;volatile
  3486  00004A  D005               	goto	i2l2285
  3487                           
  3488                           ; BSR set to: 15
  3489                           ;main.c: 78: CAN_ERRORBIT = 1;
  3490  00004C  0E00               	movlw	0
  3491  00004E  0100               	movlb	0	; () banked
  3492  000050  6F69               	movwf	(_CAN_ERRORBIT+1)& (0+255),b
  3493  000052  0E01               	movlw	1
  3494  000054  6F68               	movwf	_CAN_ERRORBIT& (0+255),b
  3495  000056                     i2l2285:
  3496                           
  3497                           ;main.c: 80: }
  3498                           ;main.c: 81: IRXIF = 0;
  3499  000056  9E77               	bcf	3959,7,c	;volatile
  3500  000058                     i2l2287:
  3501                           
  3502                           ;main.c: 82: }
  3503                           ;main.c: 86: if(TMR0IF == 1){
  3504  000058  A4F2               	btfss	intcon,2,c	;volatile
  3505  00005A  D021               	goto	i2l2297
  3506                           
  3507                           ;main.c: 87: if(!FIRST_SEND){
  3508  00005C  5005               	movf	_FIRST_SEND,w,c
  3509  00005E  1006               	iorwf	_FIRST_SEND+1,w,c
  3510  000060  A4D8               	btfss	status,2,c
  3511  000062  D01C               	goto	i2l2295
  3512                           
  3513                           ;main.c: 88: heartBeatCounter++;
  3514  000064  0E01               	movlw	1
  3515  000066  0100               	movlb	0	; () banked
  3516  000068  2760               	addwf	_heartBeatCounter& (0+255),f,b
  3517  00006A  0E00               	movlw	0
  3518  00006C  2361               	addwfc	(_heartBeatCounter+1)& (0+255),f,b
  3519  00006E  2362               	addwfc	(_heartBeatCounter+2)& (0+255),f,b
  3520  000070  2363               	addwfc	(_heartBeatCounter+3)& (0+255),f,b
  3521                           
  3522                           ;main.c: 89: if(heartBeatCounter > 35){
  3523  000072  0100               	movlb	0	; () banked
  3524  000074  BF63               	btfsc	(_heartBeatCounter+3)& (0+255),7,b
  3525  000076  D012               	goto	i2l2295
  3526  000078  0100               	movlb	0	; () banked
  3527  00007A  5163               	movf	(_heartBeatCounter+3)& (0+255),w,b
  3528  00007C  0100               	movlb	0	; () banked
  3529  00007E  1162               	iorwf	(_heartBeatCounter+2)& (0+255),w,b
  3530  000080  0100               	movlb	0	; () banked
  3531  000082  1161               	iorwf	(_heartBeatCounter+1)& (0+255),w,b
  3532  000084  E105               	bnz	i2u113_40
  3533  000086  0E24               	movlw	36
  3534  000088  0100               	movlb	0	; () banked
  3535  00008A  5D60               	subwf	_heartBeatCounter& (0+255),w,b
  3536  00008C  A0D8               	btfss	status,0,c
  3537  00008E  D006               	goto	i2l2295
  3538  000090                     i2u113_40:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;main.c: 90: danger(HEARTBEAT_ERRORCODE);
  3542  000090  C04A  F033         	movff	_HEARTBEAT_ERRORCODE,danger@errorCode
  3543  000094  C04B  F034         	movff	_HEARTBEAT_ERRORCODE+1,danger@errorCode+1
  3544  000098  EC6A  F004         	call	_danger	;wreg free
  3545  00009C                     i2l2295:
  3546                           
  3547                           ;main.c: 91: }
  3548                           ;main.c: 92: }
  3549                           ;main.c: 93: TMR0IF = 0;
  3550  00009C  94F2               	bcf	intcon,2,c	;volatile
  3551  00009E                     i2l2297:
  3552                           
  3553                           ;main.c: 94: }
  3554                           ;main.c: 98: if(TMR1IF == 1){
  3555  00009E  A09E               	btfss	3998,0,c	;volatile
  3556  0000A0  D049               	goto	i2l153
  3557                           
  3558                           ;main.c: 99: if(MAP_V_BLINK == 1){
  3559  0000A2  0413               	decf	_MAP_V_BLINK,w,c
  3560  0000A4  1014               	iorwf	_MAP_V_BLINK+1,w,c
  3561  0000A6  A4D8               	btfss	status,2,c
  3562  0000A8  D020               	goto	i2l2311
  3563                           
  3564                           ;main.c: 100: blinkCounter++;
  3565  0000AA  0E01               	movlw	1
  3566  0000AC  2601               	addwf	_blinkCounter,f,c
  3567  0000AE  0E00               	movlw	0
  3568  0000B0  2202               	addwfc	_blinkCounter+1,f,c
  3569  0000B2  2203               	addwfc	_blinkCounter+2,f,c
  3570  0000B4  2204               	addwfc	_blinkCounter+3,f,c
  3571                           
  3572                           ;main.c: 102: if(blinkCounter == 13){
  3573  0000B6  0E0D               	movlw	13
  3574  0000B8  1801               	xorwf	_blinkCounter,w,c
  3575  0000BA  1002               	iorwf	_blinkCounter+1,w,c
  3576  0000BC  1003               	iorwf	_blinkCounter+2,w,c
  3577  0000BE  1004               	iorwf	_blinkCounter+3,w,c
  3578  0000C0  B4D8               	btfsc	status,2,c
  3579                           
  3580                           ;main.c: 103: LATBbits.LATB5 = 0;
  3581  0000C2  9A8A               	bcf	3978,5,c	;volatile
  3582                           
  3583                           ;main.c: 104: }
  3584                           ;main.c: 105: if(blinkCounter > 26){
  3585  0000C4  BE04               	btfsc	_blinkCounter+3,7,c
  3586  0000C6  D011               	goto	i2l2311
  3587  0000C8  5004               	movf	_blinkCounter+3,w,c
  3588  0000CA  1003               	iorwf	_blinkCounter+2,w,c
  3589  0000CC  1002               	iorwf	_blinkCounter+1,w,c
  3590  0000CE  E104               	bnz	i2u117_40
  3591  0000D0  0E1B               	movlw	27
  3592  0000D2  5C01               	subwf	_blinkCounter,w,c
  3593  0000D4  A0D8               	btfss	status,0,c
  3594  0000D6  D009               	goto	i2l2311
  3595  0000D8                     i2u117_40:
  3596                           
  3597                           ;main.c: 106: LATBbits.LATB5 = 1;
  3598  0000D8  8A8A               	bsf	3978,5,c	;volatile
  3599                           
  3600                           ;main.c: 107: blinkCounter = 0;
  3601  0000DA  0E00               	movlw	0
  3602  0000DC  6E01               	movwf	_blinkCounter,c
  3603  0000DE  0E00               	movlw	0
  3604  0000E0  6E02               	movwf	_blinkCounter+1,c
  3605  0000E2  0E00               	movlw	0
  3606  0000E4  6E03               	movwf	_blinkCounter+2,c
  3607  0000E6  0E00               	movlw	0
  3608  0000E8  6E04               	movwf	_blinkCounter+3,c
  3609  0000EA                     i2l2311:
  3610                           
  3611                           ;main.c: 108: }
  3612                           ;main.c: 110: }
  3613                           ;main.c: 112: if(MAP_H_BLINK == 1){
  3614  0000EA  040F               	decf	_MAP_H_BLINK,w,c
  3615  0000EC  1010               	iorwf	_MAP_H_BLINK+1,w,c
  3616  0000EE  A4D8               	btfss	status,2,c
  3617  0000F0  D020               	goto	i2l2323
  3618                           
  3619                           ;main.c: 113: blinkCounter++;
  3620  0000F2  0E01               	movlw	1
  3621  0000F4  2601               	addwf	_blinkCounter,f,c
  3622  0000F6  0E00               	movlw	0
  3623  0000F8  2202               	addwfc	_blinkCounter+1,f,c
  3624  0000FA  2203               	addwfc	_blinkCounter+2,f,c
  3625  0000FC  2204               	addwfc	_blinkCounter+3,f,c
  3626                           
  3627                           ;main.c: 115: if(blinkCounter == 13){
  3628  0000FE  0E0D               	movlw	13
  3629  000100  1801               	xorwf	_blinkCounter,w,c
  3630  000102  1002               	iorwf	_blinkCounter+1,w,c
  3631  000104  1003               	iorwf	_blinkCounter+2,w,c
  3632  000106  1004               	iorwf	_blinkCounter+3,w,c
  3633  000108  B4D8               	btfsc	status,2,c
  3634                           
  3635                           ;main.c: 116: LATBbits.LATB6 = 0;
  3636  00010A  9C8A               	bcf	3978,6,c	;volatile
  3637                           
  3638                           ;main.c: 117: }
  3639                           ;main.c: 118: if(blinkCounter > 26){
  3640  00010C  BE04               	btfsc	_blinkCounter+3,7,c
  3641  00010E  D011               	goto	i2l2323
  3642  000110  5004               	movf	_blinkCounter+3,w,c
  3643  000112  1003               	iorwf	_blinkCounter+2,w,c
  3644  000114  1002               	iorwf	_blinkCounter+1,w,c
  3645  000116  E104               	bnz	i2u120_40
  3646  000118  0E1B               	movlw	27
  3647  00011A  5C01               	subwf	_blinkCounter,w,c
  3648  00011C  A0D8               	btfss	status,0,c
  3649  00011E  D009               	goto	i2l2323
  3650  000120                     i2u120_40:
  3651                           
  3652                           ;main.c: 119: LATBbits.LATB6 = 1;
  3653  000120  8C8A               	bsf	3978,6,c	;volatile
  3654                           
  3655                           ;main.c: 120: blinkCounter = 0;
  3656  000122  0E00               	movlw	0
  3657  000124  6E01               	movwf	_blinkCounter,c
  3658  000126  0E00               	movlw	0
  3659  000128  6E02               	movwf	_blinkCounter+1,c
  3660  00012A  0E00               	movlw	0
  3661  00012C  6E03               	movwf	_blinkCounter+2,c
  3662  00012E  0E00               	movlw	0
  3663  000130  6E04               	movwf	_blinkCounter+3,c
  3664  000132                     i2l2323:
  3665                           
  3666                           ;main.c: 121: }
  3667                           ;main.c: 123: }
  3668                           ;main.c: 125: TMR1IF = 0;
  3669  000132  909E               	bcf	3998,0,c	;volatile
  3670  000134                     i2l153:
  3671  000134  C047  FFF5         	movff	??_ISR+13,tablat
  3672  000138  C046  FFF8         	movff	??_ISR+12,tblptru
  3673  00013C  C045  FFF7         	movff	??_ISR+11,tblptrh
  3674  000140  C044  FFF6         	movff	??_ISR+10,tblptrl
  3675  000144  C043  FFF4         	movff	??_ISR+9,prodh
  3676  000148  C042  FFF3         	movff	??_ISR+8,prodl
  3677  00014C  C041  FFDA         	movff	??_ISR+7,fsr2h
  3678  000150  C040  FFD9         	movff	??_ISR+6,fsr2l
  3679  000154  C03F  FFE2         	movff	??_ISR+5,fsr1h
  3680  000158  C03E  FFE1         	movff	??_ISR+4,fsr1l
  3681  00015C  C03D  FFEA         	movff	??_ISR+3,fsr0h
  3682  000160  C03C  FFE9         	movff	??_ISR+2,fsr0l
  3683  000164  C03B  FFFB         	movff	??_ISR+1,pclatu
  3684  000168  C03A  FFFA         	movff	??_ISR,pclath
  3685  00016C  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3686  00016E  0011               	retfie		f
  3687  000170                     __end_of_ISR:
  3688                           	opt stack 0
  3689                           pclatu	equ	0xFFB
  3690                           pclath	equ	0xFFA
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           postinc0	equ	0xFEE
  3699                           fsr0h	equ	0xFEA
  3700                           fsr0l	equ	0xFE9
  3701                           wreg	equ	0xFE8
  3702                           postdec1	equ	0xFE5
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           fsr2h	equ	0xFDA
  3706                           fsr2l	equ	0xFD9
  3707                           status	equ	0xFD8
  3708                           
  3709 ;; *************** function _danger *****************
  3710 ;; Defined at:
  3711 ;;		line 16 in file "Other.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  errorCode       2    2[COMRAM] int 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  i               2    7[COMRAM] int 
  3716 ;;  i               2    5[COMRAM] int 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;		None               void
  3719 ;; Registers used:
  3720 ;;		wreg, status,2, status,0, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;Total ram usage:        7 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    1
  3733 ;; This function calls:
  3734 ;;		i2_Delay
  3735 ;; This function is called by:
  3736 ;;		_ISR
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text21
  3741  0008D4                     __ptext21:
  3742                           	opt stack 0
  3743  0008D4                     _danger:
  3744                           	opt stack 25
  3745                           
  3746                           ;Other.c: 19: INTCONbits.GIEH = 0;
  3747                           
  3748                           ;incstack = 0
  3749  0008D4  9EF2               	bcf	intcon,7,c	;volatile
  3750                           
  3751                           ;Other.c: 20: INTCONbits.GIEL = 0;
  3752  0008D6  9CF2               	bcf	intcon,6,c	;volatile
  3753                           
  3754                           ;Other.c: 22: LATBbits.LATB1 = 0;
  3755  0008D8  928A               	bcf	3978,1,c	;volatile
  3756                           
  3757                           ;Other.c: 23: LATBbits.LATB4 = 1;
  3758  0008DA  888A               	bsf	3978,4,c	;volatile
  3759                           
  3760                           ;Other.c: 24: LATBbits.LATB0 = 0;
  3761  0008DC  908A               	bcf	3978,0,c	;volatile
  3762  0008DE                     i2l2203:
  3763                           
  3764                           ;Other.c: 27: for(int i = 0; i< errorCode; i++){
  3765  0008DE  0E00               	movlw	0
  3766  0008E0  6E37               	movwf	danger@i+1,c
  3767  0008E2  0E00               	movlw	0
  3768  0008E4  6E36               	movwf	danger@i,c
  3769  0008E6  D010               	goto	i2l2211
  3770  0008E8                     i2l588:
  3771                           
  3772                           ;Other.c: 28: LATAbits.LATA7 = 1;
  3773  0008E8  8E89               	bsf	3977,7,c	;volatile
  3774                           
  3775                           ;Other.c: 29: Delay((unsigned int)(64/4)*80 * 500);
  3776  0008EA  0EC4               	movlw	196
  3777  0008EC  6E32               	movwf	i2Delay@count+1,c
  3778  0008EE  0E00               	movlw	0
  3779  0008F0  6E31               	movwf	i2Delay@count,c
  3780  0008F2  ECD9  F005         	call	i2_Delay	;wreg free
  3781                           
  3782                           ;Other.c: 30: LATAbits.LATA7 = 0;
  3783  0008F6  9E89               	bcf	3977,7,c	;volatile
  3784                           
  3785                           ;Other.c: 31: Delay((unsigned int)(64/4)*80 * 500);
  3786  0008F8  0EC4               	movlw	196
  3787  0008FA  6E32               	movwf	i2Delay@count+1,c
  3788  0008FC  0E00               	movlw	0
  3789  0008FE  6E31               	movwf	i2Delay@count,c
  3790  000900  ECD9  F005         	call	i2_Delay	;wreg free
  3791  000904  4A36               	infsnz	danger@i,f,c
  3792  000906  2A37               	incf	danger@i+1,f,c
  3793  000908                     i2l2211:
  3794  000908  5033               	movf	danger@errorCode,w,c
  3795  00090A  5C36               	subwf	danger@i,w,c
  3796  00090C  5037               	movf	danger@i+1,w,c
  3797  00090E  0A80               	xorlw	128
  3798  000910  6E35               	movwf	??_danger& (0+255),c
  3799  000912  5034               	movf	danger@errorCode+1,w,c
  3800  000914  0A80               	xorlw	128
  3801  000916  5835               	subwfb	??_danger& (0+255),w,c
  3802  000918  A0D8               	btfss	status,0,c
  3803  00091A  D7E6               	goto	i2l588
  3804                           
  3805                           ;Other.c: 33: }
  3806                           ;Other.c: 35: Delay((unsigned int)(64/4)*80 * 2000);
  3807  00091C  0E10               	movlw	16
  3808  00091E  6E32               	movwf	i2Delay@count+1,c
  3809  000920  0E00               	movlw	0
  3810  000922  6E31               	movwf	i2Delay@count,c
  3811  000924  ECD9  F005         	call	i2_Delay	;wreg free
  3812                           
  3813                           ;Other.c: 37: if(CAN_ERRORBIT == 1){
  3814  000928  0100               	movlb	0	; () banked
  3815  00092A  0568               	decf	_CAN_ERRORBIT& (0+255),w,b
  3816  00092C  0100               	movlb	0	; () banked
  3817  00092E  1169               	iorwf	(_CAN_ERRORBIT+1)& (0+255),w,b
  3818  000930  A4D8               	btfss	status,2,c
  3819  000932  D01F               	goto	i2l2227
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;Other.c: 38: for(int i = 0; i< CAN_ERRORCODE; i++){
  3823  000934  0E00               	movlw	0
  3824  000936  6E39               	movwf	danger@i_1322+1,c
  3825  000938  0E00               	movlw	0
  3826  00093A  6E38               	movwf	danger@i_1322,c
  3827  00093C  D010               	goto	i2l2225
  3828  00093E                     i2l592:
  3829                           
  3830                           ;Other.c: 39: LATAbits.LATA7 = 1;
  3831  00093E  8E89               	bsf	3977,7,c	;volatile
  3832                           
  3833                           ;Other.c: 40: Delay((unsigned int)(64/4)*80 * 500);
  3834  000940  0EC4               	movlw	196
  3835  000942  6E32               	movwf	i2Delay@count+1,c
  3836  000944  0E00               	movlw	0
  3837  000946  6E31               	movwf	i2Delay@count,c
  3838  000948  ECD9  F005         	call	i2_Delay	;wreg free
  3839                           
  3840                           ;Other.c: 41: LATAbits.LATA7 = 0;
  3841  00094C  9E89               	bcf	3977,7,c	;volatile
  3842                           
  3843                           ;Other.c: 42: Delay((unsigned int)(64/4)*80 * 500);
  3844  00094E  0EC4               	movlw	196
  3845  000950  6E32               	movwf	i2Delay@count+1,c
  3846  000952  0E00               	movlw	0
  3847  000954  6E31               	movwf	i2Delay@count,c
  3848  000956  ECD9  F005         	call	i2_Delay	;wreg free
  3849  00095A  4A38               	infsnz	danger@i_1322,f,c
  3850  00095C  2A39               	incf	danger@i_1322+1,f,c
  3851  00095E                     i2l2225:
  3852  00095E  5048               	movf	_CAN_ERRORCODE,w,c
  3853  000960  5C38               	subwf	danger@i_1322,w,c
  3854  000962  5039               	movf	danger@i_1322+1,w,c
  3855  000964  0A80               	xorlw	128
  3856  000966  6E35               	movwf	??_danger& (0+255),c
  3857  000968  5049               	movf	_CAN_ERRORCODE+1,w,c
  3858  00096A  0A80               	xorlw	128
  3859  00096C  5835               	subwfb	??_danger& (0+255),w,c
  3860  00096E  A0D8               	btfss	status,0,c
  3861  000970  D7E6               	goto	i2l592
  3862  000972                     i2l2227:
  3863                           
  3864                           ;Other.c: 44: }
  3865                           ;Other.c: 45: }
  3866                           ;Other.c: 47: Delay((unsigned int)(64/4)*80 * 2000);
  3867  000972  0E10               	movlw	16
  3868  000974  6E32               	movwf	i2Delay@count+1,c
  3869  000976  0E00               	movlw	0
  3870  000978  6E31               	movwf	i2Delay@count,c
  3871  00097A  ECD9  F005         	call	i2_Delay	;wreg free
  3872  00097E  D7AF               	goto	i2l2203
  3873  000980                     __end_of_danger:
  3874                           	opt stack 0
  3875                           pclatu	equ	0xFFB
  3876                           pclath	equ	0xFFA
  3877                           tblptru	equ	0xFF8
  3878                           tblptrh	equ	0xFF7
  3879                           tblptrl	equ	0xFF6
  3880                           tablat	equ	0xFF5
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           postinc0	equ	0xFEE
  3885                           fsr0h	equ	0xFEA
  3886                           fsr0l	equ	0xFE9
  3887                           wreg	equ	0xFE8
  3888                           postdec1	equ	0xFE5
  3889                           fsr1h	equ	0xFE2
  3890                           fsr1l	equ	0xFE1
  3891                           fsr2h	equ	0xFDA
  3892                           fsr2l	equ	0xFD9
  3893                           status	equ	0xFD8
  3894                           
  3895 ;; *************** function i2_Delay *****************
  3896 ;; Defined at:
  3897 ;;		line 10 in file "Other.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  count           2    0[COMRAM] unsigned int 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;		None               void
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;Total ram usage:        2 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_danger
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text22
  3925  000BB2                     __ptext22:
  3926                           	opt stack 0
  3927  000BB2                     i2_Delay:
  3928                           	opt stack 25
  3929  000BB2                     i2l1977:
  3930  000BB2  0631               	decf	i2Delay@count,f,c
  3931  000BB4  A0D8               	btfss	status,0,c
  3932  000BB6  0632               	decf	i2Delay@count+1,f,c
  3933  000BB8  2831               	incf	i2Delay@count,w,c
  3934  000BBA  E1FB               	bnz	i2l1977
  3935  000BBC  2832               	incf	i2Delay@count+1,w,c
  3936  000BBE  B4D8               	btfsc	status,2,c
  3937  000BC0  0012               	return	
  3938  000BC2  D7F7               	goto	i2l1977
  3939  000BC4                     __end_ofi2_Delay:
  3940                           	opt stack 0
  3941  0000                     pclatu	equ	0xFFB
  3942                           pclath	equ	0xFFA
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           intcon	equ	0xFF2
  3950                           postinc0	equ	0xFEE
  3951                           fsr0h	equ	0xFEA
  3952                           fsr0l	equ	0xFE9
  3953                           wreg	equ	0xFE8
  3954                           postdec1	equ	0xFE5
  3955                           fsr1h	equ	0xFE2
  3956                           fsr1l	equ	0xFE1
  3957                           fsr2h	equ	0xFDA
  3958                           fsr2l	equ	0xFD9
  3959                           status	equ	0xFD8
  3960                           pclatu	equ	0xFFB
  3961                           pclath	equ	0xFFA
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           intcon	equ	0xFF2
  3969                           postinc0	equ	0xFEE
  3970                           fsr0h	equ	0xFEA
  3971                           fsr0l	equ	0xFE9
  3972                           wreg	equ	0xFE8
  3973                           postdec1	equ	0xFE5
  3974                           fsr1h	equ	0xFE2
  3975                           fsr1l	equ	0xFE1
  3976                           fsr2h	equ	0xFDA
  3977                           fsr2l	equ	0xFD9
  3978                           status	equ	0xFD8
  3979                           
  3980                           	psect	rparam
  3981  0000                     pclatu	equ	0xFFB
  3982                           pclath	equ	0xFFA
  3983                           tblptru	equ	0xFF8
  3984                           tblptrh	equ	0xFF7
  3985                           tblptrl	equ	0xFF6
  3986                           tablat	equ	0xFF5
  3987                           prodh	equ	0xFF4
  3988                           prodl	equ	0xFF3
  3989                           intcon	equ	0xFF2
  3990                           postinc0	equ	0xFEE
  3991                           fsr0h	equ	0xFEA
  3992                           fsr0l	equ	0xFE9
  3993                           wreg	equ	0xFE8
  3994                           postdec1	equ	0xFE5
  3995                           fsr1h	equ	0xFE2
  3996                           fsr1l	equ	0xFE1
  3997                           fsr2h	equ	0xFDA
  3998                           fsr2l	equ	0xFD9
  3999                           status	equ	0xFD8
  4000                           
  4001                           	psect	temp
  4002  00004F                     btemp:
  4003                           	opt stack 0
  4004  00004F                     	ds	1
  4005  0000                     int$flags	set	btemp
  4006                           pclatu	equ	0xFFB
  4007                           pclath	equ	0xFFA
  4008                           tblptru	equ	0xFF8
  4009                           tblptrh	equ	0xFF7
  4010                           tblptrl	equ	0xFF6
  4011                           tablat	equ	0xFF5
  4012                           prodh	equ	0xFF4
  4013                           prodl	equ	0xFF3
  4014                           intcon	equ	0xFF2
  4015                           postinc0	equ	0xFEE
  4016                           fsr0h	equ	0xFEA
  4017                           fsr0l	equ	0xFE9
  4018                           wreg	equ	0xFE8
  4019                           postdec1	equ	0xFE5
  4020                           fsr1h	equ	0xFE2
  4021                           fsr1l	equ	0xFE1
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         74
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      78
    BANK0           160     16      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_danger
    _danger->i2_Delay

Critical Paths under _main in BANK0

    _main->_checkAccelerator
    _updateInputs->_readAnalog
    _readAnalog->_Delay
    _checkAccelerator->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2388
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                         _InitDevice
                   _checkAccelerator
                     _checkBacklight
                         _checkBrake
                     _checkDirection
                       _checkH_blink
                     _checkSafetyPin
                          _checkStop
                       _checkV_blink
                    _setup_Interrupt
                           _unZipCAN
                       _updateInputs
 ---------------------------------------------------------------------------------
 (1) _updateInputs                                         0     0      0     389
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           8     6      2     389
                                              2 BANK0      8     6      2
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     0      2     253
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _unZipCAN                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkV_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkStop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSafetyPin                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkH_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDirection                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBrake                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBacklight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkAccelerator                                     8     8      0     819
                                              8 BANK0      8     8      0
                            ___awdiv
                         _startMotor
 ---------------------------------------------------------------------------------
 (2) _startMotor                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     553
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10     881
                                              0 BANK0     11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0     291
                                              9 COMRAM    14    14      0
                             _danger
 ---------------------------------------------------------------------------------
 (5) _danger                                               7     5      2     291
                                              2 COMRAM     7     5      2
                            i2_Delay
 ---------------------------------------------------------------------------------
 (6) i2_Delay                                              2     0      2     178
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _InitDevice
   _checkAccelerator
     ___awdiv
     _startMotor
   _checkBacklight
   _checkBrake
   _checkDirection
   _checkH_blink
   _checkSafetyPin
   _checkStop
   _checkV_blink
   _setup_Interrupt
   _unZipCAN
   _updateInputs
     _readAnalog
       _Delay

 _ISR (ROOT)
   _danger
     i2_Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      2C       5       27.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      4E       1       83.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A       6        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 07 16:58:39 2016

                   _MAP_BACKLIGHT 0007              __end_of_checkV_blink 0AD0  
                 _MAP_ACCELERATOR 006A                   ?_checkBacklight 0031  
                    ___awdiv@sign 007F                       __CFG_BORV$3 000000  
          __end_of_checkSafetyPin 0B82                 ?_checkAccelerator 0031  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l474 077A                               l476 07BA  
                             l749 0996                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _ISR 0008  
              ??_checkAccelerator 0082                               wreg 000FE8  
                            ?_ISR 0031                     _MAP_HEARTBEAT 006C  
                            _B0D0 000E86                              _B0D1 000E87  
                            _B0D2 000E88                              _B0D3 000E89  
                            _B0D4 000E8A                              _B0D5 000E8B  
                            _B0D6 000E8C                              _B0D7 000E8D  
                   _MAP_DIRECTION 000D                              l2511 0812  
                            l2327 0B82                              l2433 0434  
                            l2361 0832                              l2461 0514  
                            l2373 0866                              l2349 09D4  
                            l2375 0872                              l2367 0848  
                            l2473 0542                              l2465 0522  
                            l2393 08CA                              l2385 08A8  
                            l2377 0878                              l2475 054E  
                            l2467 0530                              l2635 0696  
                            l2469 0534                              l2389 08B6  
                            l2583 0624                              l2647 06CC  
                            l2497 07F8                              l2585 0628  
                            l2577 05E4                              l2499 07FE  
                            l2589 0654                   ?_checkDirection 0031  
                            u1500 0A70                              u1405 0236  
                            _LATA 000F89                              _LATB 000F8A  
                            u1415 026C                              _LATC 000F8B  
                            u1440 0B30                              u1425 02A2  
                            u1530 0BA8                              u1515 0A80  
                            u1435 02D8                              u1460 0B52  
                            u1516 0A82                              u1540 0B78  
                            u1525 0A9A                              u1526 0A9C  
                            u1550 0B0C                              u1480 0AAC  
                            u1570 0582                              u1475 0B62  
                            u1476 0B64                              u1495 0ACC  
                            u1496 0ACE                   __end_ofi2_Delay 0BC4  
                            _main 065A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 004F  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0170  
                   __CFG_IESO$OFF 000000                  __end_of_CANSetup 0564  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                           ??_ISR 003A                     _MAP_SAFETYPIN 006E  
                 ?_checkSafetyPin 0031                             _B0DLC 000E85  
                           ?_main 0031                   __end_of___awdiv 08D4  
                           _BSEL0 000E7D                   ___awdiv@divisor 007C  
                           i2l153 0134                             i2l592 093E  
                           i2l588 08E8                   ___awdiv@counter 007E  
                           _MSEL0 000E79                             _MSEL1 000E7A  
                           _MSEL2 000E7B                             _MSEL3 000E7C  
                           _IRXIF 007BBF                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                   __CFG_SOSCSEL$ 000000                             _Delay 0B82  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                 danger@errorCode 0033                    __CFG_EBTRB$OFF 000000  
                           _count 004E                             tablat 000FF5  
                           status 000FD8                        _InitDevice 02F0  
           __size_of_ECAN_Receive 00DE               _HEARTBEAT_ERRORCODE 004A  
                 __initialization 09DE                      _deadArea_gas 008A  
                    __end_of_main 0738                            ??_main 008A  
                   __activetblptr 000000                    __CFG_RETEN$OFF 000000  
                          ?_Delay 007A                            _B0EIDH 000E83  
                          _B0EIDL 000E84                  ECAN_Transmit@DLC 007B  
                          _B0SIDH 000E81                            _B0SIDL 000E82  
                       ??i2_Delay 0033                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _ANCON0 000F5D  
                          _ANCON1 000F5C                  ___awdiv@dividend 007A  
           __size_of_checkH_blink 003C                      _ECAN_Receive 0738  
                  _TEMP_MAP_BRAKE 0017                   __CFG_BBSIZ$BB2K 000000  
                          i2l2211 0908                            i2l2203 08DE  
                          i2l2311 00EA                            i2l2225 095E  
                          i2l2227 0972                            i2l2323 0132  
                          i2l2285 0056                            i2l2295 009C  
                          i2l2287 0058                            i2l2297 009E  
                          i2l1977 0BB2                      _CAN_ERRORBIT 0068  
        __size_of_setup_Interrupt 002E                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F36                            _RXB0D5 000F6B  
                          _RXB1D1 000F37                            _RXB0D6 000F6C  
                          _RXB1D2 000F38                            _RXB0D7 000F6D  
                          _RXB1D3 000F39                            _RXB1D4 000F3A  
                          _RXB1D5 000F3B                            _RXB1D6 000F3C  
                          _RXB1D7 000F3D                            _TMR0IF 007F92  
                          _TMR1IF 007CF0                            _TXB0D0 000F26  
                          _TXB0D1 000F27                            _TXB0D2 000F28  
                          _TXB0D3 000F29                            _TXB0D4 000F2A  
                          _TXB0D5 000F2B                            _TXB0D6 000F2C  
                          _TXB0D7 000F2D             __size_of_checkV_blink 0032  
                  __CFG_XINST$OFF 000000                         ??___awdiv 007E  
                  __CFG_STVREN$ON 000000                            _danger 08D4  
                _heartBeatCounter 0060                            clear_0 09E4  
                          clear_1 09F0                  ___awdiv@quotient 0080  
                    _checkH_blink 0A62                  __end_of_unZipCAN 02F0  
                    __pdataCOMRAM 0048                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                       ?_CANSetup 0031                      _checkV_blink 0A9E  
                      __accesstop 0060           __end_of__initialization 0A16  
        ECAN_Transmit@TRANSMIT_ID 007C              _TEMP_MAP_ACCELERATOR 0074  
                   ___rparam_used 000001                  ??_checkBacklight 007A  
                     ?_InitDevice 0031                     __end_of_Delay 0B9A  
                  __pcstackCOMRAM 0031                __size_of_checkStop 0024  
          __size_of_ECAN_Transmit 0042                           ??_Delay 007C  
                ??_checkDirection 007A              readAnalog@totBattery 0082  
                      ??_CANSetup 007A                        _checkBrake 0B22  
                      __pbssBANK0 0060         __size_of_checkAccelerator 00F6  
                 __CFG_PLLCFG$OFF 000000                        __pnvCOMRAM 004E  
               ??_setup_Interrupt 007A                  ??_checkSafetyPin 007A  
               ECAN_Transmit@SIDH 0084                 ECAN_Transmit@SIDL 007A  
                         ?_danger 0033                         _B0CONbits 000E80  
                         _ECANCON 000F72                      _blinkCounter 0001  
                         _BITDATA 0023                           _BRGCON1 000E43  
                         _BRGCON2 000E44                           _BRGCON3 000E45  
                __CFG_CANMX$PORTB 000000                     _CAN_ERRORCODE 0048  
             __size_of_InitDevice 0140                  _BATTERISTATUS_ID 004C  
                         _RXB0DLC 000F65                           _RXB1DLC 000F35  
                         _RXB0CON 000F60                           _RXB1CON 000F30  
                         _TXB0DLC 000F25                           i2_Delay 0BB2  
                         _RXFCON0 000E46                           _RXFCON1 000E47  
                   _ECAN_Transmit 0A20                 __end_of_checkStop 0B22  
                  readAnalog@high 0080                   __CFG_PWRTEN$OFF 000000  
                         __Hparam 0000                           __Lparam 0000  
                       ?_unZipCAN 0031                        _readAnalog 0980  
                         ___awdiv 0816                   __size_of_danger 00AC  
                         __pcinit 09DE                           __ramtop 0F00  
                         __ptext0 065A                           __ptext1 0BC4  
                         __ptext2 0980                           __ptext3 0B82  
                         __ptext4 0174                           __ptext5 0AD0  
                         __ptext6 0A9E                           __ptext7 0AFE  
                         __ptext8 0B66                           __ptext9 0A62  
                       _T0CONbits 000FD5                      __size_of_ISR 0168  
                       _T1CONbits 000FCD                  _TEMP_ACCELERATOR 0024  
                         danger@i 0036                 __CFG_MSSPMSK$MSK7 000000  
                         _temp_D2 0026                           _temp_D3 0027  
                         _temp_D4 0028                           _temp_D5 0029  
                         _temp_D6 002A                           _temp_D7 002B  
                  ?_ECAN_Transmit 007A                       ?_checkBrake 0031  
                       _MAP_BRAKE 000B              end_of_initialization 0A16  
               _MAP_BATTERYSTATUS 0009                        ??_unZipCAN 007A  
                _buttonWasPressed 0025                           postdec1 000FE5  
                         postinc0 000FEE                  __CFG_FOSC$INTIO2 000000  
             checkAccelerator@gas 0088                        _startMotor 0BD2  
                _checkAccelerator 0564                 __size_of_CANSetup 0134  
                    ??_InitDevice 007A                     ?_updateInputs 0031  
                     ?_readAnalog 007C               __size_of_checkBrake 0022  
                  __end_of_danger 0980                     __pidataCOMRAM 0BDE  
                    _MAP_VELOCITY 0070               start_initialization 09DE  
                 ??_ECAN_Transmit 0084                       __end_of_ISR 0170  
              __end_of_InitDevice 0430                   _setup_Interrupt 0AD0  
                     _CANSTATbits 000F6E                _OFFSET_ACCELERATOR 0072  
                  ??_updateInputs 0084                     _TEMP_MAP_STOP 001F  
                        ??_danger 0035                      danger@i_1322 0038  
                     __pbssCOMRAM 0001                     __pcstackBANK0 007A  
                        ?i2_Delay 0031               __size_of_readAnalog 005E  
                     ?_startMotor 0031                         _checkStop 0AFE  
                       __pnvBANK0 008A                ECAN_Transmit@DATA1 007D  
              ECAN_Transmit@DATA2 007E                ECAN_Transmit@DATA3 007F  
              ECAN_Transmit@DATA4 0080                ECAN_Transmit@DATA5 0081  
              ECAN_Transmit@DATA6 0082                ECAN_Transmit@DATA7 0083  
                       __pintcode 0008                          ?___awdiv 007A  
               __size_of_unZipCAN 017C           __size_of_checkBacklight 0022  
                  _heartbeatCount 0078                      i2Delay@count 0031  
         __end_of_setup_Interrupt 0AFE                    __size_of_Delay 0018  
                   readAnalog@low 007E                          _CANSetup 0430  
                    ??_checkBrake 007A                     ?_ECAN_Receive 0031  
                        _LATAbits 000F89                          _LATBbits 000F8A  
         __size_of_checkDirection 0018                        ?_checkStop 0031  
                        _MAP_STOP 0011                          _PIE1bits 000F9D  
                _TEMP_MAP_H_BLINK 001B                         _temp_EIDH 002D  
                       _temp_EIDL 002E                         _temp_SIDH 002F  
                       _temp_SIDL 0030                          i2u120_40 0120  
                        i2u113_40 0090                          i2u117_40 00D8  
                        _PIR5bits 000F77                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F33  
                        _RXB1EIDL 000F34                          _RCONbits 000FD0  
                        _MOTOR_ID 004D                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXB1SIDH 000F31  
                        _RXF0EIDH 000EE2                          _RXB1SIDL 000F32  
                        _RXF0EIDL 000EE3                          _RXF1EIDH 000EE6  
                        _RXF1EIDL 000EE7                          _RXF2EIDH 000EEA  
                        _RXF2EIDL 000EEB                          _RXF0SIDH 000EE0  
                        _RXF0SIDL 000EE1                          _TXB0EIDH 000F23  
                        _RXF1SIDH 000EE4                          _TXB0EIDL 000F24  
                        _RXF1SIDL 000EE5                          _RXF2SIDH 000EE8  
                        _RXF2SIDL 000EE9                          _RXM0EIDH 000EFA  
                        _RXM0EIDL 000EFB                          _TXB0SIDH 000F21  
                        _RXM1EIDH 000EFE                          _TXB0SIDL 000F22  
                        _RXM1EIDL 000EFF                  _TEMP_MAP_V_BLINK 0021  
                        _RXFBCON0 000E71                          _RXFBCON1 000E72  
                        _RXFBCON2 000E73                          _RXFBCON3 000E74  
                        _RXFBCON4 000E75                          _RXFBCON5 000E76  
                        _RXFBCON6 000E77                          _RXFBCON7 000E78  
                        _RXM0SIDH 000EF8                          _RXM0SIDL 000EF9  
                        _RXM1SIDH 000EFC                          _RXM1SIDL 000EFD  
             __size_of_startMotor 000C          __end_of_checkAccelerator 065A  
              __end_of_checkBrake 0B44                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0             ECAN_Receive@RXMsgFlag 007A  
                   ?_checkH_blink 0031  checkAccelerator@HALF_ACCELERATOR 0085  
         __size_of_checkSafetyPin 001C              __end_of_updateInputs 0BD2  
                   ?_checkV_blink 0031                    ??_ECAN_Receive 007A  
                     _MAP_H_BLINK 000F                  __size_ofi2_Delay 0012  
                       copy_data0 0A0A                       _MAP_V_BLINK 0013  
                        __Hrparam 0000                          __Lrparam 0000  
                    ??_readAnalog 007E                __CFG_BOREN$SBORDIS 000000  
                __size_of___awdiv 00BE                _TEMP_MAP_BACKLIGHT 0015  
                  ??_checkH_blink 007A                  _interruptCounter 0064  
                ?_setup_Interrupt 0031                    ??_checkV_blink 007A  
                        __ptext10 0B9A                          __ptext11 0B22  
                        __ptext12 0B44                          __ptext21 08D4  
                        __ptext13 0564                        _T1GCONbits 000FAA  
                        __ptext22 0BB2                          __ptext14 0BD2  
                        __ptext15 0816                          __ptext16 02F0  
                        __ptext17 0A20                          __ptext18 0738  
                        __ptext19 0430                __end_of_readAnalog 09DE  
                   __size_of_main 00DE                _TEMP_MAP_HEARTBEAT 0076  
              _TEMP_MAP_DIRECTION 0019                       ??_checkStop 007A  
                      _FIRST_SEND 0005                          _temp_DLC 002C  
                        _unZipCAN 0174                          int$flags 004F  
                  _checkBacklight 0B44               __CFG_INTOSCSEL$HIGH 000000  
                      Delay@count 007A                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F30                __CFG_WDTEN$SWDTDIS 000000  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
              _TEMP_MAP_SAFETYPIN 001D             __end_of_ECAN_Transmit 0A62  
                    ??_startMotor 007A                          intlevel2 0000  
                  _checkDirection 0B9A          checkAccelerator@startval 0087  
                     _TXB0CONbits 000F20                        _OSCCONbits 000FD3  
          __end_of_checkBacklight 0B66                __CFG_WDTPS$1048576 000000  
            __end_of_ECAN_Receive 0816             __size_of_updateInputs 000E  
              __end_of_startMotor 0BDE                    _checkSafetyPin 0B66  
          __end_of_checkDirection 0BB2               __CFG_BORPWR$ZPBORMV 000000  
            __end_of_checkH_blink 0A9E                      _updateInputs 0BC4  
