

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 10 19:56:43 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	idataCOMRAM
    33  000598                     __pidataCOMRAM:
    34                           	opt stack 0
    35                           
    36                           ;initializer for _BATTERISTATUS_ID
    37  000598  02                 	db	2
    38                           
    39                           ;initializer for _MOTOR_ID
    40  000599  01                 	db	1
    41                           
    42                           	psect	nvCOMRAM
    43  000050                     __pnvCOMRAM:
    44                           	opt stack 0
    45  000050                     _count:
    46                           	opt stack 0
    47  000050                     	ds	1
    48  0000                     _B0CONbits	set	3712
    49  0000                     _B0D0	set	3718
    50  0000                     _B0D1	set	3719
    51  0000                     _B0D2	set	3720
    52  0000                     _B0D3	set	3721
    53  0000                     _B0D4	set	3722
    54  0000                     _B0D5	set	3723
    55  0000                     _B0D6	set	3724
    56  0000                     _B0D7	set	3725
    57  0000                     _B0DLC	set	3717
    58  0000                     _B0EIDH	set	3715
    59  0000                     _B0EIDL	set	3716
    60  0000                     _B0SIDH	set	3713
    61  0000                     _B0SIDL	set	3714
    62  0000                     _BRGCON1	set	3651
    63  0000                     _BRGCON2	set	3652
    64  0000                     _BRGCON3	set	3653
    65  0000                     _BSEL0	set	3709
    66  0000                     _MSEL0	set	3705
    67  0000                     _MSEL1	set	3706
    68  0000                     _MSEL2	set	3707
    69  0000                     _MSEL3	set	3708
    70  0000                     _RXF0EIDH	set	3810
    71  0000                     _RXF0EIDL	set	3811
    72  0000                     _RXF0SIDH	set	3808
    73  0000                     _RXF0SIDL	set	3809
    74  0000                     _RXF1EIDH	set	3814
    75  0000                     _RXF1EIDL	set	3815
    76  0000                     _RXF1SIDH	set	3812
    77  0000                     _RXF1SIDL	set	3813
    78  0000                     _RXF2EIDH	set	3818
    79  0000                     _RXF2EIDL	set	3819
    80  0000                     _RXF2SIDH	set	3816
    81  0000                     _RXF2SIDL	set	3817
    82  0000                     _RXFBCON0	set	3697
    83  0000                     _RXFBCON1	set	3698
    84  0000                     _RXFBCON2	set	3699
    85  0000                     _RXFBCON3	set	3700
    86  0000                     _RXFBCON4	set	3701
    87  0000                     _RXFBCON5	set	3702
    88  0000                     _RXFBCON6	set	3703
    89  0000                     _RXFBCON7	set	3704
    90  0000                     _RXFCON0	set	3654
    91  0000                     _RXFCON1	set	3655
    92  0000                     _RXM0EIDH	set	3834
    93  0000                     _RXM0EIDL	set	3835
    94  0000                     _RXM0SIDH	set	3832
    95  0000                     _RXM0SIDL	set	3833
    96  0000                     _RXM1EIDH	set	3838
    97  0000                     _RXM1EIDL	set	3839
    98  0000                     _RXM1SIDH	set	3836
    99  0000                     _RXM1SIDL	set	3837
   100  0000                     _ANCON0	set	3933
   101  0000                     _ANCON1	set	3932
   102  0000                     _RXB1CON	set	3888
   103  0000                     _RXB1CONbits	set	3888
   104  0000                     _RXB1D0	set	3894
   105  0000                     _RXB1D1	set	3895
   106  0000                     _RXB1D2	set	3896
   107  0000                     _RXB1D3	set	3897
   108  0000                     _RXB1D4	set	3898
   109  0000                     _RXB1D5	set	3899
   110  0000                     _RXB1D6	set	3900
   111  0000                     _RXB1D7	set	3901
   112  0000                     _RXB1DLC	set	3893
   113  0000                     _RXB1EIDH	set	3891
   114  0000                     _RXB1EIDL	set	3892
   115  0000                     _RXB1SIDH	set	3889
   116  0000                     _RXB1SIDL	set	3890
   117  0000                     _TXB0CONbits	set	3872
   118  0000                     _TXB0D0	set	3878
   119  0000                     _TXB0D1	set	3879
   120  0000                     _TXB0D2	set	3880
   121  0000                     _TXB0D3	set	3881
   122  0000                     _TXB0D4	set	3882
   123  0000                     _TXB0D5	set	3883
   124  0000                     _TXB0D6	set	3884
   125  0000                     _TXB0D7	set	3885
   126  0000                     _TXB0DLC	set	3877
   127  0000                     _TXB0EIDH	set	3875
   128  0000                     _TXB0EIDL	set	3876
   129  0000                     _TXB0SIDH	set	3873
   130  0000                     _TXB0SIDL	set	3874
   131  0000                     _CANCON	set	3951
   132  0000                     _CANSTATbits	set	3950
   133  0000                     _ECANCON	set	3954
   134  0000                     _LATA	set	3977
   135  0000                     _LATAbits	set	3977
   136  0000                     _LATB	set	3978
   137  0000                     _LATBbits	set	3978
   138  0000                     _LATC	set	3979
   139  0000                     _OSCCONbits	set	4051
   140  0000                     _OSCTUNEbits	set	3995
   141  0000                     _PIR5bits	set	3959
   142  0000                     _PORTAbits	set	3968
   143  0000                     _RXB0CON	set	3936
   144  0000                     _RXB0CONbits	set	3936
   145  0000                     _RXB0D0	set	3942
   146  0000                     _RXB0D1	set	3943
   147  0000                     _RXB0D2	set	3944
   148  0000                     _RXB0D3	set	3945
   149  0000                     _RXB0D4	set	3946
   150  0000                     _RXB0D5	set	3947
   151  0000                     _RXB0D6	set	3948
   152  0000                     _RXB0D7	set	3949
   153  0000                     _RXB0DLC	set	3941
   154  0000                     _RXB0EIDH	set	3939
   155  0000                     _RXB0EIDL	set	3940
   156  0000                     _RXB0SIDH	set	3937
   157  0000                     _RXB0SIDL	set	3938
   158  0000                     _TRISA	set	3986
   159  0000                     _TRISB	set	3987
   160  0000                     _TRISC	set	3988
   161  0000                     _IRXIF	set	31679
   162                           
   163                           ; #config settings
   164  0000                     
   165                           	psect	cinit
   166  00047A                     __pcinit:
   167                           	opt stack 0
   168  00047A                     start_initialization:
   169                           	opt stack 0
   170  00047A                     __initialization:
   171                           	opt stack 0
   172                           
   173                           ; Clear objects allocated to COMRAM (52 bytes)
   174  00047A  EE00  F001         	lfsr	0,__pbssCOMRAM
   175  00047E  0E34               	movlw	52
   176  000480                     clear_0:
   177  000480  6AEE               	clrf	postinc0,c
   178  000482  06E8               	decf	wreg,f,c
   179  000484  E1FD               	bnz	clear_0
   180                           
   181                           ; Initialize objects allocated to COMRAM (2 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  000486  0E98               	movlw	low __pidataCOMRAM
   184  000488  6EF6               	movwf	tblptrl,c
   185  00048A  0E05               	movlw	high __pidataCOMRAM
   186  00048C  6EF7               	movwf	tblptrh,c
   187  00048E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  000490  6EF8               	movwf	tblptru,c
   189  000492  0009               	tblrd		*+	;fetch initializer
   190  000494  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   191  000498  0009               	tblrd		*+	;fetch initializer
   192  00049A  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   193  00049E                     end_of_initialization:
   194                           	opt stack 0
   195  00049E                     __end_of__initialization:
   196                           	opt stack 0
   197  00049E  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   198  0004A0  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   199  0004A2  0100               	movlb	0
   200  0004A4  EFB0  F001         	goto	_main	;jump to C main() function
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	bssCOMRAM
   209  000001                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000001                     _MAP_ACCELERATOR:
   212                           	opt stack 0
   213  000001                     	ds	2
   214  000003                     _MAP_BACKLIGHT:
   215                           	opt stack 0
   216  000003                     	ds	2
   217  000005                     _MAP_BATTERYSTATUS:
   218                           	opt stack 0
   219  000005                     	ds	2
   220  000007                     _MAP_BRAKE:
   221                           	opt stack 0
   222  000007                     	ds	2
   223  000009                     _MAP_DIRECTION:
   224                           	opt stack 0
   225  000009                     	ds	2
   226  00000B                     _MAP_HEARTBEAT:
   227                           	opt stack 0
   228  00000B                     	ds	2
   229  00000D                     _MAP_H_BLINK:
   230                           	opt stack 0
   231  00000D                     	ds	2
   232  00000F                     _MAP_SAFETYPIN:
   233                           	opt stack 0
   234  00000F                     	ds	2
   235  000011                     _MAP_VELOCITY:
   236                           	opt stack 0
   237  000011                     	ds	2
   238  000013                     _MAP_V_BLINK:
   239                           	opt stack 0
   240  000013                     	ds	2
   241  000015                     _TEMP_MAP_ACCELERATOR:
   242                           	opt stack 0
   243  000015                     	ds	2
   244  000017                     _TEMP_MAP_BACKLIGHT:
   245                           	opt stack 0
   246  000017                     	ds	2
   247  000019                     _TEMP_MAP_BRAKE:
   248                           	opt stack 0
   249  000019                     	ds	2
   250  00001B                     _TEMP_MAP_DIRECTION:
   251                           	opt stack 0
   252  00001B                     	ds	2
   253  00001D                     _TEMP_MAP_HEARTBEAT:
   254                           	opt stack 0
   255  00001D                     	ds	2
   256  00001F                     _TEMP_MAP_H_BLINK:
   257                           	opt stack 0
   258  00001F                     	ds	2
   259  000021                     _TEMP_MAP_SAFETYPIN:
   260                           	opt stack 0
   261  000021                     	ds	2
   262  000023                     _TEMP_MAP_V_BLINK:
   263                           	opt stack 0
   264  000023                     	ds	2
   265  000025                     _heartbeatCount:
   266                           	opt stack 0
   267  000025                     	ds	2
   268  000027                     _ACCELERATOR:
   269                           	opt stack 0
   270  000027                     	ds	1
   271  000028                     _BITDATA:
   272                           	opt stack 0
   273  000028                     	ds	1
   274  000029                     _buttonWasPressed:
   275                           	opt stack 0
   276  000029                     	ds	1
   277  00002A                     _temp_D2:
   278                           	opt stack 0
   279  00002A                     	ds	1
   280  00002B                     _temp_D3:
   281                           	opt stack 0
   282  00002B                     	ds	1
   283  00002C                     _temp_D4:
   284                           	opt stack 0
   285  00002C                     	ds	1
   286  00002D                     _temp_D5:
   287                           	opt stack 0
   288  00002D                     	ds	1
   289  00002E                     _temp_D6:
   290                           	opt stack 0
   291  00002E                     	ds	1
   292  00002F                     _temp_D7:
   293                           	opt stack 0
   294  00002F                     	ds	1
   295  000030                     _temp_DLC:
   296                           	opt stack 0
   297  000030                     	ds	1
   298  000031                     _temp_EIDH:
   299                           	opt stack 0
   300  000031                     	ds	1
   301  000032                     _temp_EIDL:
   302                           	opt stack 0
   303  000032                     	ds	1
   304  000033                     _temp_SIDH:
   305                           	opt stack 0
   306  000033                     	ds	1
   307  000034                     _temp_SIDL:
   308                           	opt stack 0
   309  000034                     	ds	1
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           
   317                           	psect	dataCOMRAM
   318  00004E                     __pdataCOMRAM:
   319                           	opt stack 0
   320  00004E                     _BATTERISTATUS_ID:
   321                           	opt stack 0
   322  00004E                     	ds	1
   323  00004F                     _MOTOR_ID:
   324                           	opt stack 0
   325  00004F                     	ds	1
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           
   333                           	psect	cstackCOMRAM
   334  000035                     __pcstackCOMRAM:
   335                           	opt stack 0
   336  000035                     ??_ISR:
   337  000035                     
   338                           ; 2 bytes @ 0x0
   339  000035                     	ds	14
   340  000043                     ??_unZipCAN:
   341  000043                     ??_updateInputs:
   342  000043                     ECAN_Receive@RXMsgFlag:
   343                           	opt stack 0
   344  000043                     ECAN_Transmit@SIDL:
   345                           	opt stack 0
   346  000043                     Delay@count:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0xE
   350  000043                     	ds	1
   351  000044                     ECAN_Transmit@DLC:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0xF
   355  000044                     	ds	1
   356  000045                     ECAN_Transmit@TRANSMIT_ID:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x10
   360  000045                     	ds	1
   361  000046                     ECAN_Transmit@DATA1:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x11
   365  000046                     	ds	1
   366  000047                     ECAN_Transmit@DATA2:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x12
   370  000047                     	ds	1
   371  000048                     ECAN_Transmit@DATA3:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x13
   375  000048                     	ds	1
   376  000049                     ECAN_Transmit@DATA4:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x14
   380  000049                     	ds	1
   381  00004A                     ECAN_Transmit@DATA5:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x15
   385  00004A                     	ds	1
   386  00004B                     ECAN_Transmit@DATA6:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x16
   390  00004B                     	ds	1
   391  00004C                     ECAN_Transmit@DATA7:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x17
   395  00004C                     	ds	1
   396  00004D                     ECAN_Transmit@SIDH:
   397                           	opt stack 0
   398                           
   399                           ; 1 bytes @ 0x18
   400  00004D                     	ds	1
   401  00004E                     tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           
   408                           ; 0 bytes @ 0x19
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 9 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  2  100[None  ] int 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels required when called:    2
   434 ;; This function calls:
   435 ;;		_CANSetup
   436 ;;		_Delay
   437 ;;		_ECAN_Receive
   438 ;;		_ECAN_Transmit
   439 ;;		_InitDevice
   440 ;;		_checkAccelerator
   441 ;;		_checkBacklight
   442 ;;		_checkBrake
   443 ;;		_checkDirection
   444 ;;		_checkH_blink
   445 ;;		_checkHeartbeat
   446 ;;		_checkSafetyPin
   447 ;;		_checkV_blink
   448 ;;		_unZipCAN
   449 ;;		_updateInputs
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text0
   456  000360                     __ptext0:
   457                           	opt stack 0
   458  000360                     _main:
   459                           	opt stack 29
   460                           
   461                           ;main.c: 12: InitDevice();
   462                           
   463                           ;incstack = 0
   464  000360  EC46  F001         	call	_InitDevice	;wreg free
   465                           
   466                           ;main.c: 13: CANSetup();
   467  000364  EC46  F000         	call	_CANSetup	;wreg free
   468                           
   469                           ;main.c: 15: LATAbits.LATA7 = 1;
   470  000368  8E89               	bsf	3977,7,c	;volatile
   471  00036A                     l1466:
   472                           
   473                           ;main.c: 20: if(ECAN_Receive()){
   474  00036A  ECDB  F000         	call	_ECAN_Receive	;wreg free
   475  00036E  0900               	iorlw	0
   476  000370  A4D8               	btfss	status,2,c
   477                           
   478                           ;main.c: 21: unZipCAN();
   479  000372  ECEB  F001         	call	_unZipCAN	;wreg free
   480                           
   481                           ;main.c: 22: }
   482                           ;main.c: 24: checkHeartbeat();
   483  000376  ECCD  F002         	call	_checkHeartbeat	;wreg free
   484                           
   485                           ;main.c: 25: checkBrake();
   486  00037A  ECAD  F002         	call	_checkBrake	;wreg free
   487                           
   488                           ;main.c: 26: checkBacklight();
   489  00037E  EC76  F002         	call	_checkBacklight	;wreg free
   490                           
   491                           ;main.c: 27: checkV_blink();
   492  000382  EC54  F002         	call	_checkV_blink	;wreg free
   493                           
   494                           ;main.c: 28: checkH_blink();
   495  000386  EC65  F002         	call	_checkH_blink	;wreg free
   496                           
   497                           ;main.c: 29: checkDirection();
   498  00038A  ECA1  F002         	call	_checkDirection	;wreg free
   499                           
   500                           ;main.c: 30: checkSafetyPin();
   501  00038E  EC95  F002         	call	_checkSafetyPin	;wreg free
   502                           
   503                           ;main.c: 31: checkAccelerator();
   504  000392  EC87  F002         	call	_checkAccelerator	;wreg free
   505                           
   506                           ;main.c: 34: updateInputs();
   507  000396  ECB9  F002         	call	_updateInputs	;wreg free
   508                           
   509                           ;main.c: 36: ECAN_Transmit(0x32,0xC0, 0x08,
   510                           ;main.c: 37: MAP_BATTERYSTATUS,
   511                           ;main.c: 38: MAP_VELOCITY,
   512                           ;main.c: 39: MAP_HEARTBEAT,
   513                           ;main.c: 40: temp_D3,
   514                           ;main.c: 41: temp_D4,
   515                           ;main.c: 42: temp_D5,
   516                           ;main.c: 43: temp_D6,
   517                           ;main.c: 44: temp_D7);
   518  00039A  0EC0               	movlw	192
   519  00039C  6E43               	movwf	ECAN_Transmit@SIDL,c
   520  00039E  0E08               	movlw	8
   521  0003A0  6E44               	movwf	ECAN_Transmit@DLC,c
   522  0003A2  C005  F045         	movff	_MAP_BATTERYSTATUS,ECAN_Transmit@TRANSMIT_ID
   523  0003A6  C011  F046         	movff	_MAP_VELOCITY,ECAN_Transmit@DATA1
   524  0003AA  C00B  F047         	movff	_MAP_HEARTBEAT,ECAN_Transmit@DATA2
   525  0003AE  C02B  F048         	movff	_temp_D3,ECAN_Transmit@DATA3
   526  0003B2  C02C  F049         	movff	_temp_D4,ECAN_Transmit@DATA4
   527  0003B6  C02D  F04A         	movff	_temp_D5,ECAN_Transmit@DATA5
   528  0003BA  C02E  F04B         	movff	_temp_D6,ECAN_Transmit@DATA6
   529  0003BE  C02F  F04C         	movff	_temp_D7,ECAN_Transmit@DATA7
   530  0003C2  0E32               	movlw	50
   531  0003C4  EC1D  F002         	call	_ECAN_Transmit
   532                           
   533                           ;main.c: 47: Delay(100);
   534  0003C8  0E00               	movlw	0
   535  0003CA  6E44               	movwf	Delay@count+1,c
   536  0003CC  0E64               	movlw	100
   537  0003CE  6E43               	movwf	Delay@count,c
   538  0003D0  ECC3  F002         	call	_Delay	;wreg free
   539  0003D4  D7CA               	goto	l1466
   540  0003D6                     __end_of_main:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           status	equ	0xFD8
   549                           
   550 ;; *************** function _updateInputs *****************
   551 ;; Defined at:
   552 ;;		line 82 in file "peripherals.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;		None               void
   559 ;; Registers used:
   560 ;;		wreg, status,2
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text1
   581  000572                     __ptext1:
   582                           	opt stack 0
   583  000572                     _updateInputs:
   584                           	opt stack 29
   585                           
   586                           ;peripherals.c: 83: MAP_BATTERYSTATUS = PORTAbits.RA0;
   587                           
   588                           ;incstack = 0
   589  000572  A080               	btfss	3968,0,c	;volatile
   590  000574  D003               	goto	u200
   591  000576  6A43               	clrf	??_updateInputs& (0+255),c
   592  000578  2A43               	incf	??_updateInputs& (0+255),f,c
   593  00057A  D001               	goto	u208
   594  00057C                     u200:
   595  00057C  6A43               	clrf	??_updateInputs& (0+255),c
   596  00057E                     u208:
   597  00057E  5043               	movf	??_updateInputs,w,c
   598  000580  6E05               	movwf	_MAP_BATTERYSTATUS,c
   599  000582  6A06               	clrf	_MAP_BATTERYSTATUS+1,c
   600  000584  0012               	return		;funcret
   601  000586                     __end_of_updateInputs:
   602                           	opt stack 0
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _unZipCAN *****************
   612 ;; Defined at:
   613 ;;		line 359 in file "ECAN.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;		None               void
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   631 ;;Total ram usage:        1 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text2
   642  0003D6                     __ptext2:
   643                           	opt stack 0
   644  0003D6                     _unZipCAN:
   645                           	opt stack 29
   646                           
   647                           ;ECAN.c: 361: TEMP_MAP_HEARTBEAT = (BITDATA & (1 << 0));
   648                           
   649                           ;incstack = 0
   650  0003D6  C028  F043         	movff	_BITDATA,??_unZipCAN
   651  0003DA  0E01               	movlw	1
   652  0003DC  1643               	andwf	??_unZipCAN,f,c
   653  0003DE  5043               	movf	??_unZipCAN,w,c
   654  0003E0  6E1D               	movwf	_TEMP_MAP_HEARTBEAT,c
   655  0003E2  6A1E               	clrf	_TEMP_MAP_HEARTBEAT+1,c
   656                           
   657                           ;ECAN.c: 362: TEMP_MAP_BRAKE = BITDATA & (1 << 1);
   658  0003E4  C028  F043         	movff	_BITDATA,??_unZipCAN
   659  0003E8  0E02               	movlw	2
   660  0003EA  1643               	andwf	??_unZipCAN,f,c
   661  0003EC  5043               	movf	??_unZipCAN,w,c
   662  0003EE  6E19               	movwf	_TEMP_MAP_BRAKE,c
   663  0003F0  6A1A               	clrf	_TEMP_MAP_BRAKE+1,c
   664                           
   665                           ;ECAN.c: 363: TEMP_MAP_BACKLIGHT = BITDATA & (1 << 2);
   666  0003F2  C028  F043         	movff	_BITDATA,??_unZipCAN
   667  0003F6  0E04               	movlw	4
   668  0003F8  1643               	andwf	??_unZipCAN,f,c
   669  0003FA  5043               	movf	??_unZipCAN,w,c
   670  0003FC  6E17               	movwf	_TEMP_MAP_BACKLIGHT,c
   671  0003FE  6A18               	clrf	_TEMP_MAP_BACKLIGHT+1,c
   672                           
   673                           ;ECAN.c: 364: TEMP_MAP_V_BLINK = BITDATA & (1 << 3);
   674  000400  C028  F043         	movff	_BITDATA,??_unZipCAN
   675  000404  0E08               	movlw	8
   676  000406  1643               	andwf	??_unZipCAN,f,c
   677  000408  5043               	movf	??_unZipCAN,w,c
   678  00040A  6E23               	movwf	_TEMP_MAP_V_BLINK,c
   679  00040C  6A24               	clrf	_TEMP_MAP_V_BLINK+1,c
   680                           
   681                           ;ECAN.c: 365: TEMP_MAP_H_BLINK = BITDATA & (1 << 4);
   682  00040E  C028  F043         	movff	_BITDATA,??_unZipCAN
   683  000412  0E10               	movlw	16
   684  000414  1643               	andwf	??_unZipCAN,f,c
   685  000416  5043               	movf	??_unZipCAN,w,c
   686  000418  6E1F               	movwf	_TEMP_MAP_H_BLINK,c
   687  00041A  6A20               	clrf	_TEMP_MAP_H_BLINK+1,c
   688                           
   689                           ;ECAN.c: 366: TEMP_MAP_DIRECTION = BITDATA & (1 << 5);
   690  00041C  C028  F043         	movff	_BITDATA,??_unZipCAN
   691  000420  0E20               	movlw	32
   692  000422  1643               	andwf	??_unZipCAN,f,c
   693  000424  5043               	movf	??_unZipCAN,w,c
   694  000426  6E1B               	movwf	_TEMP_MAP_DIRECTION,c
   695  000428  6A1C               	clrf	_TEMP_MAP_DIRECTION+1,c
   696                           
   697                           ;ECAN.c: 367: TEMP_MAP_SAFETYPIN = BITDATA & (1 << 6);
   698  00042A  C028  F043         	movff	_BITDATA,??_unZipCAN
   699  00042E  0E40               	movlw	64
   700  000430  1643               	andwf	??_unZipCAN,f,c
   701  000432  5043               	movf	??_unZipCAN,w,c
   702  000434  6E21               	movwf	_TEMP_MAP_SAFETYPIN,c
   703  000436  6A22               	clrf	_TEMP_MAP_SAFETYPIN+1,c
   704  000438  0012               	return		;funcret
   705  00043A                     __end_of_unZipCAN:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           status	equ	0xFD8
   714                           
   715 ;; *************** function _checkV_blink *****************
   716 ;; Defined at:
   717 ;;		line 50 in file "peripherals.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;		None               void
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  0004A8                     __ptext3:
   747                           	opt stack 0
   748  0004A8                     _checkV_blink:
   749                           	opt stack 29
   750                           
   751                           ;peripherals.c: 51: if(TEMP_MAP_V_BLINK != MAP_V_BLINK){
   752                           
   753                           ;incstack = 0
   754  0004A8  5013               	movf	_MAP_V_BLINK,w,c
   755  0004AA  1823               	xorwf	_TEMP_MAP_V_BLINK,w,c
   756  0004AC  E104               	bnz	u130
   757  0004AE  5014               	movf	_MAP_V_BLINK+1,w,c
   758  0004B0  1824               	xorwf	_TEMP_MAP_V_BLINK+1,w,c
   759  0004B2  B4D8               	btfsc	status,2,c
   760  0004B4  0012               	return	
   761  0004B6                     u130:
   762                           
   763                           ;peripherals.c: 52: MAP_V_BLINK = TEMP_MAP_V_BLINK;
   764  0004B6  C023  F013         	movff	_TEMP_MAP_V_BLINK,_MAP_V_BLINK
   765  0004BA  C024  F014         	movff	_TEMP_MAP_V_BLINK+1,_MAP_V_BLINK+1
   766                           
   767                           ;peripherals.c: 53: LATBbits.LATB5 = MAP_V_BLINK;
   768  0004BE  B013               	btfsc	_MAP_V_BLINK,0,c
   769  0004C0  D002               	bra	u145
   770  0004C2  9A8A               	bcf	3978,5,c	;volatile
   771  0004C4  D001               	bra	u146
   772  0004C6                     u145:
   773  0004C6  8A8A               	bsf	3978,5,c	;volatile
   774  0004C8                     u146:
   775  0004C8  0012               	return	
   776  0004CA                     __end_of_checkV_blink:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           status	equ	0xFD8
   785                           
   786 ;; *************** function _checkSafetyPin *****************
   787 ;; Defined at:
   788 ;;		line 68 in file "peripherals.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;		None               void
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; Hardware stack levels required when called:    1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text4
   817  00052A                     __ptext4:
   818                           	opt stack 0
   819  00052A                     _checkSafetyPin:
   820                           	opt stack 29
   821                           
   822                           ;peripherals.c: 69: if(TEMP_MAP_SAFETYPIN != MAP_SAFETYPIN){
   823                           
   824                           ;incstack = 0
   825  00052A  500F               	movf	_MAP_SAFETYPIN,w,c
   826  00052C  1821               	xorwf	_TEMP_MAP_SAFETYPIN,w,c
   827  00052E  E104               	bnz	u180
   828  000530  5010               	movf	_MAP_SAFETYPIN+1,w,c
   829  000532  1822               	xorwf	_TEMP_MAP_SAFETYPIN+1,w,c
   830  000534  B4D8               	btfsc	status,2,c
   831  000536  0012               	return	
   832  000538                     u180:
   833                           
   834                           ;peripherals.c: 70: MAP_SAFETYPIN = TEMP_MAP_SAFETYPIN;
   835  000538  C021  F00F         	movff	_TEMP_MAP_SAFETYPIN,_MAP_SAFETYPIN
   836  00053C  C022  F010         	movff	_TEMP_MAP_SAFETYPIN+1,_MAP_SAFETYPIN+1
   837  000540  0012               	return	
   838  000542                     __end_of_checkSafetyPin:
   839                           	opt stack 0
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           status	equ	0xFD8
   847                           
   848 ;; *************** function _checkHeartbeat *****************
   849 ;; Defined at:
   850 ;;		line 11 in file "peripherals.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;		None               void
   857 ;; Registers used:
   858 ;;		None
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   868 ;;Total ram usage:        0 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text5
   879  00059A                     __ptext5:
   880                           	opt stack 0
   881  00059A                     _checkHeartbeat:
   882                           	opt stack 29
   883                           
   884                           ;incstack = 0
   885  00059A  0012               	return		;funcret
   886  00059C                     __end_of_checkHeartbeat:
   887                           	opt stack 0
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _checkH_blink *****************
   897 ;; Defined at:
   898 ;;		line 56 in file "peripherals.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text6
   927  0004CA                     __ptext6:
   928                           	opt stack 0
   929  0004CA                     _checkH_blink:
   930                           	opt stack 29
   931                           
   932                           ;peripherals.c: 57: if(TEMP_MAP_H_BLINK != MAP_H_BLINK){
   933                           
   934                           ;incstack = 0
   935  0004CA  500D               	movf	_MAP_H_BLINK,w,c
   936  0004CC  181F               	xorwf	_TEMP_MAP_H_BLINK,w,c
   937  0004CE  E104               	bnz	u150
   938  0004D0  500E               	movf	_MAP_H_BLINK+1,w,c
   939  0004D2  1820               	xorwf	_TEMP_MAP_H_BLINK+1,w,c
   940  0004D4  B4D8               	btfsc	status,2,c
   941  0004D6  0012               	return	
   942  0004D8                     u150:
   943                           
   944                           ;peripherals.c: 58: MAP_H_BLINK = TEMP_MAP_H_BLINK;
   945  0004D8  C01F  F00D         	movff	_TEMP_MAP_H_BLINK,_MAP_H_BLINK
   946  0004DC  C020  F00E         	movff	_TEMP_MAP_H_BLINK+1,_MAP_H_BLINK+1
   947                           
   948                           ;peripherals.c: 59: LATBbits.LATB6 = MAP_H_BLINK;
   949  0004E0  B00D               	btfsc	_MAP_H_BLINK,0,c
   950  0004E2  D002               	bra	u165
   951  0004E4  9C8A               	bcf	3978,6,c	;volatile
   952  0004E6  D001               	bra	u166
   953  0004E8                     u165:
   954  0004E8  8C8A               	bsf	3978,6,c	;volatile
   955  0004EA                     u166:
   956  0004EA  0012               	return	
   957  0004EC                     __end_of_checkH_blink:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _checkDirection *****************
   968 ;; Defined at:
   969 ;;		line 62 in file "peripherals.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text7
   998  000542                     __ptext7:
   999                           	opt stack 0
  1000  000542                     _checkDirection:
  1001                           	opt stack 29
  1002                           
  1003                           ;peripherals.c: 63: if(TEMP_MAP_DIRECTION != MAP_DIRECTION){
  1004                           
  1005                           ;incstack = 0
  1006  000542  5009               	movf	_MAP_DIRECTION,w,c
  1007  000544  181B               	xorwf	_TEMP_MAP_DIRECTION,w,c
  1008  000546  E104               	bnz	u170
  1009  000548  500A               	movf	_MAP_DIRECTION+1,w,c
  1010  00054A  181C               	xorwf	_TEMP_MAP_DIRECTION+1,w,c
  1011  00054C  B4D8               	btfsc	status,2,c
  1012  00054E  0012               	return	
  1013  000550                     u170:
  1014                           
  1015                           ;peripherals.c: 64: MAP_DIRECTION = TEMP_MAP_DIRECTION;
  1016  000550  C01B  F009         	movff	_TEMP_MAP_DIRECTION,_MAP_DIRECTION
  1017  000554  C01C  F00A         	movff	_TEMP_MAP_DIRECTION+1,_MAP_DIRECTION+1
  1018  000558  0012               	return	
  1019  00055A                     __end_of_checkDirection:
  1020                           	opt stack 0
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function _checkBrake *****************
  1030 ;; Defined at:
  1031 ;;		line 33 in file "peripherals.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;		None               void
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text8
  1060  00055A                     __ptext8:
  1061                           	opt stack 0
  1062  00055A                     _checkBrake:
  1063                           	opt stack 29
  1064                           
  1065                           ;peripherals.c: 34: if(TEMP_MAP_BRAKE != MAP_BRAKE){
  1066                           
  1067                           ;incstack = 0
  1068  00055A  5007               	movf	_MAP_BRAKE,w,c
  1069  00055C  1819               	xorwf	_TEMP_MAP_BRAKE,w,c
  1070  00055E  E104               	bnz	u100
  1071  000560  5008               	movf	_MAP_BRAKE+1,w,c
  1072  000562  181A               	xorwf	_TEMP_MAP_BRAKE+1,w,c
  1073  000564  B4D8               	btfsc	status,2,c
  1074  000566  0012               	return	
  1075  000568                     u100:
  1076                           
  1077                           ;peripherals.c: 35: MAP_BRAKE = TEMP_MAP_BRAKE;
  1078  000568  C019  F007         	movff	_TEMP_MAP_BRAKE,_MAP_BRAKE
  1079  00056C  C01A  F008         	movff	_TEMP_MAP_BRAKE+1,_MAP_BRAKE+1
  1080                           
  1081                           ;peripherals.c: 39: else{
  1082                           
  1083                           ;peripherals.c: 38: }
  1084  000570  0012               	return	
  1085  000572                     __end_of_checkBrake:
  1086                           	opt stack 0
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           status	equ	0xFD8
  1094                           
  1095 ;; *************** function _checkBacklight *****************
  1096 ;; Defined at:
  1097 ;;		line 44 in file "peripherals.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text9
  1126  0004EC                     __ptext9:
  1127                           	opt stack 0
  1128  0004EC                     _checkBacklight:
  1129                           	opt stack 29
  1130                           
  1131                           ;peripherals.c: 45: if(TEMP_MAP_BACKLIGHT != MAP_BACKLIGHT){
  1132                           
  1133                           ;incstack = 0
  1134  0004EC  5003               	movf	_MAP_BACKLIGHT,w,c
  1135  0004EE  1817               	xorwf	_TEMP_MAP_BACKLIGHT,w,c
  1136  0004F0  E104               	bnz	u110
  1137  0004F2  5004               	movf	_MAP_BACKLIGHT+1,w,c
  1138  0004F4  1818               	xorwf	_TEMP_MAP_BACKLIGHT+1,w,c
  1139  0004F6  B4D8               	btfsc	status,2,c
  1140  0004F8  0012               	return	
  1141  0004FA                     u110:
  1142                           
  1143                           ;peripherals.c: 46: MAP_BACKLIGHT = TEMP_MAP_BACKLIGHT;
  1144  0004FA  C017  F003         	movff	_TEMP_MAP_BACKLIGHT,_MAP_BACKLIGHT
  1145  0004FE  C018  F004         	movff	_TEMP_MAP_BACKLIGHT+1,_MAP_BACKLIGHT+1
  1146                           
  1147                           ;peripherals.c: 47: LATBbits.LATB7 = MAP_BACKLIGHT;
  1148  000502  B003               	btfsc	_MAP_BACKLIGHT,0,c
  1149  000504  D002               	bra	u125
  1150  000506  9E8A               	bcf	3978,7,c	;volatile
  1151  000508  D001               	bra	u126
  1152  00050A                     u125:
  1153  00050A  8E8A               	bsf	3978,7,c	;volatile
  1154  00050C                     u126:
  1155  00050C  0012               	return	
  1156  00050E                     __end_of_checkBacklight:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _checkAccelerator *****************
  1167 ;; Defined at:
  1168 ;;		line 74 in file "peripherals.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;		None               void
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text10
  1197  00050E                     __ptext10:
  1198                           	opt stack 0
  1199  00050E                     _checkAccelerator:
  1200                           	opt stack 29
  1201                           
  1202                           ;peripherals.c: 75: if(TEMP_MAP_ACCELERATOR != MAP_ACCELERATOR){
  1203                           
  1204                           ;incstack = 0
  1205  00050E  5001               	movf	_MAP_ACCELERATOR,w,c
  1206  000510  1815               	xorwf	_TEMP_MAP_ACCELERATOR,w,c
  1207  000512  E104               	bnz	u190
  1208  000514  5002               	movf	_MAP_ACCELERATOR+1,w,c
  1209  000516  1816               	xorwf	_TEMP_MAP_ACCELERATOR+1,w,c
  1210  000518  B4D8               	btfsc	status,2,c
  1211  00051A  0012               	return	
  1212  00051C                     u190:
  1213                           
  1214                           ;peripherals.c: 76: MAP_ACCELERATOR = TEMP_MAP_ACCELERATOR;
  1215  00051C  C015  F001         	movff	_TEMP_MAP_ACCELERATOR,_MAP_ACCELERATOR
  1216  000520  C016  F002         	movff	_TEMP_MAP_ACCELERATOR+1,_MAP_ACCELERATOR+1
  1217                           
  1218                           ;peripherals.c: 77: LATB = MAP_ACCELERATOR;
  1219  000524  C001  FF8A         	movff	_MAP_ACCELERATOR,3978	;volatile
  1220  000528  0012               	return	
  1221  00052A                     __end_of_checkAccelerator:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           status	equ	0xFD8
  1230                           
  1231 ;; *************** function _InitDevice *****************
  1232 ;; Defined at:
  1233 ;;		line 11 in file "init.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;		None               void
  1240 ;; Registers used:
  1241 ;;		wreg, status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text11
  1262  00028C                     __ptext11:
  1263                           	opt stack 0
  1264  00028C                     _InitDevice:
  1265                           	opt stack 29
  1266                           
  1267                           ;init.c: 12: count = 0x01;
  1268                           
  1269                           ;incstack = 0
  1270  00028C  0E01               	movlw	1
  1271  00028E  6E50               	movwf	_count,c
  1272                           
  1273                           ;init.c: 15: OSCCONbits.IRCF = 7;
  1274  000290  88D3               	bsf	4051,4,c	;volatile
  1275  000292  8AD3               	bsf	4051,5,c	;volatile
  1276  000294  8CD3               	bsf	4051,6,c	;volatile
  1277                           
  1278                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  1279  000296  8C9B               	bsf	3995,6,c	;volatile
  1280                           
  1281                           ;init.c: 19: heartbeatCount = 0;
  1282  000298  0E00               	movlw	0
  1283  00029A  6E26               	movwf	_heartbeatCount+1,c
  1284  00029C  0E00               	movlw	0
  1285  00029E  6E25               	movwf	_heartbeatCount,c
  1286                           
  1287                           ;init.c: 20: buttonWasPressed = 0;
  1288  0002A0  0E00               	movlw	0
  1289  0002A2  6E29               	movwf	_buttonWasPressed,c
  1290                           
  1291                           ;init.c: 26: ANCON0 = ANCON1 = 0x00;
  1292  0002A4  0E00               	movlw	0
  1293  0002A6  010F               	movlb	15	; () banked
  1294  0002A8  6F5C               	movwf	92,b	;volatile
  1295  0002AA  CF5C FF5D          	movff	3932,3933	;volatile
  1296                           
  1297                           ;init.c: 28: TRISA = 0b00111111;
  1298  0002AE  0E3F               	movlw	63
  1299  0002B0  6E92               	movwf	3986,c	;volatile
  1300                           
  1301                           ;init.c: 29: LATA = 0x00;
  1302  0002B2  0E00               	movlw	0
  1303  0002B4  6E89               	movwf	3977,c	;volatile
  1304                           
  1305                           ;init.c: 31: TRISB = 0b00011101;
  1306  0002B6  0E1D               	movlw	29
  1307  0002B8  6E93               	movwf	3987,c	;volatile
  1308                           
  1309                           ;init.c: 32: LATB = 0x00;
  1310  0002BA  0E00               	movlw	0
  1311  0002BC  6E8A               	movwf	3978,c	;volatile
  1312                           
  1313                           ;init.c: 34: TRISC = 0x00;
  1314  0002BE  0E00               	movlw	0
  1315  0002C0  6E94               	movwf	3988,c	;volatile
  1316                           
  1317                           ;init.c: 35: LATC = 0x00;
  1318  0002C2  0E00               	movlw	0
  1319  0002C4  6E8B               	movwf	3979,c	;volatile
  1320                           
  1321                           ;init.c: 39: MAP_HEARTBEAT = 0;
  1322  0002C6  0E00               	movlw	0
  1323  0002C8  6E0C               	movwf	_MAP_HEARTBEAT+1,c
  1324  0002CA  0E00               	movlw	0
  1325  0002CC  6E0B               	movwf	_MAP_HEARTBEAT,c
  1326                           
  1327                           ;init.c: 40: MAP_BRAKE = 0;
  1328  0002CE  0E00               	movlw	0
  1329  0002D0  6E08               	movwf	_MAP_BRAKE+1,c
  1330  0002D2  0E00               	movlw	0
  1331  0002D4  6E07               	movwf	_MAP_BRAKE,c
  1332                           
  1333                           ;init.c: 41: MAP_BACKLIGHT = 0;
  1334  0002D6  0E00               	movlw	0
  1335  0002D8  6E04               	movwf	_MAP_BACKLIGHT+1,c
  1336  0002DA  0E00               	movlw	0
  1337  0002DC  6E03               	movwf	_MAP_BACKLIGHT,c
  1338                           
  1339                           ;init.c: 42: MAP_V_BLINK = 0;
  1340  0002DE  0E00               	movlw	0
  1341  0002E0  6E14               	movwf	_MAP_V_BLINK+1,c
  1342  0002E2  0E00               	movlw	0
  1343  0002E4  6E13               	movwf	_MAP_V_BLINK,c
  1344                           
  1345                           ;init.c: 43: MAP_H_BLINK = 0;
  1346  0002E6  0E00               	movlw	0
  1347  0002E8  6E0E               	movwf	_MAP_H_BLINK+1,c
  1348  0002EA  0E00               	movlw	0
  1349  0002EC  6E0D               	movwf	_MAP_H_BLINK,c
  1350                           
  1351                           ;init.c: 44: MAP_DIRECTION = 0;
  1352  0002EE  0E00               	movlw	0
  1353  0002F0  6E0A               	movwf	_MAP_DIRECTION+1,c
  1354  0002F2  0E00               	movlw	0
  1355  0002F4  6E09               	movwf	_MAP_DIRECTION,c
  1356                           
  1357                           ;init.c: 45: MAP_SAFETYPIN = 0;
  1358  0002F6  0E00               	movlw	0
  1359  0002F8  6E10               	movwf	_MAP_SAFETYPIN+1,c
  1360  0002FA  0E00               	movlw	0
  1361  0002FC  6E0F               	movwf	_MAP_SAFETYPIN,c
  1362                           
  1363                           ;init.c: 46: MAP_ACCELERATOR = 0;
  1364  0002FE  0E00               	movlw	0
  1365  000300  6E02               	movwf	_MAP_ACCELERATOR+1,c
  1366  000302  0E00               	movlw	0
  1367  000304  6E01               	movwf	_MAP_ACCELERATOR,c
  1368                           
  1369                           ;init.c: 48: TEMP_MAP_HEARTBEAT = 0;
  1370  000306  0E00               	movlw	0
  1371  000308  6E1E               	movwf	_TEMP_MAP_HEARTBEAT+1,c
  1372  00030A  0E00               	movlw	0
  1373  00030C  6E1D               	movwf	_TEMP_MAP_HEARTBEAT,c
  1374                           
  1375                           ;init.c: 49: TEMP_MAP_BRAKE = 0;
  1376  00030E  0E00               	movlw	0
  1377  000310  6E1A               	movwf	_TEMP_MAP_BRAKE+1,c
  1378  000312  0E00               	movlw	0
  1379  000314  6E19               	movwf	_TEMP_MAP_BRAKE,c
  1380                           
  1381                           ;init.c: 50: TEMP_MAP_BACKLIGHT = 0;
  1382  000316  0E00               	movlw	0
  1383  000318  6E18               	movwf	_TEMP_MAP_BACKLIGHT+1,c
  1384  00031A  0E00               	movlw	0
  1385  00031C  6E17               	movwf	_TEMP_MAP_BACKLIGHT,c
  1386                           
  1387                           ;init.c: 51: TEMP_MAP_V_BLINK = 0;
  1388  00031E  0E00               	movlw	0
  1389  000320  6E24               	movwf	_TEMP_MAP_V_BLINK+1,c
  1390  000322  0E00               	movlw	0
  1391  000324  6E23               	movwf	_TEMP_MAP_V_BLINK,c
  1392                           
  1393                           ;init.c: 52: TEMP_MAP_H_BLINK = 0;
  1394  000326  0E00               	movlw	0
  1395  000328  6E20               	movwf	_TEMP_MAP_H_BLINK+1,c
  1396  00032A  0E00               	movlw	0
  1397  00032C  6E1F               	movwf	_TEMP_MAP_H_BLINK,c
  1398                           
  1399                           ;init.c: 53: TEMP_MAP_DIRECTION = 0;
  1400  00032E  0E00               	movlw	0
  1401  000330  6E1C               	movwf	_TEMP_MAP_DIRECTION+1,c
  1402  000332  0E00               	movlw	0
  1403  000334  6E1B               	movwf	_TEMP_MAP_DIRECTION,c
  1404                           
  1405                           ;init.c: 54: TEMP_MAP_SAFETYPIN = 0;
  1406  000336  0E00               	movlw	0
  1407  000338  6E22               	movwf	_TEMP_MAP_SAFETYPIN+1,c
  1408  00033A  0E00               	movlw	0
  1409  00033C  6E21               	movwf	_TEMP_MAP_SAFETYPIN,c
  1410                           
  1411                           ;init.c: 55: TEMP_MAP_ACCELERATOR = 0;
  1412  00033E  0E00               	movlw	0
  1413  000340  6E16               	movwf	_TEMP_MAP_ACCELERATOR+1,c
  1414  000342  0E00               	movlw	0
  1415  000344  6E15               	movwf	_TEMP_MAP_ACCELERATOR,c
  1416                           
  1417                           ;init.c: 57: MAP_BATTERYSTATUS = 0;
  1418  000346  0E00               	movlw	0
  1419  000348  6E06               	movwf	_MAP_BATTERYSTATUS+1,c
  1420  00034A  0E00               	movlw	0
  1421  00034C  6E05               	movwf	_MAP_BATTERYSTATUS,c
  1422                           
  1423                           ;init.c: 58: MAP_VELOCITY = 0;
  1424  00034E  0E00               	movlw	0
  1425  000350  6E12               	movwf	_MAP_VELOCITY+1,c
  1426  000352  0E00               	movlw	0
  1427  000354  6E11               	movwf	_MAP_VELOCITY,c
  1428                           
  1429                           ;init.c: 59: MAP_HEARTBEAT = 0;
  1430  000356  0E00               	movlw	0
  1431  000358  6E0C               	movwf	_MAP_HEARTBEAT+1,c
  1432  00035A  0E00               	movlw	0
  1433  00035C  6E0B               	movwf	_MAP_HEARTBEAT,c
  1434                           
  1435                           ; BSR set to: 15
  1436  00035E  0012               	return		;funcret
  1437  000360                     __end_of_InitDevice:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _ECAN_Transmit *****************
  1448 ;; Defined at:
  1449 ;;		line 303 in file "ECAN.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  SIDH            1    wreg     unsigned char 
  1452 ;;  SIDL            1   14[COMRAM] unsigned char 
  1453 ;;  DLC             1   15[COMRAM] unsigned char 
  1454 ;;  TRANSMIT_ID     1   16[COMRAM] unsigned char 
  1455 ;;  DATA1           1   17[COMRAM] unsigned char 
  1456 ;;  DATA2           1   18[COMRAM] unsigned char 
  1457 ;;  DATA3           1   19[COMRAM] unsigned char 
  1458 ;;  DATA4           1   20[COMRAM] unsigned char 
  1459 ;;  DATA5           1   21[COMRAM] unsigned char 
  1460 ;;  DATA6           1   22[COMRAM] unsigned char 
  1461 ;;  DATA7           1   23[COMRAM] unsigned char 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  SIDH            1   24[COMRAM] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;		None               void
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1473 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;Total ram usage:       11 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    1
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text12
  1488  00043A                     __ptext12:
  1489                           	opt stack 0
  1490  00043A                     _ECAN_Transmit:
  1491                           	opt stack 29
  1492                           
  1493                           ; BSR set to: 15
  1494                           ;incstack = 0
  1495                           ;ECAN_Transmit@SIDH stored from wreg
  1496  00043A  6E4D               	movwf	ECAN_Transmit@SIDH,c
  1497                           
  1498                           ;ECAN.c: 315: TXB0EIDH = 0x00;
  1499  00043C  0E00               	movlw	0
  1500  00043E  010F               	movlb	15	; () banked
  1501  000440  6F23               	movwf	35,b	;volatile
  1502                           
  1503                           ;ECAN.c: 316: TXB0EIDL = 0x00;
  1504  000442  0E00               	movlw	0
  1505  000444  010F               	movlb	15	; () banked
  1506  000446  6F24               	movwf	36,b	;volatile
  1507                           
  1508                           ; BSR set to: 15
  1509                           ;ECAN.c: 319: TXB0SIDH = SIDH;
  1510  000448  C04D  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;ECAN.c: 320: TXB0SIDL = SIDL;
  1514  00044C  C043  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  1515                           
  1516                           ; BSR set to: 15
  1517                           ;ECAN.c: 321: TXB0DLC = DLC;
  1518  000450  C044  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  1519                           
  1520                           ; BSR set to: 15
  1521                           ;ECAN.c: 330: TXB0D0 = TRANSMIT_ID;
  1522  000454  C045  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  1523                           
  1524                           ; BSR set to: 15
  1525                           ;ECAN.c: 331: TXB0D1 = DATA1;
  1526  000458  C046  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  1527                           
  1528                           ; BSR set to: 15
  1529                           ;ECAN.c: 332: TXB0D2 = DATA2;
  1530  00045C  C047  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;ECAN.c: 333: TXB0D3 = DATA3;
  1534  000460  C048  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  1535                           
  1536                           ; BSR set to: 15
  1537                           ;ECAN.c: 334: TXB0D4 = DATA4;
  1538  000464  C049  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  1539                           
  1540                           ; BSR set to: 15
  1541                           ;ECAN.c: 335: TXB0D5 = DATA5;
  1542  000468  C04A  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  1543                           
  1544                           ; BSR set to: 15
  1545                           ;ECAN.c: 336: TXB0D6 = DATA6;
  1546  00046C  C04B  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  1547                           
  1548                           ; BSR set to: 15
  1549                           ;ECAN.c: 337: TXB0D7 = DATA7;
  1550  000470  C04C  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  1551                           
  1552                           ; BSR set to: 15
  1553                           ;ECAN.c: 339: TXB0CONbits.TXREQ = 1;
  1554  000474  010F               	movlb	15	; () banked
  1555  000476  8720               	bsf	32,3,b	;volatile
  1556                           
  1557                           ; BSR set to: 15
  1558  000478  0012               	return		;funcret
  1559  00047A                     __end_of_ECAN_Transmit:
  1560                           	opt stack 0
  1561                           tblptru	equ	0xFF8
  1562                           tblptrh	equ	0xFF7
  1563                           tblptrl	equ	0xFF6
  1564                           tablat	equ	0xFF5
  1565                           postinc0	equ	0xFEE
  1566                           wreg	equ	0xFE8
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _ECAN_Receive *****************
  1570 ;; Defined at:
  1571 ;;		line 222 in file "ECAN.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  RXMsgFlag       1   14[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      unsigned char 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;Total ram usage:        1 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text13
  1600  0001B6                     __ptext13:
  1601                           	opt stack 0
  1602  0001B6                     _ECAN_Receive:
  1603                           	opt stack 29
  1604                           
  1605                           ;ECAN.c: 224: unsigned char RXMsgFlag;
  1606                           ;ECAN.c: 226: RXMsgFlag = 0x00;
  1607                           
  1608                           ; BSR set to: 15
  1609                           ;incstack = 0
  1610  0001B6  0E00               	movlw	0
  1611  0001B8  6E43               	movwf	ECAN_Receive@RXMsgFlag,c
  1612                           
  1613                           ;ECAN.c: 228: if (RXB0CONbits.RXFUL)
  1614  0001BA  AE60               	btfss	3936,7,c	;volatile
  1615  0001BC  D01C               	goto	l412
  1616                           
  1617                           ;ECAN.c: 229: {
  1618                           ;ECAN.c: 230: temp_EIDH = RXB0EIDH;
  1619  0001BE  CF63 F031          	movff	3939,_temp_EIDH	;volatile
  1620                           
  1621                           ;ECAN.c: 231: temp_EIDL = RXB0EIDL;
  1622  0001C2  CF64 F032          	movff	3940,_temp_EIDL	;volatile
  1623                           
  1624                           ;ECAN.c: 232: temp_SIDH = RXB0SIDH;
  1625  0001C6  CF61 F033          	movff	3937,_temp_SIDH	;volatile
  1626                           
  1627                           ;ECAN.c: 233: temp_SIDL = RXB0SIDL;
  1628  0001CA  CF62 F034          	movff	3938,_temp_SIDL	;volatile
  1629                           
  1630                           ;ECAN.c: 234: temp_DLC = RXB0DLC;
  1631  0001CE  CF65 F030          	movff	3941,_temp_DLC	;volatile
  1632                           
  1633                           ;ECAN.c: 235: BITDATA = RXB0D0;
  1634  0001D2  CF66 F028          	movff	3942,_BITDATA	;volatile
  1635                           
  1636                           ;ECAN.c: 236: ACCELERATOR = RXB0D1;
  1637  0001D6  CF67 F027          	movff	3943,_ACCELERATOR	;volatile
  1638                           
  1639                           ;ECAN.c: 237: temp_D2 = RXB0D2;
  1640  0001DA  CF68 F02A          	movff	3944,_temp_D2	;volatile
  1641                           
  1642                           ;ECAN.c: 238: temp_D3 = RXB0D3;
  1643  0001DE  CF69 F02B          	movff	3945,_temp_D3	;volatile
  1644                           
  1645                           ;ECAN.c: 239: temp_D4 = RXB0D4;
  1646  0001E2  CF6A F02C          	movff	3946,_temp_D4	;volatile
  1647                           
  1648                           ;ECAN.c: 240: temp_D5 = RXB0D5;
  1649  0001E6  CF6B F02D          	movff	3947,_temp_D5	;volatile
  1650                           
  1651                           ;ECAN.c: 241: temp_D6 = RXB0D6;
  1652  0001EA  CF6C F02E          	movff	3948,_temp_D6	;volatile
  1653                           
  1654                           ;ECAN.c: 242: temp_D7 = RXB0D7;
  1655  0001EE  CF6D F02F          	movff	3949,_temp_D7	;volatile
  1656                           
  1657                           ;ECAN.c: 243: RXB0CONbits.RXFUL = 0;
  1658  0001F2  9E60               	bcf	3936,7,c	;volatile
  1659  0001F4  D03F               	goto	l1310
  1660  0001F6                     l412:
  1661                           
  1662                           ;ECAN.c: 246: else if (RXB1CONbits.RXFUL)
  1663  0001F6  010F               	movlb	15	; () banked
  1664  0001F8  AF30               	btfss	48,7,b	;volatile
  1665  0001FA  D01D               	goto	l414
  1666                           
  1667                           ; BSR set to: 15
  1668                           ;ECAN.c: 247: {
  1669                           ;ECAN.c: 248: temp_EIDH = RXB1EIDH;
  1670  0001FC  CF33 F031          	movff	3891,_temp_EIDH	;volatile
  1671                           
  1672                           ;ECAN.c: 249: temp_EIDL = RXB1EIDL;
  1673  000200  CF34 F032          	movff	3892,_temp_EIDL	;volatile
  1674                           
  1675                           ;ECAN.c: 250: temp_SIDH = RXB1SIDH;
  1676  000204  CF31 F033          	movff	3889,_temp_SIDH	;volatile
  1677                           
  1678                           ;ECAN.c: 251: temp_SIDL = RXB1SIDL;
  1679  000208  CF32 F034          	movff	3890,_temp_SIDL	;volatile
  1680                           
  1681                           ;ECAN.c: 252: temp_DLC = RXB1DLC;
  1682  00020C  CF35 F030          	movff	3893,_temp_DLC	;volatile
  1683                           
  1684                           ;ECAN.c: 253: BITDATA = RXB1D0;
  1685  000210  CF36 F028          	movff	3894,_BITDATA	;volatile
  1686                           
  1687                           ;ECAN.c: 254: ACCELERATOR = RXB1D1;
  1688  000214  CF37 F027          	movff	3895,_ACCELERATOR	;volatile
  1689                           
  1690                           ;ECAN.c: 255: temp_D2 = RXB1D2;
  1691  000218  CF38 F02A          	movff	3896,_temp_D2	;volatile
  1692                           
  1693                           ;ECAN.c: 256: temp_D3 = RXB1D3;
  1694  00021C  CF39 F02B          	movff	3897,_temp_D3	;volatile
  1695                           
  1696                           ;ECAN.c: 257: temp_D4 = RXB1D4;
  1697  000220  CF3A F02C          	movff	3898,_temp_D4	;volatile
  1698                           
  1699                           ;ECAN.c: 258: temp_D5 = RXB1D5;
  1700  000224  CF3B F02D          	movff	3899,_temp_D5	;volatile
  1701                           
  1702                           ;ECAN.c: 259: temp_D6 = RXB1D6;
  1703  000228  CF3C F02E          	movff	3900,_temp_D6	;volatile
  1704                           
  1705                           ;ECAN.c: 260: temp_D7 = RXB1D7;
  1706  00022C  CF3D F02F          	movff	3901,_temp_D7	;volatile
  1707                           
  1708                           ;ECAN.c: 261: RXB1CONbits.RXFUL = 0;
  1709  000230  010F               	movlb	15	; () banked
  1710  000232  9F30               	bcf	48,7,b	;volatile
  1711  000234  D01F               	goto	l1310
  1712  000236                     l414:
  1713                           
  1714                           ; BSR set to: 15
  1715                           ;ECAN.c: 264: else if (B0CONbits.RXFUL)
  1716  000236  010E               	movlb	14	; () banked
  1717  000238  AF80               	btfss	128,7,b	;volatile
  1718  00023A  D01E               	goto	l1312
  1719                           
  1720                           ; BSR set to: 14
  1721                           ;ECAN.c: 265: {
  1722                           ;ECAN.c: 266: temp_EIDH = B0EIDH;
  1723  00023C  CE83 F031          	movff	3715,_temp_EIDH	;volatile
  1724                           
  1725                           ;ECAN.c: 267: temp_EIDL = B0EIDL;
  1726  000240  CE84 F032          	movff	3716,_temp_EIDL	;volatile
  1727                           
  1728                           ;ECAN.c: 268: temp_SIDH = B0SIDH;
  1729  000244  CE81 F033          	movff	3713,_temp_SIDH	;volatile
  1730                           
  1731                           ;ECAN.c: 269: temp_SIDL = B0SIDL;
  1732  000248  CE82 F034          	movff	3714,_temp_SIDL	;volatile
  1733                           
  1734                           ;ECAN.c: 270: temp_DLC = B0DLC;
  1735  00024C  CE85 F030          	movff	3717,_temp_DLC	;volatile
  1736                           
  1737                           ;ECAN.c: 271: BITDATA = B0D0;
  1738  000250  CE86 F028          	movff	3718,_BITDATA	;volatile
  1739                           
  1740                           ;ECAN.c: 272: ACCELERATOR = B0D1;
  1741  000254  CE87 F027          	movff	3719,_ACCELERATOR	;volatile
  1742                           
  1743                           ;ECAN.c: 273: temp_D2 = B0D2;
  1744  000258  CE88 F02A          	movff	3720,_temp_D2	;volatile
  1745                           
  1746                           ;ECAN.c: 274: temp_D3 = B0D3;
  1747  00025C  CE89 F02B          	movff	3721,_temp_D3	;volatile
  1748                           
  1749                           ;ECAN.c: 275: temp_D4 = B0D4;
  1750  000260  CE8A F02C          	movff	3722,_temp_D4	;volatile
  1751                           
  1752                           ;ECAN.c: 276: temp_D5 = B0D5;
  1753  000264  CE8B F02D          	movff	3723,_temp_D5	;volatile
  1754                           
  1755                           ;ECAN.c: 277: temp_D6 = B0D6;
  1756  000268  CE8C F02E          	movff	3724,_temp_D6	;volatile
  1757                           
  1758                           ;ECAN.c: 278: temp_D7 = B0D7;
  1759  00026C  CE8D F02F          	movff	3725,_temp_D7	;volatile
  1760                           
  1761                           ;ECAN.c: 280: B0CONbits.RXFUL = 0;
  1762  000270  010E               	movlb	14	; () banked
  1763  000272  9F80               	bcf	128,7,b	;volatile
  1764  000274                     l1310:
  1765                           
  1766                           ; BSR set to: 14
  1767                           ;ECAN.c: 281: RXMsgFlag = 0x01;
  1768  000274  0E01               	movlw	1
  1769  000276  6E43               	movwf	ECAN_Receive@RXMsgFlag,c
  1770  000278                     l1312:
  1771                           
  1772                           ;ECAN.c: 282: }
  1773                           ;ECAN.c: 284: if (RXMsgFlag == 0x01)
  1774  000278  0443               	decf	ECAN_Receive@RXMsgFlag,w,c
  1775  00027A  A4D8               	btfss	status,2,c
  1776  00027C  D005               	goto	l1324
  1777                           
  1778                           ;ECAN.c: 285: {
  1779                           ;ECAN.c: 286: RXMsgFlag = 0x00;
  1780  00027E  0E00               	movlw	0
  1781  000280  6E43               	movwf	ECAN_Receive@RXMsgFlag,c
  1782                           
  1783                           ;ECAN.c: 287: PIR5bits.RXB1IF = 0;
  1784  000282  9277               	bcf	3959,1,c	;volatile
  1785                           
  1786                           ;ECAN.c: 288: return 1;
  1787  000284  0E01               	movlw	1
  1788                           
  1789                           ;ECAN.c: 289: }
  1790  000286  0012               	return	
  1791  000288                     l1324:
  1792                           
  1793                           ;ECAN.c: 290: else
  1794                           ;ECAN.c: 291: {
  1795                           ;ECAN.c: 292: return 0;
  1796  000288  0E00               	movlw	0
  1797  00028A  0012               	return	
  1798  00028C                     __end_of_ECAN_Receive:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           status	equ	0xFD8
  1807                           
  1808 ;; *************** function _Delay *****************
  1809 ;; Defined at:
  1810 ;;		line 11 in file "Other.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  count           2   14[COMRAM] unsigned int 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;		None               void
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1828 ;;Total ram usage:        2 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text14
  1839  000586                     __ptext14:
  1840                           	opt stack 0
  1841  000586                     _Delay:
  1842                           	opt stack 29
  1843  000586                     l1458:
  1844  000586  0643               	decf	Delay@count,f,c
  1845  000588  A0D8               	btfss	status,0,c
  1846  00058A  0644               	decf	Delay@count+1,f,c
  1847  00058C  2843               	incf	Delay@count,w,c
  1848  00058E  E1FB               	bnz	l1458
  1849  000590  2844               	incf	Delay@count+1,w,c
  1850  000592  B4D8               	btfsc	status,2,c
  1851  000594  0012               	return	
  1852  000596  D7F7               	goto	l1458
  1853  000598                     __end_of_Delay:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           status	equ	0xFD8
  1862                           
  1863 ;; *************** function _CANSetup *****************
  1864 ;; Defined at:
  1865 ;;		line 111 in file "ECAN.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;		None               void
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text15
  1894  00008C                     __ptext15:
  1895                           	opt stack 0
  1896  00008C                     _CANSetup:
  1897                           	opt stack 29
  1898                           
  1899                           ;ECAN.c: 114: CANCON = 0x80;
  1900                           
  1901                           ;incstack = 0
  1902  00008C  0E80               	movlw	128
  1903  00008E  6E6F               	movwf	3951,c	;volatile
  1904  000090                     l1252:
  1905  000090  386E               	swapf	3950,w,c	;volatile
  1906  000092  32E8               	rrcf	wreg,f,c
  1907  000094  0B07               	andlw	7
  1908  000096  0A04               	xorlw	4
  1909  000098  A4D8               	btfss	status,2,c
  1910  00009A  D7FA               	goto	l1252
  1911                           
  1912                           ;ECAN.c: 118: ECANCON = 0x40;
  1913  00009C  0E40               	movlw	64
  1914  00009E  6E72               	movwf	3954,c	;volatile
  1915                           
  1916                           ;ECAN.c: 122: BRGCON1 = 0x81;
  1917  0000A0  0E81               	movlw	129
  1918  0000A2  010E               	movlb	14	; () banked
  1919  0000A4  6F43               	movwf	67,b	;volatile
  1920                           
  1921                           ;ECAN.c: 123: BRGCON2 = 0xB8;
  1922  0000A6  0EB8               	movlw	184
  1923  0000A8  010E               	movlb	14	; () banked
  1924  0000AA  6F44               	movwf	68,b	;volatile
  1925                           
  1926                           ;ECAN.c: 124: BRGCON3 = 0x05;
  1927  0000AC  0E05               	movlw	5
  1928  0000AE  010E               	movlb	14	; () banked
  1929  0000B0  6F45               	movwf	69,b	;volatile
  1930                           
  1931                           ;ECAN.c: 129: BSEL0 = 0xF8;
  1932  0000B2  0EF8               	movlw	248
  1933  0000B4  010E               	movlb	14	; () banked
  1934  0000B6  6F7D               	movwf	125,b	;volatile
  1935                           
  1936                           ;ECAN.c: 133: RXM0EIDH = 0x00;
  1937  0000B8  0E00               	movlw	0
  1938  0000BA  010E               	movlb	14	; () banked
  1939  0000BC  6FFA               	movwf	250,b	;volatile
  1940                           
  1941                           ;ECAN.c: 134: RXM0EIDL = 0x00;
  1942  0000BE  0E00               	movlw	0
  1943  0000C0  010E               	movlb	14	; () banked
  1944  0000C2  6FFB               	movwf	251,b	;volatile
  1945                           
  1946                           ; BSR set to: 14
  1947                           ;ECAN.c: 135: RXM0SIDH = 0xFF;
  1948  0000C4  010E               	movlb	14	; () banked
  1949  0000C6  69F8               	setf	248,b	;volatile
  1950                           
  1951                           ;ECAN.c: 136: RXM0SIDL = 0xE0;
  1952  0000C8  0EE0               	movlw	224
  1953  0000CA  010E               	movlb	14	; () banked
  1954  0000CC  6FF9               	movwf	249,b	;volatile
  1955                           
  1956                           ;ECAN.c: 139: RXM1EIDH = 0x00;
  1957  0000CE  0E00               	movlw	0
  1958  0000D0  010E               	movlb	14	; () banked
  1959  0000D2  6FFE               	movwf	254,b	;volatile
  1960                           
  1961                           ;ECAN.c: 140: RXM1EIDL = 0x00;
  1962  0000D4  0E00               	movlw	0
  1963  0000D6  010E               	movlb	14	; () banked
  1964  0000D8  6FFF               	movwf	255,b	;volatile
  1965                           
  1966                           ; BSR set to: 14
  1967                           ;ECAN.c: 141: RXM1SIDH = 0xFF;
  1968  0000DA  010E               	movlb	14	; () banked
  1969  0000DC  69FC               	setf	252,b	;volatile
  1970                           
  1971                           ;ECAN.c: 142: RXM1SIDL = 0xE0;
  1972  0000DE  0EE0               	movlw	224
  1973  0000E0  010E               	movlb	14	; () banked
  1974  0000E2  6FFD               	movwf	253,b	;volatile
  1975                           
  1976                           ;ECAN.c: 146: RXFCON0 = 0x07;
  1977  0000E4  0E07               	movlw	7
  1978  0000E6  010E               	movlb	14	; () banked
  1979  0000E8  6F46               	movwf	70,b	;volatile
  1980                           
  1981                           ;ECAN.c: 147: RXFCON1 = 0x00;
  1982  0000EA  0E00               	movlw	0
  1983  0000EC  010E               	movlb	14	; () banked
  1984  0000EE  6F47               	movwf	71,b	;volatile
  1985                           
  1986                           ;ECAN.c: 150: MSEL0 = 0xC0;
  1987  0000F0  0EC0               	movlw	192
  1988  0000F2  010E               	movlb	14	; () banked
  1989  0000F4  6F79               	movwf	121,b	;volatile
  1990                           
  1991                           ; BSR set to: 14
  1992                           ;ECAN.c: 151: MSEL1 = 0xFF;
  1993  0000F6  010E               	movlb	14	; () banked
  1994  0000F8  697A               	setf	122,b	;volatile
  1995                           
  1996                           ; BSR set to: 14
  1997                           ;ECAN.c: 152: MSEL2 = 0xFF;
  1998  0000FA  010E               	movlb	14	; () banked
  1999  0000FC  697B               	setf	123,b	;volatile
  2000                           
  2001                           ; BSR set to: 14
  2002                           ;ECAN.c: 153: MSEL3 = 0xFF;
  2003  0000FE  010E               	movlb	14	; () banked
  2004  000100  697C               	setf	124,b	;volatile
  2005                           
  2006                           ;ECAN.c: 157: RXFBCON0 = 0x10;
  2007  000102  0E10               	movlw	16
  2008  000104  010E               	movlb	14	; () banked
  2009  000106  6F71               	movwf	113,b	;volatile
  2010                           
  2011                           ;ECAN.c: 158: RXFBCON1 = 0xF2;
  2012  000108  0EF2               	movlw	242
  2013  00010A  010E               	movlb	14	; () banked
  2014  00010C  6F72               	movwf	114,b	;volatile
  2015                           
  2016                           ; BSR set to: 14
  2017                           ;ECAN.c: 160: RXFBCON2 = 0xFF;
  2018  00010E  010E               	movlb	14	; () banked
  2019  000110  6973               	setf	115,b	;volatile
  2020                           
  2021                           ; BSR set to: 14
  2022                           ;ECAN.c: 161: RXFBCON3 = 0xFF;
  2023  000112  010E               	movlb	14	; () banked
  2024  000114  6974               	setf	116,b	;volatile
  2025                           
  2026                           ; BSR set to: 14
  2027                           ;ECAN.c: 162: RXFBCON4 = 0xFF;
  2028  000116  010E               	movlb	14	; () banked
  2029  000118  6975               	setf	117,b	;volatile
  2030                           
  2031                           ; BSR set to: 14
  2032                           ;ECAN.c: 163: RXFBCON5 = 0xFF;
  2033  00011A  010E               	movlb	14	; () banked
  2034  00011C  6976               	setf	118,b	;volatile
  2035                           
  2036                           ; BSR set to: 14
  2037                           ;ECAN.c: 164: RXFBCON6 = 0xFF;
  2038  00011E  010E               	movlb	14	; () banked
  2039  000120  6977               	setf	119,b	;volatile
  2040                           
  2041                           ; BSR set to: 14
  2042                           ;ECAN.c: 165: RXFBCON7 = 0xFF;
  2043  000122  010E               	movlb	14	; () banked
  2044  000124  6978               	setf	120,b	;volatile
  2045                           
  2046                           ;ECAN.c: 171: RXF0EIDH = 0x00;
  2047  000126  0E00               	movlw	0
  2048  000128  010E               	movlb	14	; () banked
  2049  00012A  6FE2               	movwf	226,b	;volatile
  2050                           
  2051                           ;ECAN.c: 172: RXF0EIDL = 0x00;
  2052  00012C  0E00               	movlw	0
  2053  00012E  010E               	movlb	14	; () banked
  2054  000130  6FE3               	movwf	227,b	;volatile
  2055                           
  2056                           ;ECAN.c: 173: RXF0SIDH = 0x32;
  2057  000132  0E32               	movlw	50
  2058  000134  010E               	movlb	14	; () banked
  2059  000136  6FE0               	movwf	224,b	;volatile
  2060                           
  2061                           ;ECAN.c: 174: RXF0SIDL = 0xC0;
  2062  000138  0EC0               	movlw	192
  2063  00013A  010E               	movlb	14	; () banked
  2064  00013C  6FE1               	movwf	225,b	;volatile
  2065                           
  2066                           ;ECAN.c: 175: RXF1EIDH = 0x00;
  2067  00013E  0E00               	movlw	0
  2068  000140  010E               	movlb	14	; () banked
  2069  000142  6FE6               	movwf	230,b	;volatile
  2070                           
  2071                           ;ECAN.c: 176: RXF1EIDL = 0x00;
  2072  000144  0E00               	movlw	0
  2073  000146  010E               	movlb	14	; () banked
  2074  000148  6FE7               	movwf	231,b	;volatile
  2075                           
  2076                           ;ECAN.c: 177: RXF1SIDH = 0x33;
  2077  00014A  0E33               	movlw	51
  2078  00014C  010E               	movlb	14	; () banked
  2079  00014E  6FE4               	movwf	228,b	;volatile
  2080                           
  2081                           ;ECAN.c: 178: RXF1SIDL = 0x40;
  2082  000150  0E40               	movlw	64
  2083  000152  010E               	movlb	14	; () banked
  2084  000154  6FE5               	movwf	229,b	;volatile
  2085                           
  2086                           ;ECAN.c: 179: RXF2EIDH = 0x00;
  2087  000156  0E00               	movlw	0
  2088  000158  010E               	movlb	14	; () banked
  2089  00015A  6FEA               	movwf	234,b	;volatile
  2090                           
  2091                           ;ECAN.c: 180: RXF2EIDL = 0x00;
  2092  00015C  0E00               	movlw	0
  2093  00015E  010E               	movlb	14	; () banked
  2094  000160  6FEB               	movwf	235,b	;volatile
  2095                           
  2096                           ;ECAN.c: 181: RXF2SIDH = 0x33;
  2097  000162  0E33               	movlw	51
  2098  000164  010E               	movlb	14	; () banked
  2099  000166  6FE8               	movwf	232,b	;volatile
  2100                           
  2101                           ;ECAN.c: 182: RXF2SIDL = 0xC0;
  2102  000168  0EC0               	movlw	192
  2103  00016A  010E               	movlb	14	; () banked
  2104  00016C  6FE9               	movwf	233,b	;volatile
  2105                           
  2106                           ;ECAN.c: 185: if (0 ==1)
  2107  00016E  D00E               	goto	l1286
  2108  000170                     l1280:
  2109  000170  386E               	swapf	3950,w,c	;volatile
  2110  000172  32E8               	rrcf	wreg,f,c
  2111  000174  0B07               	andlw	7
  2112  000176  0A40               	xorlw	64
  2113  000178  A4D8               	btfss	status,2,c
  2114  00017A  D017               	goto	l1294
  2115  00017C  D7F9               	goto	l1280
  2116  00017E                     l1284:
  2117  00017E  386E               	swapf	3950,w,c	;volatile
  2118  000180  32E8               	rrcf	wreg,f,c
  2119  000182  0B07               	andlw	7
  2120  000184  0A60               	xorlw	96
  2121  000186  A4D8               	btfss	status,2,c
  2122  000188  D010               	goto	l1294
  2123  00018A  D7F9               	goto	l1284
  2124  00018C                     l1286:
  2125                           
  2126                           ;ECAN.c: 196: CANCON = 0x00;
  2127  00018C  0E00               	movlw	0
  2128  00018E  6E6F               	movwf	3951,c	;volatile
  2129  000190                     l1288:
  2130  000190  386E               	swapf	3950,w,c	;volatile
  2131  000192  32E8               	rrcf	wreg,f,c
  2132  000194  0B07               	andlw	7
  2133  000196  0900               	iorlw	0
  2134  000198  A4D8               	btfss	status,2,c
  2135  00019A  D007               	goto	l1294
  2136  00019C  D7F9               	goto	l1288
  2137  00019E                     l1292:
  2138  00019E  386E               	swapf	3950,w,c	;volatile
  2139  0001A0  32E8               	rrcf	wreg,f,c
  2140  0001A2  0B07               	andlw	7
  2141  0001A4  0A40               	xorlw	64
  2142  0001A6  B4D8               	btfsc	status,2,c
  2143  0001A8  D7FA               	goto	l1292
  2144  0001AA                     l1294:
  2145                           
  2146                           ;ECAN.c: 204: }
  2147                           ;ECAN.c: 207: RXB0CON = 0x00;
  2148  0001AA  0E00               	movlw	0
  2149  0001AC  6E60               	movwf	3936,c	;volatile
  2150                           
  2151                           ;ECAN.c: 208: RXB1CON = 0x00;
  2152  0001AE  0E00               	movlw	0
  2153  0001B0  010F               	movlb	15	; () banked
  2154  0001B2  6F30               	movwf	48,b	;volatile
  2155                           
  2156                           ; BSR set to: 15
  2157  0001B4  0012               	return		;funcret
  2158  0001B6                     __end_of_CANSetup:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _ISR *****************
  2169 ;; Defined at:
  2170 ;;		line 54 in file "main.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		None
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;Total ram usage:       14 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		Interrupt level 2
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	intcode
  2198  000008                     __pintcode:
  2199                           	opt stack 0
  2200  000008                     _ISR:
  2201                           	opt stack 29
  2202                           
  2203                           ; BSR set to: 15
  2204                           ;incstack = 0
  2205  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2206  00000A  CFFA F035          	movff	pclath,??_ISR
  2207  00000E  CFFB F036          	movff	pclatu,??_ISR+1
  2208  000012  CFE9 F037          	movff	fsr0l,??_ISR+2
  2209  000016  CFEA F038          	movff	fsr0h,??_ISR+3
  2210  00001A  CFE1 F039          	movff	fsr1l,??_ISR+4
  2211  00001E  CFE2 F03A          	movff	fsr1h,??_ISR+5
  2212  000022  CFD9 F03B          	movff	fsr2l,??_ISR+6
  2213  000026  CFDA F03C          	movff	fsr2h,??_ISR+7
  2214  00002A  CFF3 F03D          	movff	prodl,??_ISR+8
  2215  00002E  CFF4 F03E          	movff	prodh,??_ISR+9
  2216  000032  CFF6 F03F          	movff	tblptrl,??_ISR+10
  2217  000036  CFF7 F040          	movff	tblptrh,??_ISR+11
  2218  00003A  CFF8 F041          	movff	tblptru,??_ISR+12
  2219  00003E  CFF5 F042          	movff	tablat,??_ISR+13
  2220                           
  2221                           ;main.c: 56: if(IRXIF){
  2222  000042  AE77               	btfss	3959,7,c	;volatile
  2223  000044  D003               	goto	i2l113
  2224                           
  2225                           ;main.c: 58: if(TXB0CONbits.TXERR){
  2226  000046  010F               	movlb	15	; () banked
  2227  000048  B920               	btfsc	32,4,b	;volatile
  2228  00004A  D7FF               	goto	i2l111
  2229  00004C                     i2l113:
  2230  00004C  C042  FFF5         	movff	??_ISR+13,tablat
  2231  000050  C041  FFF8         	movff	??_ISR+12,tblptru
  2232  000054  C040  FFF7         	movff	??_ISR+11,tblptrh
  2233  000058  C03F  FFF6         	movff	??_ISR+10,tblptrl
  2234  00005C  C03E  FFF4         	movff	??_ISR+9,prodh
  2235  000060  C03D  FFF3         	movff	??_ISR+8,prodl
  2236  000064  C03C  FFDA         	movff	??_ISR+7,fsr2h
  2237  000068  C03B  FFD9         	movff	??_ISR+6,fsr2l
  2238  00006C  C03A  FFE2         	movff	??_ISR+5,fsr1h
  2239  000070  C039  FFE1         	movff	??_ISR+4,fsr1l
  2240  000074  C038  FFEA         	movff	??_ISR+3,fsr0h
  2241  000078  C037  FFE9         	movff	??_ISR+2,fsr0l
  2242  00007C  C036  FFFB         	movff	??_ISR+1,pclatu
  2243  000080  C035  FFFA         	movff	??_ISR,pclath
  2244  000084  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2245  000086  0011               	retfie		f
  2246  000088                     __end_of_ISR:
  2247                           	opt stack 0
  2248  0000                     pclatu	equ	0xFFB
  2249                           pclath	equ	0xFFA
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           prodh	equ	0xFF4
  2255                           prodl	equ	0xFF3
  2256                           postinc0	equ	0xFEE
  2257                           fsr0h	equ	0xFEA
  2258                           fsr0l	equ	0xFE9
  2259                           wreg	equ	0xFE8
  2260                           fsr1h	equ	0xFE2
  2261                           fsr1l	equ	0xFE1
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           pclatu	equ	0xFFB
  2266                           pclath	equ	0xFFA
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           postinc0	equ	0xFEE
  2274                           fsr0h	equ	0xFEA
  2275                           fsr0l	equ	0xFE9
  2276                           wreg	equ	0xFE8
  2277                           fsr1h	equ	0xFE2
  2278                           fsr1l	equ	0xFE1
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283                           	psect	rparam
  2284  0000                     pclatu	equ	0xFFB
  2285                           pclath	equ	0xFFA
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           prodh	equ	0xFF4
  2291                           prodl	equ	0xFF3
  2292                           postinc0	equ	0xFEE
  2293                           fsr0h	equ	0xFEA
  2294                           fsr0l	equ	0xFE9
  2295                           wreg	equ	0xFE8
  2296                           fsr1h	equ	0xFE2
  2297                           fsr1l	equ	0xFE1
  2298                           fsr2h	equ	0xFDA
  2299                           fsr2l	equ	0xFD9
  2300                           status	equ	0xFD8
  2301                           
  2302                           	psect	temp
  2303  000051                     btemp:
  2304                           	opt stack 0
  2305  000051                     	ds	1
  2306  0000                     int$flags	set	btemp
  2307                           pclatu	equ	0xFFB
  2308                           pclath	equ	0xFFA
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           prodh	equ	0xFF4
  2314                           prodl	equ	0xFF3
  2315                           postinc0	equ	0xFEE
  2316                           fsr0h	equ	0xFEA
  2317                           fsr0l	equ	0xFE9
  2318                           wreg	equ	0xFE8
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         52
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_ECAN_Transmit

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     752
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                         _InitDevice
                   _checkAccelerator
                     _checkBacklight
                         _checkBrake
                     _checkDirection
                       _checkH_blink
                     _checkHeartbeat
                     _checkSafetyPin
                       _checkV_blink
                           _unZipCAN
                       _updateInputs
 ---------------------------------------------------------------------------------
 (1) _updateInputs                                         1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _unZipCAN                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkV_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSafetyPin                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkHeartbeat                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkH_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDirection                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBrake                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBacklight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkAccelerator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10     672
                                             14 COMRAM    11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay                                                2     0      2      65
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _InitDevice
   _checkAccelerator
   _checkBacklight
   _checkBrake
   _checkDirection
   _checkH_blink
   _checkHeartbeat
   _checkSafetyPin
   _checkV_blink
   _unZipCAN
   _updateInputs

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      50       1       85.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50       6        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 10 19:56:43 2015

            _MAP_BACKLIGHT 0003       __end_of_checkV_blink 04CA            _MAP_ACCELERATOR 0001  
          ?_checkBacklight 0035                __CFG_BORV$3 000000     __end_of_checkSafetyPin 0542  
        ?_checkAccelerator 0035               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                        l412 01F6  
                      l414 0236               __CFG_CPB$OFF 000000                        u100 0568  
                      u110 04FA                        u200 057C                        u130 04B6  
                      u125 050A                        u126 050C                        u150 04D8  
                      u208 057E                        u145 04C6                        u170 0550  
                      u146 04C8                        u180 0538                        u165 04E8  
                      u190 051C                        u166 04EA               __CFG_CPD$OFF 000000  
                      _ISR 0008         ??_checkAccelerator 0043                        wreg 000FE8  
                     ?_ISR 0035              _MAP_HEARTBEAT 000B                       _B0D0 000E86  
                     _B0D1 000E87                       _B0D2 000E88                       _B0D3 000E89  
                     _B0D4 000E8A                       _B0D5 000E8B                       _B0D6 000E8C  
                     _B0D7 000E8D              _MAP_DIRECTION 0009                       l1310 0274  
                     l1312 0278                       l1252 0090                       l1324 0288  
                     l1280 0170                       l1292 019E                       l1284 017E  
                     l1294 01AA                       l1286 018C                       l1288 0190  
                     l1458 0586                       l1466 036A            ?_checkHeartbeat 0035  
          ?_checkDirection 0035                       _LATA 000F89                       _LATB 000F8A  
                     _LATC 000F8B                       _main 0360                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0051  
                     pclat 000FFA                       prodh 000FF4                       prodl 000FF3  
                     start 0088              __CFG_IESO$OFF 000000           __end_of_CANSetup 01B6  
            __CFG_MCLRE$ON 000000               ___param_bank 000010                      ??_ISR 0035  
            _MAP_SAFETYPIN 000F            ?_checkSafetyPin 0035                      _B0DLC 000E85  
                    ?_main 0035                      _BSEL0 000E7D                      i2l111 004A  
                    i2l113 004C                      _MSEL0 000E79                      _MSEL1 000E7A  
                    _MSEL2 000E7B                      _MSEL3 000E7C                      _IRXIF 007BBF  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _Delay 0586              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000                      _count 0050  
                    tablat 000FF5                      status 000FD8                 _InitDevice 028C  
    __size_of_ECAN_Receive 00D6            __initialization 047A               __end_of_main 03D6  
                   ??_main 004E              __activetblptr 000000             __CFG_RETEN$OFF 000000  
                   ?_Delay 0043                     _B0EIDH 000E83                     _B0EIDL 000E84  
         ECAN_Transmit@DLC 0044                     _B0SIDH 000E81                     _B0SIDL 000E82  
                   _CANCON 000F6F                     _ANCON0 000F5D                     _ANCON1 000F5C  
    __size_of_checkH_blink 0022               _ECAN_Receive 01B6             _TEMP_MAP_BRAKE 0019  
          __CFG_BBSIZ$BB2K 000000                     _RXB0D0 000F66                     _RXB0D1 000F67  
                   _RXB0D2 000F68                     _RXB0D3 000F69                     _RXB0D4 000F6A  
                   _RXB1D0 000F36                     _RXB0D5 000F6B                     _RXB1D1 000F37  
                   _RXB0D6 000F6C                     _RXB1D2 000F38                     _RXB0D7 000F6D  
                   _RXB1D3 000F39                     _RXB1D4 000F3A                     _RXB1D5 000F3B  
                   _RXB1D6 000F3C                     _RXB1D7 000F3D                     _TXB0D0 000F26  
                   _TXB0D1 000F27                     _TXB0D2 000F28                     _TXB0D3 000F29  
                   _TXB0D4 000F2A                     _TXB0D5 000F2B                     _TXB0D6 000F2C  
                   _TXB0D7 000F2D      __size_of_checkV_blink 0022             __CFG_XINST$OFF 000000  
           __CFG_STVREN$ON 000000                     clear_0 0480               _checkH_blink 04CA  
         __end_of_unZipCAN 043A               __pdataCOMRAM 004E                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ?_CANSetup 0035  
             _checkV_blink 04A8                 __accesstop 0060    __end_of__initialization 049E  
 ECAN_Transmit@TRANSMIT_ID 0045       _TEMP_MAP_ACCELERATOR 0015              ___rparam_used 000001  
         ??_checkBacklight 0043                ?_InitDevice 0035              __end_of_Delay 0598  
           __pcstackCOMRAM 0035     __size_of_ECAN_Transmit 0040                    ??_Delay 0045  
         ??_checkHeartbeat 0043           ??_checkDirection 0043                 ??_CANSetup 0043  
               _checkBrake 055A  __size_of_checkAccelerator 001C            __CFG_PLLCFG$OFF 000000  
               __pnvCOMRAM 0050           ??_checkSafetyPin 0043          ECAN_Transmit@SIDH 004D  
        ECAN_Transmit@SIDL 0043                  _B0CONbits 000E80                    _ECANCON 000F72  
                  _BITDATA 0028                    _BRGCON1 000E43                    _BRGCON2 000E44  
                  _BRGCON3 000E45           __CFG_CANMX$PORTB 000000        __size_of_InitDevice 00D4  
         _BATTERISTATUS_ID 004E                    _RXB0DLC 000F65                    _RXB1DLC 000F35  
                  _RXB0CON 000F60                    _RXB1CON 000F30                    _TXB0DLC 000F25  
                  _RXFCON0 000E46                    _RXFCON1 000E47              _ECAN_Transmit 043A  
          __CFG_PWRTEN$OFF 000000                    __Hparam 0000                    __Lparam 0000  
                ?_unZipCAN 0035                    __pcinit 047A                    __ramtop 0F00  
                  __ptext0 0360                    __ptext1 0572                    __ptext2 03D6  
                  __ptext3 04A8                    __ptext4 052A                    __ptext5 059A  
                  __ptext6 04CA                    __ptext7 0542                    __ptext8 055A  
                  __ptext9 04EC               __size_of_ISR 0080          __CFG_MSSPMSK$MSK7 000000  
                  _temp_D2 002A                    _temp_D3 002B                    _temp_D4 002C  
                  _temp_D5 002D                    _temp_D6 002E                    _temp_D7 002F  
           ?_ECAN_Transmit 0043                ?_checkBrake 0035                  _MAP_BRAKE 0007  
     end_of_initialization 049E          _MAP_BATTERYSTATUS 0005                 ??_unZipCAN 0043  
         _buttonWasPressed 0029                _ACCELERATOR 0027                    postinc0 000FEE  
                _PORTAbits 000F80           __CFG_FOSC$INTIO2 000000          __CFG_SOSCSEL$HIGH 000000  
         _checkAccelerator 050E          __size_of_CANSetup 012A               ??_InitDevice 0043  
            ?_updateInputs 0035        __size_of_checkBrake 0018              __pidataCOMRAM 0598  
             _MAP_VELOCITY 0011        start_initialization 047A            ??_ECAN_Transmit 004D  
              __end_of_ISR 0088         __end_of_InitDevice 0360                _CANSTATbits 000F6E  
           ??_updateInputs 0043                __pbssCOMRAM 0001         ECAN_Transmit@DATA1 0046  
       ECAN_Transmit@DATA2 0047         ECAN_Transmit@DATA3 0048         ECAN_Transmit@DATA4 0049  
       ECAN_Transmit@DATA5 004A         ECAN_Transmit@DATA6 004B         ECAN_Transmit@DATA7 004C  
                __pintcode 0008          __size_of_unZipCAN 0064    __size_of_checkBacklight 0022  
           _heartbeatCount 0025             __size_of_Delay 0012                   _CANSetup 008C  
             ??_checkBrake 0043              ?_ECAN_Receive 0035    __size_of_checkHeartbeat 0002  
                 _LATAbits 000F89                   _LATBbits 000F8A    __size_of_checkDirection 0018  
         _TEMP_MAP_H_BLINK 001F                  _temp_EIDH 0031                  _temp_EIDL 0032  
                _temp_SIDH 0033                  _temp_SIDL 0034                   _PIR5bits 000F77  
                 _RXB0EIDH 000F63                   _RXB0EIDL 000F64                   _RXB1EIDH 000F33  
                 _RXB1EIDL 000F34                   _MOTOR_ID 004F                   _RXB0SIDH 000F61  
                 _RXB0SIDL 000F62                   _RXB1SIDH 000F31                   _RXF0EIDH 000EE2  
                 _RXB1SIDL 000F32                   _RXF0EIDL 000EE3                   _RXF1EIDH 000EE6  
                 _RXF1EIDL 000EE7                   _RXF2EIDH 000EEA                   _RXF2EIDL 000EEB  
                 _RXF0SIDH 000EE0                   _RXF0SIDL 000EE1                   _TXB0EIDH 000F23  
                 _RXF1SIDH 000EE4                   _TXB0EIDL 000F24                   _RXF1SIDL 000EE5  
                 _RXF2SIDH 000EE8                   _RXF2SIDL 000EE9                   _RXM0EIDH 000EFA  
                 _RXM0EIDL 000EFB                   _TXB0SIDH 000F21                   _RXM1EIDH 000EFE  
                 _TXB0SIDL 000F22                   _RXM1EIDL 000EFF           _TEMP_MAP_V_BLINK 0023  
                 _RXFBCON0 000E71                   _RXFBCON1 000E72                   _RXFBCON2 000E73  
                 _RXFBCON3 000E74                   _RXFBCON4 000E75                   _RXFBCON5 000E76  
                 _RXFBCON6 000E77                   _RXFBCON7 000E78                   _RXM0SIDH 000EF8  
                 _RXM0SIDL 000EF9                   _RXM1SIDH 000EFC                   _RXM1SIDL 000EFD  
 __end_of_checkAccelerator 052A         __end_of_checkBrake 0572      ECAN_Receive@RXMsgFlag 0043  
            ?_checkH_blink 0035    __size_of_checkSafetyPin 0018       __end_of_updateInputs 0586  
            ?_checkV_blink 0035             ??_ECAN_Receive 0043                _MAP_H_BLINK 000D  
              _MAP_V_BLINK 0013                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000         _TEMP_MAP_BACKLIGHT 0017             ??_checkH_blink 0043  
           ??_checkV_blink 0043                   __ptext10 050E                   __ptext11 028C  
                 __ptext12 043A                   __ptext13 01B6                   __ptext14 0586  
                 __ptext15 008C              __size_of_main 0076         _TEMP_MAP_HEARTBEAT 001D  
       _TEMP_MAP_DIRECTION 001B                   _temp_DLC 0030                   _unZipCAN 03D6  
                 int$flags 0051             _checkBacklight 04EC        __CFG_INTOSCSEL$HIGH 000000  
               Delay@count 0043                _RXB0CONbits 000F60                _RXB1CONbits 000F30  
       __CFG_WDTEN$SWDTDIS 000000                _OSCTUNEbits 000F9B         _TEMP_MAP_SAFETYPIN 0021  
    __end_of_ECAN_Transmit 047A                   intlevel2 0000             _checkHeartbeat 059A  
           _checkDirection 0542                _TXB0CONbits 000F20                 _OSCCONbits 000FD3  
   __end_of_checkBacklight 050E         __CFG_WDTPS$1048576 000000       __end_of_ECAN_Receive 028C  
    __size_of_updateInputs 0014             _checkSafetyPin 052A     __end_of_checkHeartbeat 059C  
   __end_of_checkDirection 055A        __CFG_BORPWR$ZPBORMV 000000       __end_of_checkH_blink 04EC  
             _updateInputs 0572  
