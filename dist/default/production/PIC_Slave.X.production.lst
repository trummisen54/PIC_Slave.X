

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Dec 18 22:48:58 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000864                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _BATTERISTATUS_ID
    40  000864  02                 	db	2
    41                           
    42                           ;initializer for _MOTOR_ID
    43  000865  01                 	db	1
    44                           
    45                           	psect	nvCOMRAM
    46  000053                     __pnvCOMRAM:
    47                           	opt stack 0
    48  000053                     _count:
    49                           	opt stack 0
    50  000053                     	ds	1
    51  0000                     _B0CONbits	set	3712
    52  0000                     _B0D0	set	3718
    53  0000                     _B0D1	set	3719
    54  0000                     _B0D2	set	3720
    55  0000                     _B0D3	set	3721
    56  0000                     _B0D4	set	3722
    57  0000                     _B0D5	set	3723
    58  0000                     _B0D6	set	3724
    59  0000                     _B0D7	set	3725
    60  0000                     _B0DLC	set	3717
    61  0000                     _B0EIDH	set	3715
    62  0000                     _B0EIDL	set	3716
    63  0000                     _B0SIDH	set	3713
    64  0000                     _B0SIDL	set	3714
    65  0000                     _BRGCON1	set	3651
    66  0000                     _BRGCON2	set	3652
    67  0000                     _BRGCON3	set	3653
    68  0000                     _BSEL0	set	3709
    69  0000                     _MSEL0	set	3705
    70  0000                     _MSEL1	set	3706
    71  0000                     _MSEL2	set	3707
    72  0000                     _MSEL3	set	3708
    73  0000                     _RXF0EIDH	set	3810
    74  0000                     _RXF0EIDL	set	3811
    75  0000                     _RXF0SIDH	set	3808
    76  0000                     _RXF0SIDL	set	3809
    77  0000                     _RXF1EIDH	set	3814
    78  0000                     _RXF1EIDL	set	3815
    79  0000                     _RXF1SIDH	set	3812
    80  0000                     _RXF1SIDL	set	3813
    81  0000                     _RXF2EIDH	set	3818
    82  0000                     _RXF2EIDL	set	3819
    83  0000                     _RXF2SIDH	set	3816
    84  0000                     _RXF2SIDL	set	3817
    85  0000                     _RXFBCON0	set	3697
    86  0000                     _RXFBCON1	set	3698
    87  0000                     _RXFBCON2	set	3699
    88  0000                     _RXFBCON3	set	3700
    89  0000                     _RXFBCON4	set	3701
    90  0000                     _RXFBCON5	set	3702
    91  0000                     _RXFBCON6	set	3703
    92  0000                     _RXFBCON7	set	3704
    93  0000                     _RXFCON0	set	3654
    94  0000                     _RXFCON1	set	3655
    95  0000                     _RXM0EIDH	set	3834
    96  0000                     _RXM0EIDL	set	3835
    97  0000                     _RXM0SIDH	set	3832
    98  0000                     _RXM0SIDL	set	3833
    99  0000                     _RXM1EIDH	set	3838
   100  0000                     _RXM1EIDL	set	3839
   101  0000                     _RXM1SIDH	set	3836
   102  0000                     _RXM1SIDL	set	3837
   103  0000                     _ANCON0	set	3933
   104  0000                     _ANCON1	set	3932
   105  0000                     _RXB1CON	set	3888
   106  0000                     _RXB1CONbits	set	3888
   107  0000                     _RXB1D0	set	3894
   108  0000                     _RXB1D1	set	3895
   109  0000                     _RXB1D2	set	3896
   110  0000                     _RXB1D3	set	3897
   111  0000                     _RXB1D4	set	3898
   112  0000                     _RXB1D5	set	3899
   113  0000                     _RXB1D6	set	3900
   114  0000                     _RXB1D7	set	3901
   115  0000                     _RXB1DLC	set	3893
   116  0000                     _RXB1EIDH	set	3891
   117  0000                     _RXB1EIDL	set	3892
   118  0000                     _RXB1SIDH	set	3889
   119  0000                     _RXB1SIDL	set	3890
   120  0000                     _TXB0CONbits	set	3872
   121  0000                     _TXB0D0	set	3878
   122  0000                     _TXB0D1	set	3879
   123  0000                     _TXB0D2	set	3880
   124  0000                     _TXB0D3	set	3881
   125  0000                     _TXB0D4	set	3882
   126  0000                     _TXB0D5	set	3883
   127  0000                     _TXB0D6	set	3884
   128  0000                     _TXB0D7	set	3885
   129  0000                     _TXB0DLC	set	3877
   130  0000                     _TXB0EIDH	set	3875
   131  0000                     _TXB0EIDL	set	3876
   132  0000                     _TXB0SIDH	set	3873
   133  0000                     _TXB0SIDL	set	3874
   134  0000                     _ADCON0	set	4034
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _ADCON1	set	4033
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON2bits	set	4032
   139  0000                     _ADRESH	set	4036
   140  0000                     _CANCON	set	3951
   141  0000                     _CANSTATbits	set	3950
   142  0000                     _ECANCON	set	3954
   143  0000                     _INTCONbits	set	4082
   144  0000                     _LATA	set	3977
   145  0000                     _LATAbits	set	3977
   146  0000                     _LATB	set	3978
   147  0000                     _LATBbits	set	3978
   148  0000                     _LATC	set	3979
   149  0000                     _OSCCONbits	set	4051
   150  0000                     _OSCTUNEbits	set	3995
   151  0000                     _PIE1bits	set	3997
   152  0000                     _PIR5bits	set	3959
   153  0000                     _RCONbits	set	4048
   154  0000                     _RXB0CON	set	3936
   155  0000                     _RXB0CONbits	set	3936
   156  0000                     _RXB0D0	set	3942
   157  0000                     _RXB0D1	set	3943
   158  0000                     _RXB0D2	set	3944
   159  0000                     _RXB0D3	set	3945
   160  0000                     _RXB0D4	set	3946
   161  0000                     _RXB0D5	set	3947
   162  0000                     _RXB0D6	set	3948
   163  0000                     _RXB0D7	set	3949
   164  0000                     _RXB0DLC	set	3941
   165  0000                     _RXB0EIDH	set	3939
   166  0000                     _RXB0EIDL	set	3940
   167  0000                     _RXB0SIDH	set	3937
   168  0000                     _RXB0SIDL	set	3938
   169  0000                     _T0CONbits	set	4053
   170  0000                     _T1CONbits	set	4045
   171  0000                     _T1GCONbits	set	4010
   172  0000                     _TRISA	set	3986
   173  0000                     _TRISB	set	3987
   174  0000                     _TRISC	set	3988
   175  0000                     _IRXIF	set	31679
   176  0000                     _TMR0IF	set	32658
   177  0000                     _TMR1IF	set	31984
   178                           
   179                           ; #config settings
   180  0000                     
   181                           	psect	cinit
   182  000728                     __pcinit:
   183                           	opt stack 0
   184  000728                     start_initialization:
   185                           	opt stack 0
   186  000728                     __initialization:
   187                           	opt stack 0
   188                           
   189                           ; Clear objects allocated to COMRAM (66 bytes)
   190  000728  EE00  F001         	lfsr	0,__pbssCOMRAM
   191  00072C  0E42               	movlw	66
   192  00072E                     clear_0:
   193  00072E  6AEE               	clrf	postinc0,c
   194  000730  06E8               	decf	wreg,f,c
   195  000732  E1FD               	bnz	clear_0
   196                           
   197                           ; Initialize objects allocated to COMRAM (2 bytes)
   198                           ; load TBLPTR registers with __pidataCOMRAM
   199  000734  0E64               	movlw	low __pidataCOMRAM
   200  000736  6EF6               	movwf	tblptrl,c
   201  000738  0E08               	movlw	high __pidataCOMRAM
   202  00073A  6EF7               	movwf	tblptrh,c
   203  00073C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   204  00073E  6EF8               	movwf	tblptru,c
   205  000740  0009               	tblrd		*+	;fetch initializer
   206  000742  CFF5 F051          	movff	tablat,__pdataCOMRAM
   207  000746  0009               	tblrd		*+	;fetch initializer
   208  000748  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   209  00074C                     end_of_initialization:
   210                           	opt stack 0
   211  00074C                     __end_of__initialization:
   212                           	opt stack 0
   213  00074C  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   214  00074E  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   215  000750  0100               	movlb	0
   216  000752  EF5C  F002         	goto	_main	;jump to C main() function
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           tblptrl	equ	0xFF6
   220                           tablat	equ	0xFF5
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           	psect	bssCOMRAM
   225  000001                     __pbssCOMRAM:
   226                           	opt stack 0
   227  000001                     _blinkCounter:
   228                           	opt stack 0
   229  000001                     	ds	4
   230  000005                     _heartBeatCounter:
   231                           	opt stack 0
   232  000005                     	ds	4
   233  000009                     _interruptCounter:
   234                           	opt stack 0
   235  000009                     	ds	4
   236  00000D                     _FIRST_SEND:
   237                           	opt stack 0
   238  00000D                     	ds	2
   239  00000F                     _MAP_ACCELERATOR:
   240                           	opt stack 0
   241  00000F                     	ds	2
   242  000011                     _MAP_BACKLIGHT:
   243                           	opt stack 0
   244  000011                     	ds	2
   245  000013                     _MAP_BATTERYSTATUS:
   246                           	opt stack 0
   247  000013                     	ds	2
   248  000015                     _MAP_BRAKE:
   249                           	opt stack 0
   250  000015                     	ds	2
   251  000017                     _MAP_DIRECTION:
   252                           	opt stack 0
   253  000017                     	ds	2
   254  000019                     _MAP_HEARTBEAT:
   255                           	opt stack 0
   256  000019                     	ds	2
   257  00001B                     _MAP_H_BLINK:
   258                           	opt stack 0
   259  00001B                     	ds	2
   260  00001D                     _MAP_SAFETYPIN:
   261                           	opt stack 0
   262  00001D                     	ds	2
   263  00001F                     _MAP_VELOCITY:
   264                           	opt stack 0
   265  00001F                     	ds	2
   266  000021                     _MAP_V_BLINK:
   267                           	opt stack 0
   268  000021                     	ds	2
   269  000023                     _TEMP_MAP_ACCELERATOR:
   270                           	opt stack 0
   271  000023                     	ds	2
   272  000025                     _TEMP_MAP_BACKLIGHT:
   273                           	opt stack 0
   274  000025                     	ds	2
   275  000027                     _TEMP_MAP_BRAKE:
   276                           	opt stack 0
   277  000027                     	ds	2
   278  000029                     _TEMP_MAP_DIRECTION:
   279                           	opt stack 0
   280  000029                     	ds	2
   281  00002B                     _TEMP_MAP_HEARTBEAT:
   282                           	opt stack 0
   283  00002B                     	ds	2
   284  00002D                     _TEMP_MAP_H_BLINK:
   285                           	opt stack 0
   286  00002D                     	ds	2
   287  00002F                     _TEMP_MAP_SAFETYPIN:
   288                           	opt stack 0
   289  00002F                     	ds	2
   290  000031                     _TEMP_MAP_V_BLINK:
   291                           	opt stack 0
   292  000031                     	ds	2
   293  000033                     _heartbeatCount:
   294                           	opt stack 0
   295  000033                     	ds	2
   296  000035                     _BITDATA:
   297                           	opt stack 0
   298  000035                     	ds	1
   299  000036                     _TEMP_ACCELERATOR:
   300                           	opt stack 0
   301  000036                     	ds	1
   302  000037                     _buttonWasPressed:
   303                           	opt stack 0
   304  000037                     	ds	1
   305  000038                     _temp_D2:
   306                           	opt stack 0
   307  000038                     	ds	1
   308  000039                     _temp_D3:
   309                           	opt stack 0
   310  000039                     	ds	1
   311  00003A                     _temp_D4:
   312                           	opt stack 0
   313  00003A                     	ds	1
   314  00003B                     _temp_D5:
   315                           	opt stack 0
   316  00003B                     	ds	1
   317  00003C                     _temp_D6:
   318                           	opt stack 0
   319  00003C                     	ds	1
   320  00003D                     _temp_D7:
   321                           	opt stack 0
   322  00003D                     	ds	1
   323  00003E                     _temp_DLC:
   324                           	opt stack 0
   325  00003E                     	ds	1
   326  00003F                     _temp_EIDH:
   327                           	opt stack 0
   328  00003F                     	ds	1
   329  000040                     _temp_EIDL:
   330                           	opt stack 0
   331  000040                     	ds	1
   332  000041                     _temp_SIDH:
   333                           	opt stack 0
   334  000041                     	ds	1
   335  000042                     _temp_SIDL:
   336                           	opt stack 0
   337  000042                     	ds	1
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	dataCOMRAM
   346  000051                     __pdataCOMRAM:
   347                           	opt stack 0
   348  000051                     _BATTERISTATUS_ID:
   349                           	opt stack 0
   350  000051                     	ds	1
   351  000052                     _MOTOR_ID:
   352                           	opt stack 0
   353  000052                     	ds	1
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           
   361                           	psect	cstackBANK0
   362  000060                     __pcstackBANK0:
   363                           	opt stack 0
   364  000060                     ??_unZipCAN:
   365  000060                     ??_checkAccelerator:
   366  000060                     ECAN_Receive@RXMsgFlag:
   367                           	opt stack 0
   368  000060                     ECAN_Transmit@SIDL:
   369                           	opt stack 0
   370  000060                     Delay@count:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x0
   374  000060                     	ds	1
   375  000061                     ECAN_Transmit@DLC:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x1
   379  000061                     	ds	1
   380  000062                     ?_readAnalog:
   381                           	opt stack 0
   382  000062                     ECAN_Transmit@TRANSMIT_ID:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x2
   386  000062                     	ds	1
   387  000063                     ECAN_Transmit@DATA1:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x3
   391  000063                     	ds	1
   392  000064                     ECAN_Transmit@DATA2:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x4
   396  000064                     	ds	1
   397  000065                     ECAN_Transmit@DATA3:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x5
   401  000065                     	ds	1
   402  000066                     ECAN_Transmit@DATA4:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x6
   406  000066                     	ds	1
   407  000067                     ECAN_Transmit@DATA5:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x7
   411  000067                     	ds	1
   412  000068                     ECAN_Transmit@DATA6:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x8
   416  000068                     	ds	1
   417  000069                     ECAN_Transmit@DATA7:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x9
   421  000069                     	ds	1
   422  00006A                     ECAN_Transmit@SIDH:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0xA
   426  00006A                     	ds	1
   427  00006B                     tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434                           ; 0 bytes @ 0xB
   435                           
   436                           	psect	cstackCOMRAM
   437  000043                     __pcstackCOMRAM:
   438                           	opt stack 0
   439  000043                     ??_ISR:
   440  000043                     
   441                           ; 2 bytes @ 0x0
   442  000043                     	ds	14
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           
   450 ;;
   451 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   452 ;;
   453 ;; *************** function _main *****************
   454 ;; Defined at:
   455 ;;		line 9 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  2  116[None  ] int 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels required when called:    4
   475 ;; This function calls:
   476 ;;		_CANSetup
   477 ;;		_Delay
   478 ;;		_ECAN_Receive
   479 ;;		_ECAN_Transmit
   480 ;;		_InitDevice
   481 ;;		_checkAccelerator
   482 ;;		_checkBacklight
   483 ;;		_checkBrake
   484 ;;		_checkDirection
   485 ;;		_checkH_blink
   486 ;;		_checkSafetyPin
   487 ;;		_checkV_blink
   488 ;;		_danger
   489 ;;		_setup_Interrupt
   490 ;;		_unZipCAN
   491 ;;		_updateInputs
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text0
   498  0004B8                     __ptext0:
   499                           	opt stack 0
   500  0004B8                     _main:
   501                           	opt stack 27
   502                           
   503                           ;main.c: 12: InitDevice();
   504                           
   505                           ;incstack = 0
   506  0004B8  ECD6  F001         	call	_InitDevice	;wreg free
   507                           
   508                           ;main.c: 13: CANSetup();
   509  0004BC  EC41  F001         	call	_CANSetup	;wreg free
   510                           
   511                           ;main.c: 14: setup_Interrupt();
   512  0004C0  ECAB  F003         	call	_setup_Interrupt	;wreg free
   513                           
   514                           ;main.c: 16: heartBeatCounter = 0;
   515  0004C4  0E00               	movlw	0
   516  0004C6  6E05               	movwf	_heartBeatCounter,c
   517  0004C8  0E00               	movlw	0
   518  0004CA  6E06               	movwf	_heartBeatCounter+1,c
   519  0004CC  0E00               	movlw	0
   520  0004CE  6E07               	movwf	_heartBeatCounter+2,c
   521  0004D0  0E00               	movlw	0
   522  0004D2  6E08               	movwf	_heartBeatCounter+3,c
   523                           
   524                           ;main.c: 17: FIRST_SEND = 1;
   525  0004D4  0E00               	movlw	0
   526  0004D6  6E0E               	movwf	_FIRST_SEND+1,c
   527  0004D8  0E01               	movlw	1
   528  0004DA  6E0D               	movwf	_FIRST_SEND,c
   529                           
   530                           ;main.c: 18: interruptCounter = 0;
   531  0004DC  0E00               	movlw	0
   532  0004DE  6E09               	movwf	_interruptCounter,c
   533  0004E0  0E00               	movlw	0
   534  0004E2  6E0A               	movwf	_interruptCounter+1,c
   535  0004E4  0E00               	movlw	0
   536  0004E6  6E0B               	movwf	_interruptCounter+2,c
   537  0004E8  0E00               	movlw	0
   538  0004EA  6E0C               	movwf	_interruptCounter+3,c
   539                           
   540                           ;main.c: 20: LATAbits.LATA7 = 1;
   541  0004EC  8E89               	bsf	3977,7,c	;volatile
   542                           
   543                           ;main.c: 21: LATBbits.LATB1 = 0;
   544  0004EE  928A               	bcf	3978,1,c	;volatile
   545  0004F0                     l1984:
   546                           
   547                           ;main.c: 26: if(ECAN_Receive()){
   548  0004F0  ECCD  F002         	call	_ECAN_Receive	;wreg free
   549  0004F4  0900               	iorlw	0
   550  0004F6  B4D8               	btfsc	status,2,c
   551  0004F8  D013               	goto	l1996
   552                           
   553                           ;main.c: 27: FIRST_SEND = 0;
   554  0004FA  0E00               	movlw	0
   555  0004FC  6E0E               	movwf	_FIRST_SEND+1,c
   556  0004FE  0E00               	movlw	0
   557  000500  6E0D               	movwf	_FIRST_SEND,c
   558                           
   559                           ;main.c: 28: LATAbits.LATA6 = 1;
   560  000502  8C89               	bsf	3977,6,c	;volatile
   561                           
   562                           ;main.c: 29: unZipCAN();
   563  000504  EC9F  F000         	call	_unZipCAN	;wreg free
   564                           
   565                           ;main.c: 30: if(TEMP_MAP_HEARTBEAT == 1){
   566  000508  042B               	decf	_TEMP_MAP_HEARTBEAT,w,c
   567  00050A  102C               	iorwf	_TEMP_MAP_HEARTBEAT+1,w,c
   568  00050C  A4D8               	btfss	status,2,c
   569  00050E  D008               	goto	l1996
   570                           
   571                           ;main.c: 31: heartBeatCounter = 0;
   572  000510  0E00               	movlw	0
   573  000512  6E05               	movwf	_heartBeatCounter,c
   574  000514  0E00               	movlw	0
   575  000516  6E06               	movwf	_heartBeatCounter+1,c
   576  000518  0E00               	movlw	0
   577  00051A  6E07               	movwf	_heartBeatCounter+2,c
   578  00051C  0E00               	movlw	0
   579  00051E  6E08               	movwf	_heartBeatCounter+3,c
   580  000520                     l1996:
   581                           
   582                           ;main.c: 32: }
   583                           ;main.c: 34: }
   584                           ;main.c: 36: if(heartBeatCounter > 3){
   585  000520  BE08               	btfsc	_heartBeatCounter+3,7,c
   586  000522  D009               	goto	l2000
   587  000524  5008               	movf	_heartBeatCounter+3,w,c
   588  000526  1007               	iorwf	_heartBeatCounter+2,w,c
   589  000528  1006               	iorwf	_heartBeatCounter+1,w,c
   590  00052A  E103               	bnz	u720
   591  00052C  0E04               	movlw	4
   592  00052E  5C05               	subwf	_heartBeatCounter,w,c
   593  000530  B0D8               	btfsc	status,0,c
   594  000532                     u720:
   595                           
   596                           ;main.c: 37: danger();
   597  000532  EC2F  F004         	call	_danger	;wreg free
   598  000536                     l2000:
   599                           
   600                           ;main.c: 38: }
   601                           ;main.c: 40: checkBrake();
   602  000536  EC1C  F004         	call	_checkBrake	;wreg free
   603                           
   604                           ;main.c: 41: checkBacklight();
   605  00053A  ECE7  F003         	call	_checkBacklight	;wreg free
   606                           
   607                           ;main.c: 42: checkV_blink();
   608  00053E  EC7B  F003         	call	_checkV_blink	;wreg free
   609                           
   610                           ;main.c: 43: checkH_blink();
   611  000542  EC5D  F003         	call	_checkH_blink	;wreg free
   612                           
   613                           ;main.c: 44: checkDirection();
   614  000546  EC10  F004         	call	_checkDirection	;wreg free
   615                           
   616                           ;main.c: 45: checkSafetyPin();
   617  00054A  EC04  F004         	call	_checkSafetyPin	;wreg free
   618                           
   619                           ;main.c: 46: checkAccelerator();
   620  00054E  ECD4  F003         	call	_checkAccelerator	;wreg free
   621                           
   622                           ;main.c: 51: updateInputs();
   623  000552  EC28  F004         	call	_updateInputs	;wreg free
   624                           
   625                           ;main.c: 53: ECAN_Transmit(0x32,0xC0, 0x08,
   626                           ;main.c: 54: MAP_BATTERYSTATUS,
   627                           ;main.c: 55: MAP_VELOCITY,
   628                           ;main.c: 56: 0x01,
   629                           ;main.c: 57: temp_D3,
   630                           ;main.c: 58: temp_D4,
   631                           ;main.c: 59: temp_D5,
   632                           ;main.c: 60: temp_D6,
   633                           ;main.c: 61: temp_D7);
   634  000556  0EC0               	movlw	192
   635  000558  0100               	movlb	0	; () banked
   636  00055A  6F60               	movwf	ECAN_Transmit@SIDL& (0+255),b
   637  00055C  0E08               	movlw	8
   638  00055E  0100               	movlb	0	; () banked
   639  000560  6F61               	movwf	ECAN_Transmit@DLC& (0+255),b
   640  000562  C013  F062         	movff	_MAP_BATTERYSTATUS,ECAN_Transmit@TRANSMIT_ID
   641  000566  C01F  F063         	movff	_MAP_VELOCITY,ECAN_Transmit@DATA1
   642  00056A  0E01               	movlw	1
   643  00056C  0100               	movlb	0	; () banked
   644  00056E  6F64               	movwf	ECAN_Transmit@DATA2& (0+255),b
   645  000570  C039  F065         	movff	_temp_D3,ECAN_Transmit@DATA3
   646  000574  C03A  F066         	movff	_temp_D4,ECAN_Transmit@DATA4
   647  000578  C03B  F067         	movff	_temp_D5,ECAN_Transmit@DATA5
   648  00057C  C03C  F068         	movff	_temp_D6,ECAN_Transmit@DATA6
   649  000580  C03D  F069         	movff	_temp_D7,ECAN_Transmit@DATA7
   650  000584  0E32               	movlw	50
   651  000586  EC3C  F003         	call	_ECAN_Transmit
   652                           
   653                           ;main.c: 64: Delay(10);
   654  00058A  0E00               	movlw	0
   655  00058C  0100               	movlb	0	; () banked
   656  00058E  6F61               	movwf	(Delay@count+1)& (0+255),b
   657  000590  0E0A               	movlw	10
   658  000592  6F60               	movwf	Delay@count& (0+255),b
   659  000594  ECF8  F003         	call	_Delay	;wreg free
   660  000598  D7AB               	goto	l1984
   661  00059A                     __end_of_main:
   662                           	opt stack 0
   663                           tblptru	equ	0xFF8
   664                           tblptrh	equ	0xFF7
   665                           tblptrl	equ	0xFF6
   666                           tablat	equ	0xFF5
   667                           postinc0	equ	0xFEE
   668                           wreg	equ	0xFE8
   669                           status	equ	0xFD8
   670                           
   671 ;; *************** function _updateInputs *****************
   672 ;; Defined at:
   673 ;;		line 64 in file "peripherals.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;		None               void
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    3
   694 ;; This function calls:
   695 ;;		_readAnalog
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702  000850                     __ptext1:
   703                           	opt stack 0
   704  000850                     _updateInputs:
   705                           	opt stack 27
   706                           
   707                           ;peripherals.c: 67: MAP_BATTERYSTATUS = readAnalog();
   708                           
   709                           ;incstack = 0
   710  000850  ECC1  F003         	call	_readAnalog	;wreg free
   711  000854  C062  F013         	movff	?_readAnalog,_MAP_BATTERYSTATUS
   712  000858  C063  F014         	movff	?_readAnalog+1,_MAP_BATTERYSTATUS+1
   713  00085C  0012               	return		;funcret
   714  00085E                     __end_of_updateInputs:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           status	equ	0xFD8
   723                           
   724 ;; *************** function _readAnalog *****************
   725 ;; Defined at:
   726 ;;		line 73 in file "peripherals.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  2    2[BANK0 ] int 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   740 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   743 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   744 ;;Total ram usage:        2 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    2
   747 ;; This function calls:
   748 ;;		_Delay
   749 ;; This function is called by:
   750 ;;		_updateInputs
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text2
   755  000782                     __ptext2:
   756                           	opt stack 0
   757  000782                     _readAnalog:
   758                           	opt stack 27
   759                           
   760                           ;peripherals.c: 76: ADCON0 = 0x00;
   761                           
   762                           ;incstack = 0
   763  000782  0E00               	movlw	0
   764  000784  6EC2               	movwf	4034,c	;volatile
   765                           
   766                           ;peripherals.c: 78: ADCON0bits.ADON = 1;
   767  000786  80C2               	bsf	4034,0,c	;volatile
   768                           
   769                           ;peripherals.c: 82: Delay((unsigned int)(64/4)*80 * 100);
   770  000788  0EF4               	movlw	244
   771  00078A  0100               	movlb	0	; () banked
   772  00078C  6F61               	movwf	(Delay@count+1)& (0+255),b
   773  00078E  0E00               	movlw	0
   774  000790  6F60               	movwf	Delay@count& (0+255),b
   775  000792  ECF8  F003         	call	_Delay	;wreg free
   776                           
   777                           ;peripherals.c: 84: ADCON0bits.GO_DONE = 1;
   778  000796  82C2               	bsf	4034,1,c	;volatile
   779  000798                     l663:
   780  000798  B2C2               	btfsc	4034,1,c	;volatile
   781  00079A  D7FE               	goto	l663
   782                           
   783                           ;peripherals.c: 87: ADCON0bits.ADON = 0;
   784  00079C  90C2               	bcf	4034,0,c	;volatile
   785                           
   786                           ;peripherals.c: 91: return ADRESH;
   787  00079E  CFC4 F062          	movff	4036,?_readAnalog	;volatile
   788  0007A2  0100               	movlb	0	; () banked
   789  0007A4  6B63               	clrf	(?_readAnalog+1)& (0+255),b
   790                           
   791                           ; BSR set to: 0
   792  0007A6  0012               	return		;funcret
   793  0007A8                     __end_of_readAnalog:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           status	equ	0xFD8
   802                           
   803 ;; *************** function _Delay *****************
   804 ;; Defined at:
   805 ;;		line 11 in file "Other.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  count           2    0[BANK0 ] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;		None               void
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   823 ;;Total ram usage:        2 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;;		_readAnalog
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text3
   835  0007F0                     __ptext3:
   836                           	opt stack 0
   837  0007F0                     _Delay:
   838                           	opt stack 27
   839  0007F0                     l1768:
   840  0007F0  0100               	movlb	0	; () banked
   841  0007F2  0760               	decf	Delay@count& (0+255),f,b
   842  0007F4  A0D8               	btfss	status,0,c
   843  0007F6  0761               	decf	(Delay@count+1)& (0+255),f,b
   844  0007F8  0100               	movlb	0	; () banked
   845  0007FA  2960               	incf	Delay@count& (0+255),w,b
   846  0007FC  E1F9               	bnz	l1768
   847  0007FE  0100               	movlb	0	; () banked
   848  000800  2961               	incf	(Delay@count+1)& (0+255),w,b
   849  000802  B4D8               	btfsc	status,2,c
   850  000804  0012               	return	
   851  000806  D7F4               	goto	l1768
   852  000808                     __end_of_Delay:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           status	equ	0xFD8
   861                           
   862 ;; *************** function _unZipCAN *****************
   863 ;; Defined at:
   864 ;;		line 359 in file "ECAN.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   880 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   882 ;;Total ram usage:        3 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text4
   893  00013E                     __ptext4:
   894                           	opt stack 0
   895  00013E                     _unZipCAN:
   896                           	opt stack 29
   897                           
   898                           ;ECAN.c: 361: TEMP_MAP_HEARTBEAT = (BITDATA & (1 << 0));
   899                           
   900                           ; BSR set to: 0
   901                           ;incstack = 0
   902  00013E  C035  F060         	movff	_BITDATA,??_unZipCAN
   903  000142  0E01               	movlw	1
   904  000144  0100               	movlb	0	; () banked
   905  000146  1760               	andwf	??_unZipCAN& (0+255),f,b
   906  000148  0100               	movlb	0	; () banked
   907  00014A  5160               	movf	??_unZipCAN& (0+255),w,b
   908  00014C  6E2B               	movwf	_TEMP_MAP_HEARTBEAT,c
   909  00014E  6A2C               	clrf	_TEMP_MAP_HEARTBEAT+1,c
   910                           
   911                           ;ECAN.c: 364: TEMP_MAP_BRAKE = BITDATA & (1 << 1);
   912  000150  C035  F060         	movff	_BITDATA,??_unZipCAN
   913  000154  0E02               	movlw	2
   914  000156  0100               	movlb	0	; () banked
   915  000158  1760               	andwf	??_unZipCAN& (0+255),f,b
   916  00015A  0100               	movlb	0	; () banked
   917  00015C  5160               	movf	??_unZipCAN& (0+255),w,b
   918  00015E  6E27               	movwf	_TEMP_MAP_BRAKE,c
   919  000160  6A28               	clrf	_TEMP_MAP_BRAKE+1,c
   920                           
   921                           ;ECAN.c: 365: TEMP_MAP_BRAKE = (TEMP_MAP_BRAKE >> 1);
   922  000162  3428               	rlcf	_TEMP_MAP_BRAKE+1,w,c
   923  000164  3028               	rrcf	_TEMP_MAP_BRAKE+1,w,c
   924  000166  0100               	movlb	0	; () banked
   925  000168  6F60               	movwf	??_unZipCAN& (0+255),b
   926  00016A  3027               	rrcf	_TEMP_MAP_BRAKE,w,c
   927  00016C  6E27               	movwf	_TEMP_MAP_BRAKE,c
   928  00016E  C060  F028         	movff	??_unZipCAN,_TEMP_MAP_BRAKE+1
   929                           
   930                           ;ECAN.c: 367: TEMP_MAP_BACKLIGHT = BITDATA & (1 << 2);
   931  000172  C035  F060         	movff	_BITDATA,??_unZipCAN
   932  000176  0E04               	movlw	4
   933  000178  0100               	movlb	0	; () banked
   934  00017A  1760               	andwf	??_unZipCAN& (0+255),f,b
   935  00017C  0100               	movlb	0	; () banked
   936  00017E  5160               	movf	??_unZipCAN& (0+255),w,b
   937  000180  6E25               	movwf	_TEMP_MAP_BACKLIGHT,c
   938  000182  6A26               	clrf	_TEMP_MAP_BACKLIGHT+1,c
   939                           
   940                           ;ECAN.c: 368: TEMP_MAP_BACKLIGHT = (TEMP_MAP_BACKLIGHT >> 2);
   941  000184  C025  F060         	movff	_TEMP_MAP_BACKLIGHT,??_unZipCAN
   942  000188  C026  F061         	movff	_TEMP_MAP_BACKLIGHT+1,??_unZipCAN+1
   943  00018C  0100               	movlb	0	; () banked
   944  00018E  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
   945  000190  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
   946  000192  3360               	rrcf	??_unZipCAN& (0+255),f,b
   947  000194  0100               	movlb	0	; () banked
   948  000196  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
   949  000198  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
   950  00019A  3360               	rrcf	??_unZipCAN& (0+255),f,b
   951  00019C  C060  F025         	movff	??_unZipCAN,_TEMP_MAP_BACKLIGHT
   952  0001A0  C061  F026         	movff	??_unZipCAN+1,_TEMP_MAP_BACKLIGHT+1
   953                           
   954                           ;ECAN.c: 370: TEMP_MAP_V_BLINK = BITDATA & (1 << 3);
   955  0001A4  C035  F060         	movff	_BITDATA,??_unZipCAN
   956  0001A8  0E08               	movlw	8
   957  0001AA  0100               	movlb	0	; () banked
   958  0001AC  1760               	andwf	??_unZipCAN& (0+255),f,b
   959  0001AE  0100               	movlb	0	; () banked
   960  0001B0  5160               	movf	??_unZipCAN& (0+255),w,b
   961  0001B2  6E31               	movwf	_TEMP_MAP_V_BLINK,c
   962  0001B4  6A32               	clrf	_TEMP_MAP_V_BLINK+1,c
   963                           
   964                           ;ECAN.c: 371: TEMP_MAP_V_BLINK = (TEMP_MAP_V_BLINK >> 3);
   965  0001B6  C031  F060         	movff	_TEMP_MAP_V_BLINK,??_unZipCAN
   966  0001BA  C032  F061         	movff	_TEMP_MAP_V_BLINK+1,??_unZipCAN+1
   967  0001BE  0100               	movlb	0	; () banked
   968  0001C0  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
   969  0001C2  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
   970  0001C4  3360               	rrcf	??_unZipCAN& (0+255),f,b
   971  0001C6  0100               	movlb	0	; () banked
   972  0001C8  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
   973  0001CA  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
   974  0001CC  3360               	rrcf	??_unZipCAN& (0+255),f,b
   975  0001CE  0100               	movlb	0	; () banked
   976  0001D0  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
   977  0001D2  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
   978  0001D4  3360               	rrcf	??_unZipCAN& (0+255),f,b
   979  0001D6  C060  F031         	movff	??_unZipCAN,_TEMP_MAP_V_BLINK
   980  0001DA  C061  F032         	movff	??_unZipCAN+1,_TEMP_MAP_V_BLINK+1
   981                           
   982                           ;ECAN.c: 373: TEMP_MAP_H_BLINK = BITDATA & (1 << 4);
   983  0001DE  C035  F060         	movff	_BITDATA,??_unZipCAN
   984  0001E2  0E10               	movlw	16
   985  0001E4  0100               	movlb	0	; () banked
   986  0001E6  1760               	andwf	??_unZipCAN& (0+255),f,b
   987  0001E8  0100               	movlb	0	; () banked
   988  0001EA  5160               	movf	??_unZipCAN& (0+255),w,b
   989  0001EC  6E2D               	movwf	_TEMP_MAP_H_BLINK,c
   990  0001EE  6A2E               	clrf	_TEMP_MAP_H_BLINK+1,c
   991                           
   992                           ;ECAN.c: 374: TEMP_MAP_H_BLINK = (TEMP_MAP_H_BLINK >> 4);
   993  0001F0  C02D  F060         	movff	_TEMP_MAP_H_BLINK,??_unZipCAN
   994  0001F4  C02E  F061         	movff	_TEMP_MAP_H_BLINK+1,??_unZipCAN+1
   995  0001F8  0E04               	movlw	4
   996  0001FA  0100               	movlb	0	; () banked
   997  0001FC  6F62               	movwf	(??_unZipCAN+2)& (0+255),b
   998  0001FE                     u565:
   999  0001FE  0100               	movlb	0	; () banked
  1000  000200  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1001  000202  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1002  000204  3360               	rrcf	??_unZipCAN& (0+255),f,b
  1003  000206  0100               	movlb	0	; () banked
  1004  000208  2F62               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1005  00020A  D7F9               	goto	u565
  1006  00020C  C060  F02D         	movff	??_unZipCAN,_TEMP_MAP_H_BLINK
  1007  000210  C061  F02E         	movff	??_unZipCAN+1,_TEMP_MAP_H_BLINK+1
  1008                           
  1009                           ;ECAN.c: 376: TEMP_MAP_DIRECTION = BITDATA & (1 << 5);
  1010  000214  C035  F060         	movff	_BITDATA,??_unZipCAN
  1011  000218  0E20               	movlw	32
  1012  00021A  0100               	movlb	0	; () banked
  1013  00021C  1760               	andwf	??_unZipCAN& (0+255),f,b
  1014  00021E  0100               	movlb	0	; () banked
  1015  000220  5160               	movf	??_unZipCAN& (0+255),w,b
  1016  000222  6E29               	movwf	_TEMP_MAP_DIRECTION,c
  1017  000224  6A2A               	clrf	_TEMP_MAP_DIRECTION+1,c
  1018                           
  1019                           ;ECAN.c: 377: TEMP_MAP_DIRECTION = (TEMP_MAP_DIRECTION >> 5);
  1020  000226  C029  F060         	movff	_TEMP_MAP_DIRECTION,??_unZipCAN
  1021  00022A  C02A  F061         	movff	_TEMP_MAP_DIRECTION+1,??_unZipCAN+1
  1022  00022E  0E05               	movlw	5
  1023  000230  0100               	movlb	0	; () banked
  1024  000232  6F62               	movwf	(??_unZipCAN+2)& (0+255),b
  1025  000234                     u575:
  1026  000234  0100               	movlb	0	; () banked
  1027  000236  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1028  000238  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1029  00023A  3360               	rrcf	??_unZipCAN& (0+255),f,b
  1030  00023C  0100               	movlb	0	; () banked
  1031  00023E  2F62               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1032  000240  D7F9               	goto	u575
  1033  000242  C060  F029         	movff	??_unZipCAN,_TEMP_MAP_DIRECTION
  1034  000246  C061  F02A         	movff	??_unZipCAN+1,_TEMP_MAP_DIRECTION+1
  1035                           
  1036                           ;ECAN.c: 379: TEMP_MAP_SAFETYPIN = BITDATA & (1 << 6);
  1037  00024A  C035  F060         	movff	_BITDATA,??_unZipCAN
  1038  00024E  0E40               	movlw	64
  1039  000250  0100               	movlb	0	; () banked
  1040  000252  1760               	andwf	??_unZipCAN& (0+255),f,b
  1041  000254  0100               	movlb	0	; () banked
  1042  000256  5160               	movf	??_unZipCAN& (0+255),w,b
  1043  000258  6E2F               	movwf	_TEMP_MAP_SAFETYPIN,c
  1044  00025A  6A30               	clrf	_TEMP_MAP_SAFETYPIN+1,c
  1045                           
  1046                           ;ECAN.c: 380: TEMP_MAP_SAFETYPIN = (TEMP_MAP_SAFETYPIN >> 6);
  1047  00025C  C02F  F060         	movff	_TEMP_MAP_SAFETYPIN,??_unZipCAN
  1048  000260  C030  F061         	movff	_TEMP_MAP_SAFETYPIN+1,??_unZipCAN+1
  1049  000264  0E06               	movlw	6
  1050  000266  0100               	movlb	0	; () banked
  1051  000268  6F62               	movwf	(??_unZipCAN+2)& (0+255),b
  1052  00026A                     u585:
  1053  00026A  0100               	movlb	0	; () banked
  1054  00026C  3561               	rlcf	(??_unZipCAN+1)& (0+255),w,b
  1055  00026E  3361               	rrcf	(??_unZipCAN+1)& (0+255),f,b
  1056  000270  3360               	rrcf	??_unZipCAN& (0+255),f,b
  1057  000272  0100               	movlb	0	; () banked
  1058  000274  2F62               	decfsz	(??_unZipCAN+2)& (0+255),f,b
  1059  000276  D7F9               	goto	u585
  1060  000278  C060  F02F         	movff	??_unZipCAN,_TEMP_MAP_SAFETYPIN
  1061  00027C  C061  F030         	movff	??_unZipCAN+1,_TEMP_MAP_SAFETYPIN+1
  1062                           
  1063                           ; BSR set to: 0
  1064  000280  0012               	return		;funcret
  1065  000282                     __end_of_unZipCAN:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function _setup_Interrupt *****************
  1076 ;; Defined at:
  1077 ;;		line 105 in file "init.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, status,2
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text5
  1106  000756                     __ptext5:
  1107                           	opt stack 0
  1108  000756                     _setup_Interrupt:
  1109                           	opt stack 29
  1110                           
  1111                           ;init.c: 107: RCONbits.IPEN = 1;
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;incstack = 0
  1115  000756  8ED0               	bsf	4048,7,c	;volatile
  1116                           
  1117                           ;init.c: 108: INTCONbits.GIEH = 1;
  1118  000758  8EF2               	bsf	intcon,7,c	;volatile
  1119                           
  1120                           ;init.c: 109: INTCONbits.GIEL = 1;
  1121  00075A  8CF2               	bsf	intcon,6,c	;volatile
  1122                           
  1123                           ;init.c: 113: INTCONbits.TMR0IE = 1;
  1124  00075C  8AF2               	bsf	intcon,5,c	;volatile
  1125                           
  1126                           ;init.c: 114: heartBeatCounter = 0;
  1127  00075E  0E00               	movlw	0
  1128  000760  6E05               	movwf	_heartBeatCounter,c
  1129  000762  0E00               	movlw	0
  1130  000764  6E06               	movwf	_heartBeatCounter+1,c
  1131  000766  0E00               	movlw	0
  1132  000768  6E07               	movwf	_heartBeatCounter+2,c
  1133  00076A  0E00               	movlw	0
  1134  00076C  6E08               	movwf	_heartBeatCounter+3,c
  1135                           
  1136                           ;init.c: 117: PIE1bits.TMR1IE = 1;
  1137  00076E  809D               	bsf	3997,0,c	;volatile
  1138                           
  1139                           ;init.c: 118: blinkCounter = 0;
  1140  000770  0E00               	movlw	0
  1141  000772  6E01               	movwf	_blinkCounter,c
  1142  000774  0E00               	movlw	0
  1143  000776  6E02               	movwf	_blinkCounter+1,c
  1144  000778  0E00               	movlw	0
  1145  00077A  6E03               	movwf	_blinkCounter+2,c
  1146  00077C  0E00               	movlw	0
  1147  00077E  6E04               	movwf	_blinkCounter+3,c
  1148  000780  0012               	return		;funcret
  1149  000782                     __end_of_setup_Interrupt:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           intcon	equ	0xFF2
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           status	equ	0xFD8
  1159                           
  1160 ;; *************** function _danger *****************
  1161 ;; Defined at:
  1162 ;;		line 17 in file "Other.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2   16[None  ] int 
  1169 ;; Registers used:
  1170 ;;		None
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text6
  1191  00085E                     __ptext6:
  1192                           	opt stack 0
  1193  00085E                     _danger:
  1194                           	opt stack 29
  1195  00085E                     l540:
  1196                           
  1197                           ;Other.c: 19: LATAbits.LATA6 = 0;
  1198  00085E  9C89               	bcf	3977,6,c	;volatile
  1199                           
  1200                           ;Other.c: 20: LATBbits.LATB1 = 1;
  1201  000860  828A               	bsf	3978,1,c	;volatile
  1202  000862  D7FD               	goto	l540
  1203  000864                     __end_of_danger:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           intcon	equ	0xFF2
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           status	equ	0xFD8
  1213                           
  1214 ;; *************** function _checkV_blink *****************
  1215 ;; Defined at:
  1216 ;;		line 27 in file "peripherals.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;		None               void
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text7
  1245  0006F6                     __ptext7:
  1246                           	opt stack 0
  1247  0006F6                     _checkV_blink:
  1248                           	opt stack 29
  1249                           
  1250                           ;peripherals.c: 28: if(TEMP_MAP_V_BLINK != MAP_V_BLINK){
  1251                           
  1252                           ;incstack = 0
  1253  0006F6  5021               	movf	_MAP_V_BLINK,w,c
  1254  0006F8  1831               	xorwf	_TEMP_MAP_V_BLINK,w,c
  1255  0006FA  E104               	bnz	u620
  1256  0006FC  5022               	movf	_MAP_V_BLINK+1,w,c
  1257  0006FE  1832               	xorwf	_TEMP_MAP_V_BLINK+1,w,c
  1258  000700  B4D8               	btfsc	status,2,c
  1259  000702  0012               	return	
  1260  000704                     u620:
  1261                           
  1262                           ;peripherals.c: 29: MAP_V_BLINK = TEMP_MAP_V_BLINK;
  1263  000704  C031  F021         	movff	_TEMP_MAP_V_BLINK,_MAP_V_BLINK
  1264  000708  C032  F022         	movff	_TEMP_MAP_V_BLINK+1,_MAP_V_BLINK+1
  1265                           
  1266                           ;peripherals.c: 31: blinkCounter = 0;
  1267  00070C  0E00               	movlw	0
  1268  00070E  6E01               	movwf	_blinkCounter,c
  1269  000710  0E00               	movlw	0
  1270  000712  6E02               	movwf	_blinkCounter+1,c
  1271  000714  0E00               	movlw	0
  1272  000716  6E03               	movwf	_blinkCounter+2,c
  1273  000718  0E00               	movlw	0
  1274  00071A  6E04               	movwf	_blinkCounter+3,c
  1275                           
  1276                           ;peripherals.c: 32: LATBbits.LATB5 = MAP_V_BLINK;
  1277  00071C  B021               	btfsc	_MAP_V_BLINK,0,c
  1278  00071E  D002               	bra	u635
  1279  000720  9A8A               	bcf	3978,5,c	;volatile
  1280  000722  D001               	bra	u636
  1281  000724                     u635:
  1282  000724  8A8A               	bsf	3978,5,c	;volatile
  1283  000726                     u636:
  1284  000726  0012               	return	
  1285  000728                     __end_of_checkV_blink:
  1286                           	opt stack 0
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           intcon	equ	0xFF2
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _checkSafetyPin *****************
  1297 ;; Defined at:
  1298 ;;		line 50 in file "peripherals.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text8
  1327  000808                     __ptext8:
  1328                           	opt stack 0
  1329  000808                     _checkSafetyPin:
  1330                           	opt stack 29
  1331                           
  1332                           ;peripherals.c: 51: if(TEMP_MAP_SAFETYPIN != MAP_SAFETYPIN){
  1333                           
  1334                           ;incstack = 0
  1335  000808  501D               	movf	_MAP_SAFETYPIN,w,c
  1336  00080A  182F               	xorwf	_TEMP_MAP_SAFETYPIN,w,c
  1337  00080C  E104               	bnz	u680
  1338  00080E  501E               	movf	_MAP_SAFETYPIN+1,w,c
  1339  000810  1830               	xorwf	_TEMP_MAP_SAFETYPIN+1,w,c
  1340  000812  B4D8               	btfsc	status,2,c
  1341  000814  0012               	return	
  1342  000816                     u680:
  1343                           
  1344                           ;peripherals.c: 52: MAP_SAFETYPIN = TEMP_MAP_SAFETYPIN;
  1345  000816  C02F  F01D         	movff	_TEMP_MAP_SAFETYPIN,_MAP_SAFETYPIN
  1346  00081A  C030  F01E         	movff	_TEMP_MAP_SAFETYPIN+1,_MAP_SAFETYPIN+1
  1347  00081E  0012               	return	
  1348  000820                     __end_of_checkSafetyPin:
  1349                           	opt stack 0
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           intcon	equ	0xFF2
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           status	equ	0xFD8
  1358                           
  1359 ;; *************** function _checkH_blink *****************
  1360 ;; Defined at:
  1361 ;;		line 35 in file "peripherals.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;		None               void
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text9
  1390  0006BA                     __ptext9:
  1391                           	opt stack 0
  1392  0006BA                     _checkH_blink:
  1393                           	opt stack 29
  1394                           
  1395                           ;peripherals.c: 36: if(TEMP_MAP_H_BLINK != MAP_H_BLINK){
  1396                           
  1397                           ;incstack = 0
  1398  0006BA  501B               	movf	_MAP_H_BLINK,w,c
  1399  0006BC  182D               	xorwf	_TEMP_MAP_H_BLINK,w,c
  1400  0006BE  E104               	bnz	u640
  1401  0006C0  501C               	movf	_MAP_H_BLINK+1,w,c
  1402  0006C2  182E               	xorwf	_TEMP_MAP_H_BLINK+1,w,c
  1403  0006C4  B4D8               	btfsc	status,2,c
  1404  0006C6  0012               	return	
  1405  0006C8                     u640:
  1406                           
  1407                           ;peripherals.c: 37: MAP_H_BLINK = TEMP_MAP_H_BLINK;
  1408  0006C8  C02D  F01B         	movff	_TEMP_MAP_H_BLINK,_MAP_H_BLINK
  1409  0006CC  C02E  F01C         	movff	_TEMP_MAP_H_BLINK+1,_MAP_H_BLINK+1
  1410                           
  1411                           ;peripherals.c: 38: LATBbits.LATB6 = MAP_H_BLINK;
  1412  0006D0  B01B               	btfsc	_MAP_H_BLINK,0,c
  1413  0006D2  D002               	bra	u655
  1414  0006D4  9C8A               	bcf	3978,6,c	;volatile
  1415  0006D6  D001               	bra	u656
  1416  0006D8                     u655:
  1417  0006D8  8C8A               	bsf	3978,6,c	;volatile
  1418  0006DA                     u656:
  1419                           
  1420                           ;peripherals.c: 40: blinkCounter = 0;
  1421  0006DA  0E00               	movlw	0
  1422  0006DC  6E01               	movwf	_blinkCounter,c
  1423  0006DE  0E00               	movlw	0
  1424  0006E0  6E02               	movwf	_blinkCounter+1,c
  1425  0006E2  0E00               	movlw	0
  1426  0006E4  6E03               	movwf	_blinkCounter+2,c
  1427  0006E6  0E00               	movlw	0
  1428  0006E8  6E04               	movwf	_blinkCounter+3,c
  1429                           
  1430                           ;peripherals.c: 41: LATBbits.LATB6 = MAP_H_BLINK;
  1431  0006EA  B01B               	btfsc	_MAP_H_BLINK,0,c
  1432  0006EC  D002               	bra	u665
  1433  0006EE  9C8A               	bcf	3978,6,c	;volatile
  1434  0006F0  D001               	bra	u666
  1435  0006F2                     u665:
  1436  0006F2  8C8A               	bsf	3978,6,c	;volatile
  1437  0006F4                     u666:
  1438  0006F4  0012               	return	
  1439  0006F6                     __end_of_checkH_blink:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           intcon	equ	0xFF2
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _checkDirection *****************
  1451 ;; Defined at:
  1452 ;;		line 44 in file "peripherals.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text10
  1481  000820                     __ptext10:
  1482                           	opt stack 0
  1483  000820                     _checkDirection:
  1484                           	opt stack 29
  1485                           
  1486                           ;peripherals.c: 45: if(TEMP_MAP_DIRECTION != MAP_DIRECTION){
  1487                           
  1488                           ;incstack = 0
  1489  000820  5017               	movf	_MAP_DIRECTION,w,c
  1490  000822  1829               	xorwf	_TEMP_MAP_DIRECTION,w,c
  1491  000824  E104               	bnz	u670
  1492  000826  5018               	movf	_MAP_DIRECTION+1,w,c
  1493  000828  182A               	xorwf	_TEMP_MAP_DIRECTION+1,w,c
  1494  00082A  B4D8               	btfsc	status,2,c
  1495  00082C  0012               	return	
  1496  00082E                     u670:
  1497                           
  1498                           ;peripherals.c: 46: MAP_DIRECTION = TEMP_MAP_DIRECTION;
  1499  00082E  C029  F017         	movff	_TEMP_MAP_DIRECTION,_MAP_DIRECTION
  1500  000832  C02A  F018         	movff	_TEMP_MAP_DIRECTION+1,_MAP_DIRECTION+1
  1501  000836  0012               	return	
  1502  000838                     __end_of_checkDirection:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           intcon	equ	0xFF2
  1509                           postinc0	equ	0xFEE
  1510                           wreg	equ	0xFE8
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function _checkBrake *****************
  1514 ;; Defined at:
  1515 ;;		line 10 in file "peripherals.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;		None               void
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text11
  1544  000838                     __ptext11:
  1545                           	opt stack 0
  1546  000838                     _checkBrake:
  1547                           	opt stack 29
  1548                           
  1549                           ;peripherals.c: 11: if(TEMP_MAP_BRAKE != MAP_BRAKE){
  1550                           
  1551                           ;incstack = 0
  1552  000838  5015               	movf	_MAP_BRAKE,w,c
  1553  00083A  1827               	xorwf	_TEMP_MAP_BRAKE,w,c
  1554  00083C  E104               	bnz	u590
  1555  00083E  5016               	movf	_MAP_BRAKE+1,w,c
  1556  000840  1828               	xorwf	_TEMP_MAP_BRAKE+1,w,c
  1557  000842  B4D8               	btfsc	status,2,c
  1558  000844  0012               	return	
  1559  000846                     u590:
  1560                           
  1561                           ;peripherals.c: 12: MAP_BRAKE = TEMP_MAP_BRAKE;
  1562  000846  C027  F015         	movff	_TEMP_MAP_BRAKE,_MAP_BRAKE
  1563  00084A  C028  F016         	movff	_TEMP_MAP_BRAKE+1,_MAP_BRAKE+1
  1564                           
  1565                           ;peripherals.c: 16: else{
  1566                           
  1567                           ;peripherals.c: 15: }
  1568  00084E  0012               	return	
  1569  000850                     __end_of_checkBrake:
  1570                           	opt stack 0
  1571                           tblptru	equ	0xFF8
  1572                           tblptrh	equ	0xFF7
  1573                           tblptrl	equ	0xFF6
  1574                           tablat	equ	0xFF5
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           status	equ	0xFD8
  1579                           
  1580 ;; *************** function _checkBacklight *****************
  1581 ;; Defined at:
  1582 ;;		line 21 in file "peripherals.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;		None               void
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text12
  1611  0007CE                     __ptext12:
  1612                           	opt stack 0
  1613  0007CE                     _checkBacklight:
  1614                           	opt stack 29
  1615                           
  1616                           ;peripherals.c: 22: if(TEMP_MAP_BACKLIGHT != MAP_BACKLIGHT){
  1617                           
  1618                           ;incstack = 0
  1619  0007CE  5011               	movf	_MAP_BACKLIGHT,w,c
  1620  0007D0  1825               	xorwf	_TEMP_MAP_BACKLIGHT,w,c
  1621  0007D2  E104               	bnz	u600
  1622  0007D4  5012               	movf	_MAP_BACKLIGHT+1,w,c
  1623  0007D6  1826               	xorwf	_TEMP_MAP_BACKLIGHT+1,w,c
  1624  0007D8  B4D8               	btfsc	status,2,c
  1625  0007DA  0012               	return	
  1626  0007DC                     u600:
  1627                           
  1628                           ;peripherals.c: 23: MAP_BACKLIGHT = TEMP_MAP_BACKLIGHT;
  1629  0007DC  C025  F011         	movff	_TEMP_MAP_BACKLIGHT,_MAP_BACKLIGHT
  1630  0007E0  C026  F012         	movff	_TEMP_MAP_BACKLIGHT+1,_MAP_BACKLIGHT+1
  1631                           
  1632                           ;peripherals.c: 24: LATBbits.LATB7 = MAP_BACKLIGHT;
  1633  0007E4  B011               	btfsc	_MAP_BACKLIGHT,0,c
  1634  0007E6  D002               	bra	u615
  1635  0007E8  9E8A               	bcf	3978,7,c	;volatile
  1636  0007EA  D001               	bra	u616
  1637  0007EC                     u615:
  1638  0007EC  8E8A               	bsf	3978,7,c	;volatile
  1639  0007EE                     u616:
  1640  0007EE  0012               	return	
  1641  0007F0                     __end_of_checkBacklight:
  1642                           	opt stack 0
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           intcon	equ	0xFF2
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _checkAccelerator *****************
  1653 ;; Defined at:
  1654 ;;		line 56 in file "peripherals.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1671 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text13
  1683  0007A8                     __ptext13:
  1684                           	opt stack 0
  1685  0007A8                     _checkAccelerator:
  1686                           	opt stack 29
  1687                           
  1688                           ;peripherals.c: 57: if(TEMP_ACCELERATOR != MAP_ACCELERATOR){
  1689                           
  1690                           ;incstack = 0
  1691  0007A8  5036               	movf	_TEMP_ACCELERATOR,w,c
  1692  0007AA  0100               	movlb	0	; () banked
  1693  0007AC  6F60               	movwf	??_checkAccelerator& (0+255),b
  1694  0007AE  6B61               	clrf	(??_checkAccelerator+1)& (0+255),b
  1695  0007B0  500F               	movf	_MAP_ACCELERATOR,w,c
  1696  0007B2  0100               	movlb	0	; () banked
  1697  0007B4  1960               	xorwf	??_checkAccelerator& (0+255),w,b
  1698  0007B6  E105               	bnz	u690
  1699  0007B8  5010               	movf	_MAP_ACCELERATOR+1,w,c
  1700  0007BA  0100               	movlb	0	; () banked
  1701  0007BC  1961               	xorwf	(??_checkAccelerator+1)& (0+255),w,b
  1702  0007BE  B4D8               	btfsc	status,2,c
  1703  0007C0  0012               	return	
  1704  0007C2                     u690:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;peripherals.c: 58: LATC = TEMP_ACCELERATOR;
  1708  0007C2  C036  FF8B         	movff	_TEMP_ACCELERATOR,3979	;volatile
  1709                           
  1710                           ;peripherals.c: 59: MAP_ACCELERATOR = TEMP_ACCELERATOR;
  1711  0007C6  C036  F00F         	movff	_TEMP_ACCELERATOR,_MAP_ACCELERATOR
  1712  0007CA  6A10               	clrf	_MAP_ACCELERATOR+1,c
  1713  0007CC  0012               	return	
  1714  0007CE                     __end_of_checkAccelerator:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           intcon	equ	0xFF2
  1721                           postinc0	equ	0xFEE
  1722                           wreg	equ	0xFE8
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function _InitDevice *****************
  1726 ;; Defined at:
  1727 ;;		line 11 in file "init.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;		None               void
  1734 ;; Registers used:
  1735 ;;		wreg, status,2
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text14
  1756  0003AC                     __ptext14:
  1757                           	opt stack 0
  1758  0003AC                     _InitDevice:
  1759                           	opt stack 29
  1760                           
  1761                           ;init.c: 12: count = 0x01;
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;incstack = 0
  1765  0003AC  0E01               	movlw	1
  1766  0003AE  6E53               	movwf	_count,c
  1767                           
  1768                           ;init.c: 15: OSCCONbits.IRCF = 7;
  1769  0003B0  88D3               	bsf	4051,4,c	;volatile
  1770  0003B2  8AD3               	bsf	4051,5,c	;volatile
  1771  0003B4  8CD3               	bsf	4051,6,c	;volatile
  1772                           
  1773                           ;init.c: 16: OSCTUNEbits.PLLEN = 1;
  1774  0003B6  8C9B               	bsf	3995,6,c	;volatile
  1775                           
  1776                           ;init.c: 19: heartbeatCount = 0;
  1777  0003B8  0E00               	movlw	0
  1778  0003BA  6E34               	movwf	_heartbeatCount+1,c
  1779  0003BC  0E00               	movlw	0
  1780  0003BE  6E33               	movwf	_heartbeatCount,c
  1781                           
  1782                           ;init.c: 20: buttonWasPressed = 0;
  1783  0003C0  0E00               	movlw	0
  1784  0003C2  6E37               	movwf	_buttonWasPressed,c
  1785                           
  1786                           ;init.c: 25: TRISA = 0b00111111;
  1787  0003C4  0E3F               	movlw	63
  1788  0003C6  6E92               	movwf	3986,c	;volatile
  1789                           
  1790                           ;init.c: 26: ANCON0 = 0x01;
  1791  0003C8  0E01               	movlw	1
  1792  0003CA  010F               	movlb	15	; () banked
  1793  0003CC  6F5D               	movwf	93,b	;volatile
  1794                           
  1795                           ;init.c: 27: ANCON1 = 0x00;
  1796  0003CE  0E00               	movlw	0
  1797  0003D0  010F               	movlb	15	; () banked
  1798  0003D2  6F5C               	movwf	92,b	;volatile
  1799                           
  1800                           ;init.c: 30: ADCON0 = 0x00;
  1801  0003D4  0E00               	movlw	0
  1802  0003D6  6EC2               	movwf	4034,c	;volatile
  1803                           
  1804                           ;init.c: 31: ADCON1 = 0x00;
  1805  0003D8  0E00               	movlw	0
  1806  0003DA  6EC1               	movwf	4033,c	;volatile
  1807                           
  1808                           ;init.c: 32: ADCON2 = 0x00;
  1809  0003DC  0E00               	movlw	0
  1810  0003DE  6EC0               	movwf	4032,c	;volatile
  1811                           
  1812                           ; BSR set to: 15
  1813                           ;init.c: 36: ADCON2bits.ADFM=1;
  1814  0003E0  8EC0               	bsf	4032,7,c	;volatile
  1815                           
  1816                           ;init.c: 37: ADCON2bits.ACQT=1;
  1817  0003E2  50C0               	movf	4032,w,c	;volatile
  1818  0003E4  0BC7               	andlw	-57
  1819  0003E6  0908               	iorlw	8
  1820  0003E8  6EC0               	movwf	4032,c	;volatile
  1821                           
  1822                           ;init.c: 38: ADCON2bits.ADCS=2;
  1823  0003EA  50C0               	movf	4032,w,c	;volatile
  1824  0003EC  0BF8               	andlw	-8
  1825  0003EE  0902               	iorlw	2
  1826  0003F0  6EC0               	movwf	4032,c	;volatile
  1827                           
  1828                           ;init.c: 42: LATA = 0x00;
  1829  0003F2  0E00               	movlw	0
  1830  0003F4  6E89               	movwf	3977,c	;volatile
  1831                           
  1832                           ;init.c: 44: TRISB = 0b00011101;
  1833  0003F6  0E1D               	movlw	29
  1834  0003F8  6E93               	movwf	3987,c	;volatile
  1835                           
  1836                           ;init.c: 45: LATB = 0x00;
  1837  0003FA  0E00               	movlw	0
  1838  0003FC  6E8A               	movwf	3978,c	;volatile
  1839                           
  1840                           ;init.c: 47: TRISC = 0x00;
  1841  0003FE  0E00               	movlw	0
  1842  000400  6E94               	movwf	3988,c	;volatile
  1843                           
  1844                           ;init.c: 48: LATC = 0x00;
  1845  000402  0E00               	movlw	0
  1846  000404  6E8B               	movwf	3979,c	;volatile
  1847                           
  1848                           ;init.c: 52: MAP_BRAKE = 0;
  1849  000406  0E00               	movlw	0
  1850  000408  6E16               	movwf	_MAP_BRAKE+1,c
  1851  00040A  0E00               	movlw	0
  1852  00040C  6E15               	movwf	_MAP_BRAKE,c
  1853                           
  1854                           ;init.c: 53: MAP_BACKLIGHT = 0;
  1855  00040E  0E00               	movlw	0
  1856  000410  6E12               	movwf	_MAP_BACKLIGHT+1,c
  1857  000412  0E00               	movlw	0
  1858  000414  6E11               	movwf	_MAP_BACKLIGHT,c
  1859                           
  1860                           ;init.c: 54: MAP_V_BLINK = 0;
  1861  000416  0E00               	movlw	0
  1862  000418  6E22               	movwf	_MAP_V_BLINK+1,c
  1863  00041A  0E00               	movlw	0
  1864  00041C  6E21               	movwf	_MAP_V_BLINK,c
  1865                           
  1866                           ;init.c: 55: MAP_H_BLINK = 0;
  1867  00041E  0E00               	movlw	0
  1868  000420  6E1C               	movwf	_MAP_H_BLINK+1,c
  1869  000422  0E00               	movlw	0
  1870  000424  6E1B               	movwf	_MAP_H_BLINK,c
  1871                           
  1872                           ;init.c: 56: MAP_DIRECTION = 0;
  1873  000426  0E00               	movlw	0
  1874  000428  6E18               	movwf	_MAP_DIRECTION+1,c
  1875  00042A  0E00               	movlw	0
  1876  00042C  6E17               	movwf	_MAP_DIRECTION,c
  1877                           
  1878                           ;init.c: 57: MAP_SAFETYPIN = 0;
  1879  00042E  0E00               	movlw	0
  1880  000430  6E1E               	movwf	_MAP_SAFETYPIN+1,c
  1881  000432  0E00               	movlw	0
  1882  000434  6E1D               	movwf	_MAP_SAFETYPIN,c
  1883                           
  1884                           ;init.c: 58: MAP_ACCELERATOR = 0;
  1885  000436  0E00               	movlw	0
  1886  000438  6E10               	movwf	_MAP_ACCELERATOR+1,c
  1887  00043A  0E00               	movlw	0
  1888  00043C  6E0F               	movwf	_MAP_ACCELERATOR,c
  1889                           
  1890                           ;init.c: 60: TEMP_MAP_HEARTBEAT = 0;
  1891  00043E  0E00               	movlw	0
  1892  000440  6E2C               	movwf	_TEMP_MAP_HEARTBEAT+1,c
  1893  000442  0E00               	movlw	0
  1894  000444  6E2B               	movwf	_TEMP_MAP_HEARTBEAT,c
  1895                           
  1896                           ;init.c: 61: TEMP_MAP_BRAKE = 0;
  1897  000446  0E00               	movlw	0
  1898  000448  6E28               	movwf	_TEMP_MAP_BRAKE+1,c
  1899  00044A  0E00               	movlw	0
  1900  00044C  6E27               	movwf	_TEMP_MAP_BRAKE,c
  1901                           
  1902                           ;init.c: 62: TEMP_MAP_BACKLIGHT = 0;
  1903  00044E  0E00               	movlw	0
  1904  000450  6E26               	movwf	_TEMP_MAP_BACKLIGHT+1,c
  1905  000452  0E00               	movlw	0
  1906  000454  6E25               	movwf	_TEMP_MAP_BACKLIGHT,c
  1907                           
  1908                           ;init.c: 63: TEMP_MAP_V_BLINK = 0;
  1909  000456  0E00               	movlw	0
  1910  000458  6E32               	movwf	_TEMP_MAP_V_BLINK+1,c
  1911  00045A  0E00               	movlw	0
  1912  00045C  6E31               	movwf	_TEMP_MAP_V_BLINK,c
  1913                           
  1914                           ;init.c: 64: TEMP_MAP_H_BLINK = 0;
  1915  00045E  0E00               	movlw	0
  1916  000460  6E2E               	movwf	_TEMP_MAP_H_BLINK+1,c
  1917  000462  0E00               	movlw	0
  1918  000464  6E2D               	movwf	_TEMP_MAP_H_BLINK,c
  1919                           
  1920                           ;init.c: 65: TEMP_MAP_DIRECTION = 0;
  1921  000466  0E00               	movlw	0
  1922  000468  6E2A               	movwf	_TEMP_MAP_DIRECTION+1,c
  1923  00046A  0E00               	movlw	0
  1924  00046C  6E29               	movwf	_TEMP_MAP_DIRECTION,c
  1925                           
  1926                           ;init.c: 66: TEMP_MAP_SAFETYPIN = 0;
  1927  00046E  0E00               	movlw	0
  1928  000470  6E30               	movwf	_TEMP_MAP_SAFETYPIN+1,c
  1929  000472  0E00               	movlw	0
  1930  000474  6E2F               	movwf	_TEMP_MAP_SAFETYPIN,c
  1931                           
  1932                           ;init.c: 67: TEMP_MAP_ACCELERATOR = 0;
  1933  000476  0E00               	movlw	0
  1934  000478  6E24               	movwf	_TEMP_MAP_ACCELERATOR+1,c
  1935  00047A  0E00               	movlw	0
  1936  00047C  6E23               	movwf	_TEMP_MAP_ACCELERATOR,c
  1937                           
  1938                           ;init.c: 69: MAP_BATTERYSTATUS = 0;
  1939  00047E  0E00               	movlw	0
  1940  000480  6E14               	movwf	_MAP_BATTERYSTATUS+1,c
  1941  000482  0E00               	movlw	0
  1942  000484  6E13               	movwf	_MAP_BATTERYSTATUS,c
  1943                           
  1944                           ;init.c: 70: MAP_VELOCITY = 0;
  1945  000486  0E00               	movlw	0
  1946  000488  6E20               	movwf	_MAP_VELOCITY+1,c
  1947  00048A  0E00               	movlw	0
  1948  00048C  6E1F               	movwf	_MAP_VELOCITY,c
  1949                           
  1950                           ;init.c: 71: MAP_HEARTBEAT = 0;
  1951  00048E  0E00               	movlw	0
  1952  000490  6E1A               	movwf	_MAP_HEARTBEAT+1,c
  1953  000492  0E00               	movlw	0
  1954  000494  6E19               	movwf	_MAP_HEARTBEAT,c
  1955                           
  1956                           ; BSR set to: 15
  1957                           ;init.c: 77: T0CONbits.TMR0ON = 1;
  1958  000496  8ED5               	bsf	4053,7,c	;volatile
  1959                           
  1960                           ; BSR set to: 15
  1961                           ;init.c: 78: T0CONbits.T08BIT = 0;
  1962  000498  9CD5               	bcf	4053,6,c	;volatile
  1963                           
  1964                           ; BSR set to: 15
  1965                           ;init.c: 79: T0CONbits.T0CS = 0;
  1966  00049A  9AD5               	bcf	4053,5,c	;volatile
  1967                           
  1968                           ; BSR set to: 15
  1969                           ;init.c: 81: T0CONbits.PSA = 0;
  1970  00049C  96D5               	bcf	4053,3,c	;volatile
  1971                           
  1972                           ; BSR set to: 15
  1973                           ;init.c: 82: T0CONbits.T0PS = 7;
  1974  00049E  80D5               	bsf	4053,0,c	;volatile
  1975  0004A0  82D5               	bsf	4053,1,c	;volatile
  1976  0004A2  84D5               	bsf	4053,2,c	;volatile
  1977                           
  1978                           ; BSR set to: 15
  1979                           ;init.c: 89: T1CONbits.TMR1CS0 = 0;
  1980  0004A4  9CCD               	bcf	4045,6,c	;volatile
  1981                           
  1982                           ; BSR set to: 15
  1983                           ;init.c: 90: T1CONbits.TMR1CS1 = 0;
  1984  0004A6  9ECD               	bcf	4045,7,c	;volatile
  1985                           
  1986                           ; BSR set to: 15
  1987                           ;init.c: 91: T1CONbits.SOSCEN = 1;
  1988  0004A8  86CD               	bsf	4045,3,c	;volatile
  1989                           
  1990                           ; BSR set to: 15
  1991                           ;init.c: 93: T1CONbits.T1CKPS0 = 1;
  1992  0004AA  88CD               	bsf	4045,4,c	;volatile
  1993                           
  1994                           ; BSR set to: 15
  1995                           ;init.c: 94: T1CONbits.T1CKPS1 = 1;
  1996  0004AC  8ACD               	bsf	4045,5,c	;volatile
  1997                           
  1998                           ; BSR set to: 15
  1999                           ;init.c: 96: T1CONbits.nT1SYNC = 1;
  2000  0004AE  84CD               	bsf	4045,2,c	;volatile
  2001                           
  2002                           ; BSR set to: 15
  2003                           ;init.c: 97: T1CONbits.RD16 = 1;
  2004  0004B0  82CD               	bsf	4045,1,c	;volatile
  2005                           
  2006                           ; BSR set to: 15
  2007                           ;init.c: 98: T1CONbits.TMR1ON = 1;
  2008  0004B2  80CD               	bsf	4045,0,c	;volatile
  2009                           
  2010                           ; BSR set to: 15
  2011                           ;init.c: 102: T1GCONbits.TMR1GE = 0;
  2012  0004B4  9EAA               	bcf	4010,7,c	;volatile
  2013                           
  2014                           ; BSR set to: 15
  2015  0004B6  0012               	return		;funcret
  2016  0004B8                     __end_of_InitDevice:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           intcon	equ	0xFF2
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           status	equ	0xFD8
  2026                           
  2027 ;; *************** function _ECAN_Transmit *****************
  2028 ;; Defined at:
  2029 ;;		line 303 in file "ECAN.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  SIDH            1    wreg     unsigned char 
  2032 ;;  SIDL            1    0[BANK0 ] unsigned char 
  2033 ;;  DLC             1    1[BANK0 ] unsigned char 
  2034 ;;  TRANSMIT_ID     1    2[BANK0 ] unsigned char 
  2035 ;;  DATA1           1    3[BANK0 ] unsigned char 
  2036 ;;  DATA2           1    4[BANK0 ] unsigned char 
  2037 ;;  DATA3           1    5[BANK0 ] unsigned char 
  2038 ;;  DATA4           1    6[BANK0 ] unsigned char 
  2039 ;;  DATA5           1    7[BANK0 ] unsigned char 
  2040 ;;  DATA6           1    8[BANK0 ] unsigned char 
  2041 ;;  DATA7           1    9[BANK0 ] unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  SIDH            1   10[BANK0 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;		None               void
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2053 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;Total ram usage:       11 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text15
  2068  000678                     __ptext15:
  2069                           	opt stack 0
  2070  000678                     _ECAN_Transmit:
  2071                           	opt stack 29
  2072                           
  2073                           ; BSR set to: 15
  2074                           ;incstack = 0
  2075                           ;ECAN_Transmit@SIDH stored from wreg
  2076  000678  0100               	movlb	0	; () banked
  2077  00067A  6F6A               	movwf	ECAN_Transmit@SIDH& (0+255),b
  2078                           
  2079                           ;ECAN.c: 315: TXB0EIDH = 0x00;
  2080  00067C  0E00               	movlw	0
  2081  00067E  010F               	movlb	15	; () banked
  2082  000680  6F23               	movwf	35,b	;volatile
  2083                           
  2084                           ;ECAN.c: 316: TXB0EIDL = 0x00;
  2085  000682  0E00               	movlw	0
  2086  000684  010F               	movlb	15	; () banked
  2087  000686  6F24               	movwf	36,b	;volatile
  2088                           
  2089                           ; BSR set to: 15
  2090                           ;ECAN.c: 319: TXB0SIDH = SIDH;
  2091  000688  C06A  FF21         	movff	ECAN_Transmit@SIDH,3873	;volatile
  2092                           
  2093                           ; BSR set to: 15
  2094                           ;ECAN.c: 320: TXB0SIDL = SIDL;
  2095  00068C  C060  FF22         	movff	ECAN_Transmit@SIDL,3874	;volatile
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;ECAN.c: 321: TXB0DLC = DLC;
  2099  000690  C061  FF25         	movff	ECAN_Transmit@DLC,3877	;volatile
  2100                           
  2101                           ; BSR set to: 15
  2102                           ;ECAN.c: 330: TXB0D0 = TRANSMIT_ID;
  2103  000694  C062  FF26         	movff	ECAN_Transmit@TRANSMIT_ID,3878	;volatile
  2104                           
  2105                           ; BSR set to: 15
  2106                           ;ECAN.c: 331: TXB0D1 = DATA1;
  2107  000698  C063  FF27         	movff	ECAN_Transmit@DATA1,3879	;volatile
  2108                           
  2109                           ; BSR set to: 15
  2110                           ;ECAN.c: 332: TXB0D2 = DATA2;
  2111  00069C  C064  FF28         	movff	ECAN_Transmit@DATA2,3880	;volatile
  2112                           
  2113                           ; BSR set to: 15
  2114                           ;ECAN.c: 333: TXB0D3 = DATA3;
  2115  0006A0  C065  FF29         	movff	ECAN_Transmit@DATA3,3881	;volatile
  2116                           
  2117                           ; BSR set to: 15
  2118                           ;ECAN.c: 334: TXB0D4 = DATA4;
  2119  0006A4  C066  FF2A         	movff	ECAN_Transmit@DATA4,3882	;volatile
  2120                           
  2121                           ; BSR set to: 15
  2122                           ;ECAN.c: 335: TXB0D5 = DATA5;
  2123  0006A8  C067  FF2B         	movff	ECAN_Transmit@DATA5,3883	;volatile
  2124                           
  2125                           ; BSR set to: 15
  2126                           ;ECAN.c: 336: TXB0D6 = DATA6;
  2127  0006AC  C068  FF2C         	movff	ECAN_Transmit@DATA6,3884	;volatile
  2128                           
  2129                           ; BSR set to: 15
  2130                           ;ECAN.c: 337: TXB0D7 = DATA7;
  2131  0006B0  C069  FF2D         	movff	ECAN_Transmit@DATA7,3885	;volatile
  2132                           
  2133                           ; BSR set to: 15
  2134                           ;ECAN.c: 339: TXB0CONbits.TXREQ = 1;
  2135  0006B4  010F               	movlb	15	; () banked
  2136  0006B6  8720               	bsf	32,3,b	;volatile
  2137                           
  2138                           ; BSR set to: 15
  2139  0006B8  0012               	return		;funcret
  2140  0006BA                     __end_of_ECAN_Transmit:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           intcon	equ	0xFF2
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _ECAN_Receive *****************
  2152 ;; Defined at:
  2153 ;;		line 222 in file "ECAN.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  RXMsgFlag       1    0[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      unsigned char 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;Total ram usage:        1 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text16
  2182  00059A                     __ptext16:
  2183                           	opt stack 0
  2184  00059A                     _ECAN_Receive:
  2185                           	opt stack 29
  2186                           
  2187                           ;ECAN.c: 224: unsigned char RXMsgFlag;
  2188                           ;ECAN.c: 226: RXMsgFlag = 0x00;
  2189                           
  2190                           ; BSR set to: 15
  2191                           ;incstack = 0
  2192  00059A  0E00               	movlw	0
  2193  00059C  0100               	movlb	0	; () banked
  2194  00059E  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;ECAN.c: 228: if (RXB0CONbits.RXFUL)
  2198  0005A0  AE60               	btfss	3936,7,c	;volatile
  2199  0005A2  D01C               	goto	l444
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;ECAN.c: 229: {
  2203                           ;ECAN.c: 230: temp_EIDH = RXB0EIDH;
  2204  0005A4  CF63 F03F          	movff	3939,_temp_EIDH	;volatile
  2205                           
  2206                           ;ECAN.c: 231: temp_EIDL = RXB0EIDL;
  2207  0005A8  CF64 F040          	movff	3940,_temp_EIDL	;volatile
  2208                           
  2209                           ;ECAN.c: 232: temp_SIDH = RXB0SIDH;
  2210  0005AC  CF61 F041          	movff	3937,_temp_SIDH	;volatile
  2211                           
  2212                           ;ECAN.c: 233: temp_SIDL = RXB0SIDL;
  2213  0005B0  CF62 F042          	movff	3938,_temp_SIDL	;volatile
  2214                           
  2215                           ;ECAN.c: 234: temp_DLC = RXB0DLC;
  2216  0005B4  CF65 F03E          	movff	3941,_temp_DLC	;volatile
  2217                           
  2218                           ;ECAN.c: 235: BITDATA = RXB0D0;
  2219  0005B8  CF66 F035          	movff	3942,_BITDATA	;volatile
  2220                           
  2221                           ;ECAN.c: 236: TEMP_ACCELERATOR = RXB0D1;
  2222  0005BC  CF67 F036          	movff	3943,_TEMP_ACCELERATOR	;volatile
  2223                           
  2224                           ;ECAN.c: 237: temp_D2 = RXB0D2;
  2225  0005C0  CF68 F038          	movff	3944,_temp_D2	;volatile
  2226                           
  2227                           ;ECAN.c: 238: temp_D3 = RXB0D3;
  2228  0005C4  CF69 F039          	movff	3945,_temp_D3	;volatile
  2229                           
  2230                           ;ECAN.c: 239: temp_D4 = RXB0D4;
  2231  0005C8  CF6A F03A          	movff	3946,_temp_D4	;volatile
  2232                           
  2233                           ;ECAN.c: 240: temp_D5 = RXB0D5;
  2234  0005CC  CF6B F03B          	movff	3947,_temp_D5	;volatile
  2235                           
  2236                           ;ECAN.c: 241: temp_D6 = RXB0D6;
  2237  0005D0  CF6C F03C          	movff	3948,_temp_D6	;volatile
  2238                           
  2239                           ;ECAN.c: 242: temp_D7 = RXB0D7;
  2240  0005D4  CF6D F03D          	movff	3949,_temp_D7	;volatile
  2241                           
  2242                           ;ECAN.c: 243: RXB0CONbits.RXFUL = 0;
  2243  0005D8  9E60               	bcf	3936,7,c	;volatile
  2244  0005DA  D03F               	goto	l1880
  2245  0005DC                     l444:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;ECAN.c: 246: else if (RXB1CONbits.RXFUL)
  2249  0005DC  010F               	movlb	15	; () banked
  2250  0005DE  AF30               	btfss	48,7,b	;volatile
  2251  0005E0  D01D               	goto	l446
  2252                           
  2253                           ; BSR set to: 15
  2254                           ;ECAN.c: 247: {
  2255                           ;ECAN.c: 248: temp_EIDH = RXB1EIDH;
  2256  0005E2  CF33 F03F          	movff	3891,_temp_EIDH	;volatile
  2257                           
  2258                           ;ECAN.c: 249: temp_EIDL = RXB1EIDL;
  2259  0005E6  CF34 F040          	movff	3892,_temp_EIDL	;volatile
  2260                           
  2261                           ;ECAN.c: 250: temp_SIDH = RXB1SIDH;
  2262  0005EA  CF31 F041          	movff	3889,_temp_SIDH	;volatile
  2263                           
  2264                           ;ECAN.c: 251: temp_SIDL = RXB1SIDL;
  2265  0005EE  CF32 F042          	movff	3890,_temp_SIDL	;volatile
  2266                           
  2267                           ;ECAN.c: 252: temp_DLC = RXB1DLC;
  2268  0005F2  CF35 F03E          	movff	3893,_temp_DLC	;volatile
  2269                           
  2270                           ;ECAN.c: 253: BITDATA = RXB1D0;
  2271  0005F6  CF36 F035          	movff	3894,_BITDATA	;volatile
  2272                           
  2273                           ;ECAN.c: 254: TEMP_ACCELERATOR = RXB1D1;
  2274  0005FA  CF37 F036          	movff	3895,_TEMP_ACCELERATOR	;volatile
  2275                           
  2276                           ;ECAN.c: 255: temp_D2 = RXB1D2;
  2277  0005FE  CF38 F038          	movff	3896,_temp_D2	;volatile
  2278                           
  2279                           ;ECAN.c: 256: temp_D3 = RXB1D3;
  2280  000602  CF39 F039          	movff	3897,_temp_D3	;volatile
  2281                           
  2282                           ;ECAN.c: 257: temp_D4 = RXB1D4;
  2283  000606  CF3A F03A          	movff	3898,_temp_D4	;volatile
  2284                           
  2285                           ;ECAN.c: 258: temp_D5 = RXB1D5;
  2286  00060A  CF3B F03B          	movff	3899,_temp_D5	;volatile
  2287                           
  2288                           ;ECAN.c: 259: temp_D6 = RXB1D6;
  2289  00060E  CF3C F03C          	movff	3900,_temp_D6	;volatile
  2290                           
  2291                           ;ECAN.c: 260: temp_D7 = RXB1D7;
  2292  000612  CF3D F03D          	movff	3901,_temp_D7	;volatile
  2293                           
  2294                           ;ECAN.c: 261: RXB1CONbits.RXFUL = 0;
  2295  000616  010F               	movlb	15	; () banked
  2296  000618  9F30               	bcf	48,7,b	;volatile
  2297  00061A  D01F               	goto	l1880
  2298  00061C                     l446:
  2299                           
  2300                           ; BSR set to: 15
  2301                           ;ECAN.c: 264: else if (B0CONbits.RXFUL)
  2302  00061C  010E               	movlb	14	; () banked
  2303  00061E  AF80               	btfss	128,7,b	;volatile
  2304  000620  D01F               	goto	l1882
  2305                           
  2306                           ; BSR set to: 14
  2307                           ;ECAN.c: 265: {
  2308                           ;ECAN.c: 266: temp_EIDH = B0EIDH;
  2309  000622  CE83 F03F          	movff	3715,_temp_EIDH	;volatile
  2310                           
  2311                           ;ECAN.c: 267: temp_EIDL = B0EIDL;
  2312  000626  CE84 F040          	movff	3716,_temp_EIDL	;volatile
  2313                           
  2314                           ;ECAN.c: 268: temp_SIDH = B0SIDH;
  2315  00062A  CE81 F041          	movff	3713,_temp_SIDH	;volatile
  2316                           
  2317                           ;ECAN.c: 269: temp_SIDL = B0SIDL;
  2318  00062E  CE82 F042          	movff	3714,_temp_SIDL	;volatile
  2319                           
  2320                           ;ECAN.c: 270: temp_DLC = B0DLC;
  2321  000632  CE85 F03E          	movff	3717,_temp_DLC	;volatile
  2322                           
  2323                           ;ECAN.c: 271: BITDATA = B0D0;
  2324  000636  CE86 F035          	movff	3718,_BITDATA	;volatile
  2325                           
  2326                           ;ECAN.c: 272: TEMP_ACCELERATOR = B0D1;
  2327  00063A  CE87 F036          	movff	3719,_TEMP_ACCELERATOR	;volatile
  2328                           
  2329                           ;ECAN.c: 273: temp_D2 = B0D2;
  2330  00063E  CE88 F038          	movff	3720,_temp_D2	;volatile
  2331                           
  2332                           ;ECAN.c: 274: temp_D3 = B0D3;
  2333  000642  CE89 F039          	movff	3721,_temp_D3	;volatile
  2334                           
  2335                           ;ECAN.c: 275: temp_D4 = B0D4;
  2336  000646  CE8A F03A          	movff	3722,_temp_D4	;volatile
  2337                           
  2338                           ;ECAN.c: 276: temp_D5 = B0D5;
  2339  00064A  CE8B F03B          	movff	3723,_temp_D5	;volatile
  2340                           
  2341                           ;ECAN.c: 277: temp_D6 = B0D6;
  2342  00064E  CE8C F03C          	movff	3724,_temp_D6	;volatile
  2343                           
  2344                           ;ECAN.c: 278: temp_D7 = B0D7;
  2345  000652  CE8D F03D          	movff	3725,_temp_D7	;volatile
  2346                           
  2347                           ;ECAN.c: 280: B0CONbits.RXFUL = 0;
  2348  000656  010E               	movlb	14	; () banked
  2349  000658  9F80               	bcf	128,7,b	;volatile
  2350  00065A                     l1880:
  2351                           
  2352                           ; BSR set to: 14
  2353                           ;ECAN.c: 281: RXMsgFlag = 0x01;
  2354  00065A  0E01               	movlw	1
  2355  00065C  0100               	movlb	0	; () banked
  2356  00065E  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2357  000660                     l1882:
  2358                           
  2359                           ;ECAN.c: 282: }
  2360                           ;ECAN.c: 284: if (RXMsgFlag == 0x01)
  2361  000660  0100               	movlb	0	; () banked
  2362  000662  0560               	decf	ECAN_Receive@RXMsgFlag& (0+255),w,b
  2363  000664  A4D8               	btfss	status,2,c
  2364  000666  D006               	goto	l1894
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;ECAN.c: 285: {
  2368                           ;ECAN.c: 286: RXMsgFlag = 0x00;
  2369  000668  0E00               	movlw	0
  2370  00066A  0100               	movlb	0	; () banked
  2371  00066C  6F60               	movwf	ECAN_Receive@RXMsgFlag& (0+255),b
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;ECAN.c: 287: PIR5bits.RXB1IF = 0;
  2375  00066E  9277               	bcf	3959,1,c	;volatile
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;ECAN.c: 288: return 1;
  2379  000670  0E01               	movlw	1
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;ECAN.c: 289: }
  2383                           
  2384                           ; BSR set to: 0
  2385  000672  0012               	return	
  2386  000674                     l1894:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;ECAN.c: 290: else
  2390                           ;ECAN.c: 291: {
  2391                           ;ECAN.c: 292: return 0;
  2392  000674  0E00               	movlw	0
  2393                           
  2394                           ; BSR set to: 0
  2395  000676  0012               	return	
  2396  000678                     __end_of_ECAN_Receive:
  2397                           	opt stack 0
  2398                           tblptru	equ	0xFF8
  2399                           tblptrh	equ	0xFF7
  2400                           tblptrl	equ	0xFF6
  2401                           tablat	equ	0xFF5
  2402                           intcon	equ	0xFF2
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _CANSetup *****************
  2408 ;; Defined at:
  2409 ;;		line 111 in file "ECAN.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text17
  2438  000282                     __ptext17:
  2439                           	opt stack 0
  2440  000282                     _CANSetup:
  2441                           	opt stack 29
  2442                           
  2443                           ;ECAN.c: 114: CANCON = 0x80;
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;incstack = 0
  2447  000282  0E80               	movlw	128
  2448  000284  6E6F               	movwf	3951,c	;volatile
  2449  000286                     l1816:
  2450  000286  386E               	swapf	3950,w,c	;volatile
  2451  000288  32E8               	rrcf	wreg,f,c
  2452  00028A  0B07               	andlw	7
  2453  00028C  0A04               	xorlw	4
  2454  00028E  A4D8               	btfss	status,2,c
  2455  000290  D7FA               	goto	l1816
  2456                           
  2457                           ;ECAN.c: 118: ECANCON = 0x40;
  2458  000292  0E40               	movlw	64
  2459  000294  6E72               	movwf	3954,c	;volatile
  2460                           
  2461                           ;ECAN.c: 122: BRGCON1 = 0x81;
  2462  000296  0E81               	movlw	129
  2463  000298  010E               	movlb	14	; () banked
  2464  00029A  6F43               	movwf	67,b	;volatile
  2465                           
  2466                           ;ECAN.c: 123: BRGCON2 = 0xB8;
  2467  00029C  0EB8               	movlw	184
  2468  00029E  010E               	movlb	14	; () banked
  2469  0002A0  6F44               	movwf	68,b	;volatile
  2470                           
  2471                           ;ECAN.c: 124: BRGCON3 = 0x05;
  2472  0002A2  0E05               	movlw	5
  2473  0002A4  010E               	movlb	14	; () banked
  2474  0002A6  6F45               	movwf	69,b	;volatile
  2475                           
  2476                           ;ECAN.c: 129: BSEL0 = 0xF8;
  2477  0002A8  0EF8               	movlw	248
  2478  0002AA  010E               	movlb	14	; () banked
  2479  0002AC  6F7D               	movwf	125,b	;volatile
  2480                           
  2481                           ;ECAN.c: 133: RXM0EIDH = 0x00;
  2482  0002AE  0E00               	movlw	0
  2483  0002B0  010E               	movlb	14	; () banked
  2484  0002B2  6FFA               	movwf	250,b	;volatile
  2485                           
  2486                           ;ECAN.c: 134: RXM0EIDL = 0x00;
  2487  0002B4  0E00               	movlw	0
  2488  0002B6  010E               	movlb	14	; () banked
  2489  0002B8  6FFB               	movwf	251,b	;volatile
  2490                           
  2491                           ; BSR set to: 14
  2492                           ;ECAN.c: 135: RXM0SIDH = 0xFF;
  2493  0002BA  010E               	movlb	14	; () banked
  2494  0002BC  69F8               	setf	248,b	;volatile
  2495                           
  2496                           ;ECAN.c: 136: RXM0SIDL = 0xE0;
  2497  0002BE  0EE0               	movlw	224
  2498  0002C0  010E               	movlb	14	; () banked
  2499  0002C2  6FF9               	movwf	249,b	;volatile
  2500                           
  2501                           ;ECAN.c: 139: RXM1EIDH = 0x00;
  2502  0002C4  0E00               	movlw	0
  2503  0002C6  010E               	movlb	14	; () banked
  2504  0002C8  6FFE               	movwf	254,b	;volatile
  2505                           
  2506                           ;ECAN.c: 140: RXM1EIDL = 0x00;
  2507  0002CA  0E00               	movlw	0
  2508  0002CC  010E               	movlb	14	; () banked
  2509  0002CE  6FFF               	movwf	255,b	;volatile
  2510                           
  2511                           ; BSR set to: 14
  2512                           ;ECAN.c: 141: RXM1SIDH = 0xFF;
  2513  0002D0  010E               	movlb	14	; () banked
  2514  0002D2  69FC               	setf	252,b	;volatile
  2515                           
  2516                           ;ECAN.c: 142: RXM1SIDL = 0xE0;
  2517  0002D4  0EE0               	movlw	224
  2518  0002D6  010E               	movlb	14	; () banked
  2519  0002D8  6FFD               	movwf	253,b	;volatile
  2520                           
  2521                           ;ECAN.c: 146: RXFCON0 = 0x07;
  2522  0002DA  0E07               	movlw	7
  2523  0002DC  010E               	movlb	14	; () banked
  2524  0002DE  6F46               	movwf	70,b	;volatile
  2525                           
  2526                           ;ECAN.c: 147: RXFCON1 = 0x00;
  2527  0002E0  0E00               	movlw	0
  2528  0002E2  010E               	movlb	14	; () banked
  2529  0002E4  6F47               	movwf	71,b	;volatile
  2530                           
  2531                           ;ECAN.c: 150: MSEL0 = 0xC0;
  2532  0002E6  0EC0               	movlw	192
  2533  0002E8  010E               	movlb	14	; () banked
  2534  0002EA  6F79               	movwf	121,b	;volatile
  2535                           
  2536                           ; BSR set to: 14
  2537                           ;ECAN.c: 151: MSEL1 = 0xFF;
  2538  0002EC  010E               	movlb	14	; () banked
  2539  0002EE  697A               	setf	122,b	;volatile
  2540                           
  2541                           ; BSR set to: 14
  2542                           ;ECAN.c: 152: MSEL2 = 0xFF;
  2543  0002F0  010E               	movlb	14	; () banked
  2544  0002F2  697B               	setf	123,b	;volatile
  2545                           
  2546                           ; BSR set to: 14
  2547                           ;ECAN.c: 153: MSEL3 = 0xFF;
  2548  0002F4  010E               	movlb	14	; () banked
  2549  0002F6  697C               	setf	124,b	;volatile
  2550                           
  2551                           ;ECAN.c: 157: RXFBCON0 = 0x10;
  2552  0002F8  0E10               	movlw	16
  2553  0002FA  010E               	movlb	14	; () banked
  2554  0002FC  6F71               	movwf	113,b	;volatile
  2555                           
  2556                           ;ECAN.c: 158: RXFBCON1 = 0xF2;
  2557  0002FE  0EF2               	movlw	242
  2558  000300  010E               	movlb	14	; () banked
  2559  000302  6F72               	movwf	114,b	;volatile
  2560                           
  2561                           ; BSR set to: 14
  2562                           ;ECAN.c: 160: RXFBCON2 = 0xFF;
  2563  000304  010E               	movlb	14	; () banked
  2564  000306  6973               	setf	115,b	;volatile
  2565                           
  2566                           ; BSR set to: 14
  2567                           ;ECAN.c: 161: RXFBCON3 = 0xFF;
  2568  000308  010E               	movlb	14	; () banked
  2569  00030A  6974               	setf	116,b	;volatile
  2570                           
  2571                           ; BSR set to: 14
  2572                           ;ECAN.c: 162: RXFBCON4 = 0xFF;
  2573  00030C  010E               	movlb	14	; () banked
  2574  00030E  6975               	setf	117,b	;volatile
  2575                           
  2576                           ; BSR set to: 14
  2577                           ;ECAN.c: 163: RXFBCON5 = 0xFF;
  2578  000310  010E               	movlb	14	; () banked
  2579  000312  6976               	setf	118,b	;volatile
  2580                           
  2581                           ; BSR set to: 14
  2582                           ;ECAN.c: 164: RXFBCON6 = 0xFF;
  2583  000314  010E               	movlb	14	; () banked
  2584  000316  6977               	setf	119,b	;volatile
  2585                           
  2586                           ; BSR set to: 14
  2587                           ;ECAN.c: 165: RXFBCON7 = 0xFF;
  2588  000318  010E               	movlb	14	; () banked
  2589  00031A  6978               	setf	120,b	;volatile
  2590                           
  2591                           ;ECAN.c: 171: RXF0EIDH = 0x00;
  2592  00031C  0E00               	movlw	0
  2593  00031E  010E               	movlb	14	; () banked
  2594  000320  6FE2               	movwf	226,b	;volatile
  2595                           
  2596                           ;ECAN.c: 172: RXF0EIDL = 0x00;
  2597  000322  0E00               	movlw	0
  2598  000324  010E               	movlb	14	; () banked
  2599  000326  6FE3               	movwf	227,b	;volatile
  2600                           
  2601                           ;ECAN.c: 173: RXF0SIDH = 0x32;
  2602  000328  0E32               	movlw	50
  2603  00032A  010E               	movlb	14	; () banked
  2604  00032C  6FE0               	movwf	224,b	;volatile
  2605                           
  2606                           ;ECAN.c: 174: RXF0SIDL = 0xC0;
  2607  00032E  0EC0               	movlw	192
  2608  000330  010E               	movlb	14	; () banked
  2609  000332  6FE1               	movwf	225,b	;volatile
  2610                           
  2611                           ;ECAN.c: 175: RXF1EIDH = 0x00;
  2612  000334  0E00               	movlw	0
  2613  000336  010E               	movlb	14	; () banked
  2614  000338  6FE6               	movwf	230,b	;volatile
  2615                           
  2616                           ;ECAN.c: 176: RXF1EIDL = 0x00;
  2617  00033A  0E00               	movlw	0
  2618  00033C  010E               	movlb	14	; () banked
  2619  00033E  6FE7               	movwf	231,b	;volatile
  2620                           
  2621                           ;ECAN.c: 177: RXF1SIDH = 0x33;
  2622  000340  0E33               	movlw	51
  2623  000342  010E               	movlb	14	; () banked
  2624  000344  6FE4               	movwf	228,b	;volatile
  2625                           
  2626                           ;ECAN.c: 178: RXF1SIDL = 0x40;
  2627  000346  0E40               	movlw	64
  2628  000348  010E               	movlb	14	; () banked
  2629  00034A  6FE5               	movwf	229,b	;volatile
  2630                           
  2631                           ;ECAN.c: 179: RXF2EIDH = 0x00;
  2632  00034C  0E00               	movlw	0
  2633  00034E  010E               	movlb	14	; () banked
  2634  000350  6FEA               	movwf	234,b	;volatile
  2635                           
  2636                           ;ECAN.c: 180: RXF2EIDL = 0x00;
  2637  000352  0E00               	movlw	0
  2638  000354  010E               	movlb	14	; () banked
  2639  000356  6FEB               	movwf	235,b	;volatile
  2640                           
  2641                           ;ECAN.c: 181: RXF2SIDH = 0x33;
  2642  000358  0E33               	movlw	51
  2643  00035A  010E               	movlb	14	; () banked
  2644  00035C  6FE8               	movwf	232,b	;volatile
  2645                           
  2646                           ;ECAN.c: 182: RXF2SIDL = 0xC0;
  2647  00035E  0EC0               	movlw	192
  2648  000360  010E               	movlb	14	; () banked
  2649  000362  6FE9               	movwf	233,b	;volatile
  2650                           
  2651                           ;ECAN.c: 185: if (0 ==1)
  2652  000364  D00E               	goto	l1850
  2653  000366                     l1844:
  2654  000366  386E               	swapf	3950,w,c	;volatile
  2655  000368  32E8               	rrcf	wreg,f,c
  2656  00036A  0B07               	andlw	7
  2657  00036C  0A40               	xorlw	64
  2658  00036E  A4D8               	btfss	status,2,c
  2659  000370  D017               	goto	l1858
  2660  000372  D7F9               	goto	l1844
  2661  000374                     l1848:
  2662  000374  386E               	swapf	3950,w,c	;volatile
  2663  000376  32E8               	rrcf	wreg,f,c
  2664  000378  0B07               	andlw	7
  2665  00037A  0A60               	xorlw	96
  2666  00037C  A4D8               	btfss	status,2,c
  2667  00037E  D010               	goto	l1858
  2668  000380  D7F9               	goto	l1848
  2669  000382                     l1850:
  2670                           
  2671                           ;ECAN.c: 196: CANCON = 0x00;
  2672  000382  0E00               	movlw	0
  2673  000384  6E6F               	movwf	3951,c	;volatile
  2674  000386                     l1852:
  2675  000386  386E               	swapf	3950,w,c	;volatile
  2676  000388  32E8               	rrcf	wreg,f,c
  2677  00038A  0B07               	andlw	7
  2678  00038C  0900               	iorlw	0
  2679  00038E  A4D8               	btfss	status,2,c
  2680  000390  D007               	goto	l1858
  2681  000392  D7F9               	goto	l1852
  2682  000394                     l1856:
  2683  000394  386E               	swapf	3950,w,c	;volatile
  2684  000396  32E8               	rrcf	wreg,f,c
  2685  000398  0B07               	andlw	7
  2686  00039A  0A40               	xorlw	64
  2687  00039C  B4D8               	btfsc	status,2,c
  2688  00039E  D7FA               	goto	l1856
  2689  0003A0                     l1858:
  2690                           
  2691                           ;ECAN.c: 204: }
  2692                           ;ECAN.c: 207: RXB0CON = 0x00;
  2693  0003A0  0E00               	movlw	0
  2694  0003A2  6E60               	movwf	3936,c	;volatile
  2695                           
  2696                           ;ECAN.c: 208: RXB1CON = 0x00;
  2697  0003A4  0E00               	movlw	0
  2698  0003A6  010F               	movlb	15	; () banked
  2699  0003A8  6F30               	movwf	48,b	;volatile
  2700                           
  2701                           ; BSR set to: 15
  2702  0003AA  0012               	return		;funcret
  2703  0003AC                     __end_of_CANSetup:
  2704                           	opt stack 0
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _ISR *****************
  2715 ;; Defined at:
  2716 ;;		line 71 in file "main.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;		None               void
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;Total ram usage:       14 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		Interrupt level 2
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	intcode
  2744  000008                     __pintcode:
  2745                           	opt stack 0
  2746  000008                     _ISR:
  2747                           	opt stack 27
  2748                           
  2749                           ; BSR set to: 15
  2750                           ;incstack = 0
  2751  000008  8254               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2752  00000A  CFFA F043          	movff	pclath,??_ISR
  2753  00000E  CFFB F044          	movff	pclatu,??_ISR+1
  2754  000012  CFE9 F045          	movff	fsr0l,??_ISR+2
  2755  000016  CFEA F046          	movff	fsr0h,??_ISR+3
  2756  00001A  CFE1 F047          	movff	fsr1l,??_ISR+4
  2757  00001E  CFE2 F048          	movff	fsr1h,??_ISR+5
  2758  000022  CFD9 F049          	movff	fsr2l,??_ISR+6
  2759  000026  CFDA F04A          	movff	fsr2h,??_ISR+7
  2760  00002A  CFF3 F04B          	movff	prodl,??_ISR+8
  2761  00002E  CFF4 F04C          	movff	prodh,??_ISR+9
  2762  000032  CFF6 F04D          	movff	tblptrl,??_ISR+10
  2763  000036  CFF7 F04E          	movff	tblptrh,??_ISR+11
  2764  00003A  CFF8 F04F          	movff	tblptru,??_ISR+12
  2765  00003E  CFF5 F050          	movff	tablat,??_ISR+13
  2766                           
  2767                           ;main.c: 75: if(IRXIF){
  2768  000042  AE77               	btfss	3959,7,c	;volatile
  2769  000044  D004               	goto	i2l126
  2770                           
  2771                           ;main.c: 76: if(TXB0CONbits.TXERR){
  2772  000046  010F               	movlb	15	; () banked
  2773  000048  B920               	btfsc	32,4,b	;volatile
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;main.c: 77: LATBbits.LATB1 = 1;
  2777  00004A  828A               	bsf	3978,1,c	;volatile
  2778                           
  2779                           ; BSR set to: 15
  2780                           ;main.c: 79: }
  2781                           ;main.c: 80: IRXIF = 0;
  2782  00004C  9E77               	bcf	3959,7,c	;volatile
  2783  00004E                     i2l126:
  2784                           
  2785                           ;main.c: 81: }
  2786                           ;main.c: 85: if(TMR0IF == 1){
  2787  00004E  A4F2               	btfss	intcon,2,c	;volatile
  2788  000050  D00B               	goto	i2l1646
  2789                           
  2790                           ;main.c: 86: if(!FIRST_SEND){
  2791  000052  500D               	movf	_FIRST_SEND,w,c
  2792  000054  100E               	iorwf	_FIRST_SEND+1,w,c
  2793  000056  A4D8               	btfss	status,2,c
  2794  000058  D006               	goto	i2l1644
  2795                           
  2796                           ;main.c: 87: heartBeatCounter++;
  2797  00005A  0E01               	movlw	1
  2798  00005C  2605               	addwf	_heartBeatCounter,f,c
  2799  00005E  0E00               	movlw	0
  2800  000060  2206               	addwfc	_heartBeatCounter+1,f,c
  2801  000062  2207               	addwfc	_heartBeatCounter+2,f,c
  2802  000064  2208               	addwfc	_heartBeatCounter+3,f,c
  2803  000066                     i2l1644:
  2804                           
  2805                           ;main.c: 88: }
  2806                           ;main.c: 89: TMR0IF = 0;
  2807  000066  94F2               	bcf	intcon,2,c	;volatile
  2808  000068                     i2l1646:
  2809                           
  2810                           ;main.c: 90: }
  2811                           ;main.c: 94: if(TMR1IF == 1){
  2812  000068  A09E               	btfss	3998,0,c	;volatile
  2813  00006A  D049               	goto	i2l137
  2814                           
  2815                           ;main.c: 95: if(MAP_V_BLINK == 1){
  2816  00006C  0421               	decf	_MAP_V_BLINK,w,c
  2817  00006E  1022               	iorwf	_MAP_V_BLINK+1,w,c
  2818  000070  A4D8               	btfss	status,2,c
  2819  000072  D020               	goto	i2l1660
  2820                           
  2821                           ;main.c: 96: blinkCounter++;
  2822  000074  0E01               	movlw	1
  2823  000076  2601               	addwf	_blinkCounter,f,c
  2824  000078  0E00               	movlw	0
  2825  00007A  2202               	addwfc	_blinkCounter+1,f,c
  2826  00007C  2203               	addwfc	_blinkCounter+2,f,c
  2827  00007E  2204               	addwfc	_blinkCounter+3,f,c
  2828                           
  2829                           ;main.c: 98: if(blinkCounter == 13){
  2830  000080  0E0D               	movlw	13
  2831  000082  1801               	xorwf	_blinkCounter,w,c
  2832  000084  1002               	iorwf	_blinkCounter+1,w,c
  2833  000086  1003               	iorwf	_blinkCounter+2,w,c
  2834  000088  1004               	iorwf	_blinkCounter+3,w,c
  2835  00008A  B4D8               	btfsc	status,2,c
  2836                           
  2837                           ;main.c: 99: LATBbits.LATB5 = 0;
  2838  00008C  9A8A               	bcf	3978,5,c	;volatile
  2839                           
  2840                           ;main.c: 100: }
  2841                           ;main.c: 101: if(blinkCounter > 26){
  2842  00008E  BE04               	btfsc	_blinkCounter+3,7,c
  2843  000090  D011               	goto	i2l1660
  2844  000092  5004               	movf	_blinkCounter+3,w,c
  2845  000094  1003               	iorwf	_blinkCounter+2,w,c
  2846  000096  1002               	iorwf	_blinkCounter+1,w,c
  2847  000098  E104               	bnz	i2u36_40
  2848  00009A  0E1B               	movlw	27
  2849  00009C  5C01               	subwf	_blinkCounter,w,c
  2850  00009E  A0D8               	btfss	status,0,c
  2851  0000A0  D009               	goto	i2l1660
  2852  0000A2                     i2u36_40:
  2853                           
  2854                           ;main.c: 102: LATBbits.LATB5 = 1;
  2855  0000A2  8A8A               	bsf	3978,5,c	;volatile
  2856                           
  2857                           ;main.c: 103: blinkCounter = 0;
  2858  0000A4  0E00               	movlw	0
  2859  0000A6  6E01               	movwf	_blinkCounter,c
  2860  0000A8  0E00               	movlw	0
  2861  0000AA  6E02               	movwf	_blinkCounter+1,c
  2862  0000AC  0E00               	movlw	0
  2863  0000AE  6E03               	movwf	_blinkCounter+2,c
  2864  0000B0  0E00               	movlw	0
  2865  0000B2  6E04               	movwf	_blinkCounter+3,c
  2866  0000B4                     i2l1660:
  2867                           
  2868                           ;main.c: 104: }
  2869                           ;main.c: 106: }
  2870                           ;main.c: 108: if(MAP_H_BLINK == 1){
  2871  0000B4  041B               	decf	_MAP_H_BLINK,w,c
  2872  0000B6  101C               	iorwf	_MAP_H_BLINK+1,w,c
  2873  0000B8  A4D8               	btfss	status,2,c
  2874  0000BA  D020               	goto	i2l1672
  2875                           
  2876                           ;main.c: 109: blinkCounter++;
  2877  0000BC  0E01               	movlw	1
  2878  0000BE  2601               	addwf	_blinkCounter,f,c
  2879  0000C0  0E00               	movlw	0
  2880  0000C2  2202               	addwfc	_blinkCounter+1,f,c
  2881  0000C4  2203               	addwfc	_blinkCounter+2,f,c
  2882  0000C6  2204               	addwfc	_blinkCounter+3,f,c
  2883                           
  2884                           ;main.c: 111: if(blinkCounter == 13){
  2885  0000C8  0E0D               	movlw	13
  2886  0000CA  1801               	xorwf	_blinkCounter,w,c
  2887  0000CC  1002               	iorwf	_blinkCounter+1,w,c
  2888  0000CE  1003               	iorwf	_blinkCounter+2,w,c
  2889  0000D0  1004               	iorwf	_blinkCounter+3,w,c
  2890  0000D2  B4D8               	btfsc	status,2,c
  2891                           
  2892                           ;main.c: 112: LATBbits.LATB6 = 0;
  2893  0000D4  9C8A               	bcf	3978,6,c	;volatile
  2894                           
  2895                           ;main.c: 113: }
  2896                           ;main.c: 114: if(blinkCounter > 26){
  2897  0000D6  BE04               	btfsc	_blinkCounter+3,7,c
  2898  0000D8  D011               	goto	i2l1672
  2899  0000DA  5004               	movf	_blinkCounter+3,w,c
  2900  0000DC  1003               	iorwf	_blinkCounter+2,w,c
  2901  0000DE  1002               	iorwf	_blinkCounter+1,w,c
  2902  0000E0  E104               	bnz	i2u39_40
  2903  0000E2  0E1B               	movlw	27
  2904  0000E4  5C01               	subwf	_blinkCounter,w,c
  2905  0000E6  A0D8               	btfss	status,0,c
  2906  0000E8  D009               	goto	i2l1672
  2907  0000EA                     i2u39_40:
  2908                           
  2909                           ;main.c: 115: LATBbits.LATB6 = 1;
  2910  0000EA  8C8A               	bsf	3978,6,c	;volatile
  2911                           
  2912                           ;main.c: 116: blinkCounter = 0;
  2913  0000EC  0E00               	movlw	0
  2914  0000EE  6E01               	movwf	_blinkCounter,c
  2915  0000F0  0E00               	movlw	0
  2916  0000F2  6E02               	movwf	_blinkCounter+1,c
  2917  0000F4  0E00               	movlw	0
  2918  0000F6  6E03               	movwf	_blinkCounter+2,c
  2919  0000F8  0E00               	movlw	0
  2920  0000FA  6E04               	movwf	_blinkCounter+3,c
  2921  0000FC                     i2l1672:
  2922                           
  2923                           ;main.c: 117: }
  2924                           ;main.c: 119: }
  2925                           ;main.c: 124: TMR1IF = 0;
  2926  0000FC  909E               	bcf	3998,0,c	;volatile
  2927  0000FE                     i2l137:
  2928  0000FE  C050  FFF5         	movff	??_ISR+13,tablat
  2929  000102  C04F  FFF8         	movff	??_ISR+12,tblptru
  2930  000106  C04E  FFF7         	movff	??_ISR+11,tblptrh
  2931  00010A  C04D  FFF6         	movff	??_ISR+10,tblptrl
  2932  00010E  C04C  FFF4         	movff	??_ISR+9,prodh
  2933  000112  C04B  FFF3         	movff	??_ISR+8,prodl
  2934  000116  C04A  FFDA         	movff	??_ISR+7,fsr2h
  2935  00011A  C049  FFD9         	movff	??_ISR+6,fsr2l
  2936  00011E  C048  FFE2         	movff	??_ISR+5,fsr1h
  2937  000122  C047  FFE1         	movff	??_ISR+4,fsr1l
  2938  000126  C046  FFEA         	movff	??_ISR+3,fsr0h
  2939  00012A  C045  FFE9         	movff	??_ISR+2,fsr0l
  2940  00012E  C044  FFFB         	movff	??_ISR+1,pclatu
  2941  000132  C043  FFFA         	movff	??_ISR,pclath
  2942  000136  9254               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2943  000138  0011               	retfie		f
  2944  00013A                     __end_of_ISR:
  2945                           	opt stack 0
  2946  0000                     pclatu	equ	0xFFB
  2947                           pclath	equ	0xFFA
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           prodh	equ	0xFF4
  2953                           prodl	equ	0xFF3
  2954                           intcon	equ	0xFF2
  2955                           postinc0	equ	0xFEE
  2956                           fsr0h	equ	0xFEA
  2957                           fsr0l	equ	0xFE9
  2958                           wreg	equ	0xFE8
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           pclatu	equ	0xFFB
  2965                           pclath	equ	0xFFA
  2966                           tblptru	equ	0xFF8
  2967                           tblptrh	equ	0xFF7
  2968                           tblptrl	equ	0xFF6
  2969                           tablat	equ	0xFF5
  2970                           prodh	equ	0xFF4
  2971                           prodl	equ	0xFF3
  2972                           intcon	equ	0xFF2
  2973                           postinc0	equ	0xFEE
  2974                           fsr0h	equ	0xFEA
  2975                           fsr0l	equ	0xFE9
  2976                           wreg	equ	0xFE8
  2977                           fsr1h	equ	0xFE2
  2978                           fsr1l	equ	0xFE1
  2979                           fsr2h	equ	0xFDA
  2980                           fsr2l	equ	0xFD9
  2981                           status	equ	0xFD8
  2982                           
  2983                           	psect	rparam
  2984  0000                     pclatu	equ	0xFFB
  2985                           pclath	equ	0xFFA
  2986                           tblptru	equ	0xFF8
  2987                           tblptrh	equ	0xFF7
  2988                           tblptrl	equ	0xFF6
  2989                           tablat	equ	0xFF5
  2990                           prodh	equ	0xFF4
  2991                           prodl	equ	0xFF3
  2992                           intcon	equ	0xFF2
  2993                           postinc0	equ	0xFEE
  2994                           fsr0h	equ	0xFEA
  2995                           fsr0l	equ	0xFE9
  2996                           wreg	equ	0xFE8
  2997                           fsr1h	equ	0xFE2
  2998                           fsr1l	equ	0xFE1
  2999                           fsr2h	equ	0xFDA
  3000                           fsr2l	equ	0xFD9
  3001                           status	equ	0xFD8
  3002                           
  3003                           	psect	temp
  3004  000054                     btemp:
  3005                           	opt stack 0
  3006  000054                     	ds	1
  3007  0000                     int$flags	set	btemp
  3008                           pclatu	equ	0xFFB
  3009                           pclath	equ	0xFFA
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           intcon	equ	0xFF2
  3017                           postinc0	equ	0xFEE
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           fsr1h	equ	0xFE2
  3022                           fsr1l	equ	0xFE1
  3023                           fsr2h	equ	0xFDA
  3024                           fsr2l	equ	0xFD9
  3025                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         66
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      83
    BANK0           160     11      11
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ECAN_Transmit
    _updateInputs->_readAnalog
    _readAnalog->_Delay

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1186
                           _CANSetup
                              _Delay
                       _ECAN_Receive
                      _ECAN_Transmit
                         _InitDevice
                   _checkAccelerator
                     _checkBacklight
                         _checkBrake
                     _checkDirection
                       _checkH_blink
                     _checkSafetyPin
                       _checkV_blink
                             _danger
                    _setup_Interrupt
                           _unZipCAN
                       _updateInputs
 ---------------------------------------------------------------------------------
 (1) _updateInputs                                         0     0      0     139
                         _readAnalog
 ---------------------------------------------------------------------------------
 (2) _readAnalog                                           2     0      2     139
                                              2 BANK0      2     0      2
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     0      2     139
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _unZipCAN                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _danger                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkV_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSafetyPin                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkH_blink                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDirection                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBrake                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkBacklight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkAccelerator                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitDevice                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Transmit                                       11     1     10     881
                                              0 BANK0     11     1     10
 ---------------------------------------------------------------------------------
 (1) _ECAN_Receive                                         1     1      0      27
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANSetup
   _Delay
   _ECAN_Receive
   _ECAN_Transmit
   _InitDevice
   _checkAccelerator
   _checkBacklight
   _checkBrake
   _checkDirection
   _checkH_blink
   _checkSafetyPin
   _checkV_blink
   _danger
   _setup_Interrupt
   _unZipCAN
   _updateInputs
     _readAnalog
       _Delay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B       B       5        6.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      53       1       88.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E       6        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Dec 18 22:48:58 2015

            _MAP_BACKLIGHT 0011       __end_of_checkV_blink 0728            _MAP_ACCELERATOR 000F  
          ?_checkBacklight 0043                __CFG_BORV$3 000000     __end_of_checkSafetyPin 0820  
        ?_checkAccelerator 0043               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                        l444 05DC  
                      l540 085E                        l446 061C                        l663 0798  
             __CFG_CPB$OFF 000000                        u600 07DC               __CFG_CPD$OFF 000000  
                      u620 0704                        _ISR 0008                        u615 07EC  
                      u616 07EE                        u640 06C8                        u720 0532  
                      u635 0724                        u636 0726                        u565 01FE  
                      u590 0846                        u670 082E                        u655 06D8  
                      u575 0234                        u656 06DA                        u680 0816  
                      u665 06F2                        u585 026A                        u690 07C2  
                      u666 06F4         ??_checkAccelerator 0060                        wreg 000FE8  
                     ?_ISR 0043              _MAP_HEARTBEAT 0019                       _B0D0 000E86  
                     _B0D1 000E87                       _B0D2 000E88                       _B0D3 000E89  
                     _B0D4 000E8A                       _B0D5 000E8B                       _B0D6 000E8C  
                     _B0D7 000E8D              _MAP_DIRECTION 0017                       l2000 0536  
                     l1816 0286                       l1850 0382                       l1852 0386  
                     l1844 0366                       l1856 0394                       l1848 0374  
                     l1880 065A                       l1768 07F0                       l1858 03A0  
                     l1882 0660                       l1894 0674                       l1984 04F0  
                     l1996 0520            ?_checkDirection 0043                       _LATA 000F89  
                     _LATB 000F8A                       _LATC 000F8B                       _main 04B8  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0054                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 013A              __CFG_IESO$OFF 000000  
         __end_of_CANSetup 03AC              __CFG_MCLRE$ON 000000               ___param_bank 000010  
                    ??_ISR 0043              _MAP_SAFETYPIN 001D            ?_checkSafetyPin 0043  
                    _B0DLC 000E85                      ?_main 0043                      _BSEL0 000E7D  
                    i2l126 004E                      i2l137 00FE                      _MSEL0 000E79  
                    _MSEL1 000E7A                      _MSEL2 000E7B                      _MSEL3 000E7C  
                    _IRXIF 007BBF                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94                      _Delay 07F0              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
                    _count 0053                      tablat 000FF5                      status 000FD8  
               _InitDevice 03AC      __size_of_ECAN_Receive 00DE            __initialization 0728  
             __end_of_main 059A                     ??_main 006B              __activetblptr 000000  
           __CFG_RETEN$OFF 000000                     ?_Delay 0060                     _B0EIDH 000E83  
                   _B0EIDL 000E84           ECAN_Transmit@DLC 0061                     _B0SIDH 000E81  
                   _B0SIDL 000E82                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     _CANCON 000F6F                     _ADRESH 000FC4  
                   _ANCON0 000F5D                     _ANCON1 000F5C      __size_of_checkH_blink 003C  
             _ECAN_Receive 059A             _TEMP_MAP_BRAKE 0027            __CFG_BBSIZ$BB2K 000000  
                   i2l1660 00B4                     i2l1644 0066                     i2l1646 0068  
                   i2l1672 00FC   __size_of_setup_Interrupt 002C                     _RXB0D0 000F66  
                   _RXB0D1 000F67                     _RXB0D2 000F68                     _RXB0D3 000F69  
                   _RXB0D4 000F6A                     _RXB1D0 000F36                     _RXB0D5 000F6B  
                   _RXB1D1 000F37                     _RXB0D6 000F6C                     _RXB1D2 000F38  
                   _RXB0D7 000F6D                     _RXB1D3 000F39                     _RXB1D4 000F3A  
                   _RXB1D5 000F3B                     _RXB1D6 000F3C                     _RXB1D7 000F3D  
                   _TMR0IF 007F92                     _TMR1IF 007CF0                     _TXB0D0 000F26  
                   _TXB0D1 000F27                     _TXB0D2 000F28                     _TXB0D3 000F29  
                   _TXB0D4 000F2A                     _TXB0D5 000F2B                     _TXB0D6 000F2C  
                   _TXB0D7 000F2D      __size_of_checkV_blink 0032             __CFG_XINST$OFF 000000  
           __CFG_STVREN$ON 000000                     _danger 085E           _heartBeatCounter 0005  
                   clear_0 072E               _checkH_blink 06BA           __end_of_unZipCAN 0282  
             __pdataCOMRAM 0051                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ?_CANSetup 0043               _checkV_blink 06F6  
               __accesstop 0060    __end_of__initialization 074C   ECAN_Transmit@TRANSMIT_ID 0062  
     _TEMP_MAP_ACCELERATOR 0023              ___rparam_used 000001           ??_checkBacklight 0060  
              ?_InitDevice 0043              __end_of_Delay 0808             __pcstackCOMRAM 0043  
   __size_of_ECAN_Transmit 0042                    ??_Delay 0062           ??_checkDirection 0060  
               ??_CANSetup 0060                 _checkBrake 0838  __size_of_checkAccelerator 0026  
          __CFG_PLLCFG$OFF 000000                 __pnvCOMRAM 0053          ??_setup_Interrupt 0060  
         ??_checkSafetyPin 0060          ECAN_Transmit@SIDH 006A          ECAN_Transmit@SIDL 0060  
                  ?_danger 0043                  _B0CONbits 000E80                    _ECANCON 000F72  
             _blinkCounter 0001                    _BITDATA 0035                    _BRGCON1 000E43  
                  _BRGCON2 000E44                    _BRGCON3 000E45           __CFG_CANMX$PORTB 000000  
      __size_of_InitDevice 010C           _BATTERISTATUS_ID 0051                    _RXB0DLC 000F65  
                  _RXB1DLC 000F35                    i2u36_40 00A2                    _RXB0CON 000F60  
                  _RXB1CON 000F30                    i2u39_40 00EA                    _TXB0DLC 000F25  
                  _RXFCON0 000E46                    _RXFCON1 000E47              _ECAN_Transmit 0678  
          __CFG_PWRTEN$OFF 000000                    __Hparam 0000                    __Lparam 0000  
                ?_unZipCAN 0043                 _readAnalog 0782            __size_of_danger 0006  
                  __pcinit 0728                    __ramtop 0F00                    __ptext0 04B8  
                  __ptext1 0850                    __ptext2 0782                    __ptext3 07F0  
                  __ptext4 013E                    __ptext5 0756                    __ptext6 085E  
                  __ptext7 06F6                    __ptext8 0808                    __ptext9 06BA  
                _T0CONbits 000FD5               __size_of_ISR 0132                  _T1CONbits 000FCD  
         _TEMP_ACCELERATOR 0036          __CFG_MSSPMSK$MSK7 000000                    _temp_D2 0038  
                  _temp_D3 0039                    _temp_D4 003A                    _temp_D5 003B  
                  _temp_D6 003C                    _temp_D7 003D             ?_ECAN_Transmit 0060  
              ?_checkBrake 0043                  _MAP_BRAKE 0015       end_of_initialization 074C  
        _MAP_BATTERYSTATUS 0013                 ??_unZipCAN 0060           _buttonWasPressed 0037  
                  postinc0 000FEE           __CFG_FOSC$INTIO2 000000          __CFG_SOSCSEL$HIGH 000000  
         _checkAccelerator 07A8          __size_of_CANSetup 012A               ??_InitDevice 0060  
            ?_updateInputs 0043                ?_readAnalog 0062        __size_of_checkBrake 0018  
           __end_of_danger 0864              __pidataCOMRAM 0864               _MAP_VELOCITY 001F  
      start_initialization 0728            ??_ECAN_Transmit 006A                __end_of_ISR 013A  
       __end_of_InitDevice 04B8            _setup_Interrupt 0756                _CANSTATbits 000F6E  
           ??_updateInputs 0064                   ??_danger 0060                __pbssCOMRAM 0001  
            __pcstackBANK0 0060        __size_of_readAnalog 0026         ECAN_Transmit@DATA1 0063  
       ECAN_Transmit@DATA2 0064         ECAN_Transmit@DATA3 0065         ECAN_Transmit@DATA4 0066  
       ECAN_Transmit@DATA5 0067         ECAN_Transmit@DATA6 0068         ECAN_Transmit@DATA7 0069  
                __pintcode 0008          __size_of_unZipCAN 0144    __size_of_checkBacklight 0022  
           _heartbeatCount 0033    __end_of_setup_Interrupt 0782             __size_of_Delay 0018  
                 _CANSetup 0282               ??_checkBrake 0060              ?_ECAN_Receive 0043  
                 _LATAbits 000F89                   _LATBbits 000F8A    __size_of_checkDirection 0018  
                 _PIE1bits 000F9D           _TEMP_MAP_H_BLINK 002D                  _temp_EIDH 003F  
                _temp_EIDL 0040                  _temp_SIDH 0041                  _temp_SIDL 0042  
                 _PIR5bits 000F77                   _RXB0EIDH 000F63                   _RXB0EIDL 000F64  
                 _RXB1EIDH 000F33                   _RXB1EIDL 000F34                   _RCONbits 000FD0  
                 _MOTOR_ID 0052                   _RXB0SIDH 000F61                   _RXB0SIDL 000F62  
                 _RXB1SIDH 000F31                   _RXF0EIDH 000EE2                   _RXB1SIDL 000F32  
                 _RXF0EIDL 000EE3                   _RXF1EIDH 000EE6                   _RXF1EIDL 000EE7  
                 _RXF2EIDH 000EEA                   _RXF2EIDL 000EEB                   _RXF0SIDH 000EE0  
                 _RXF0SIDL 000EE1                   _TXB0EIDH 000F23                   _RXF1SIDH 000EE4  
                 _TXB0EIDL 000F24                   _RXF1SIDL 000EE5                   _RXF2SIDH 000EE8  
                 _RXF2SIDL 000EE9                   _RXM0EIDH 000EFA                   _RXM0EIDL 000EFB  
                 _TXB0SIDH 000F21                   _RXM1EIDH 000EFE                   _TXB0SIDL 000F22  
                 _RXM1EIDL 000EFF           _TEMP_MAP_V_BLINK 0031                   _RXFBCON0 000E71  
                 _RXFBCON1 000E72                   _RXFBCON2 000E73                   _RXFBCON3 000E74  
                 _RXFBCON4 000E75                   _RXFBCON5 000E76                   _RXFBCON6 000E77  
                 _RXFBCON7 000E78                   _RXM0SIDH 000EF8                   _RXM0SIDL 000EF9  
                 _RXM1SIDH 000EFC                   _RXM1SIDL 000EFD   __end_of_checkAccelerator 07CE  
       __end_of_checkBrake 0850                 _ADCON0bits 000FC2                 _ADCON2bits 000FC0  
    ECAN_Receive@RXMsgFlag 0060              ?_checkH_blink 0043    __size_of_checkSafetyPin 0018  
     __end_of_updateInputs 085E              ?_checkV_blink 0043             ??_ECAN_Receive 0060  
              _MAP_H_BLINK 001B                _MAP_V_BLINK 0021                   __Hrparam 0000  
                 __Lrparam 0000               ??_readAnalog 0064         __CFG_BOREN$SBORDIS 000000  
       _TEMP_MAP_BACKLIGHT 0025             ??_checkH_blink 0060           _interruptCounter 0009  
         ?_setup_Interrupt 0043             ??_checkV_blink 0060                   __ptext10 0820  
                 __ptext11 0838                   __ptext12 07CE                   __ptext13 07A8  
               _T1GCONbits 000FAA                   __ptext14 03AC                   __ptext15 0678  
                 __ptext16 059A                   __ptext17 0282         __end_of_readAnalog 07A8  
            __size_of_main 00E2         _TEMP_MAP_HEARTBEAT 002B         _TEMP_MAP_DIRECTION 0029  
               _FIRST_SEND 000D                   _temp_DLC 003E                   _unZipCAN 013E  
                 int$flags 0054             _checkBacklight 07CE        __CFG_INTOSCSEL$HIGH 000000  
               Delay@count 0060                _RXB0CONbits 000F60                _RXB1CONbits 000F30  
       __CFG_WDTEN$SWDTDIS 000000                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       _TEMP_MAP_SAFETYPIN 002F      __end_of_ECAN_Transmit 06BA                   intlevel2 0000  
           _checkDirection 0820                _TXB0CONbits 000F20                 _OSCCONbits 000FD3  
   __end_of_checkBacklight 07F0         __CFG_WDTPS$1048576 000000       __end_of_ECAN_Receive 0678  
    __size_of_updateInputs 000E             _checkSafetyPin 0808     __end_of_checkDirection 0838  
      __CFG_BORPWR$ZPBORMV 000000       __end_of_checkH_blink 06F6               _updateInputs 0850  
